{"paper_id": "1e4e1f0244348c74423087362d72302b3c213898", "metadata": {"title": "When Similarities Among Devices are Taken for Granted: Another Look at Portability", "authors": [{"first": "Unai", "middle": [], "last": "Rioja", "suffix": "", "affiliation": {"laboratory": "", "institution": "Radboud University", "location": {"settlement": "Nijmegen", "country": "The Netherlands"}}, "email": "urioja@ikerlan.es"}, {"first": "Lejla", "middle": [], "last": "Batina", "suffix": "", "affiliation": {"laboratory": "", "institution": "Radboud University", "location": {"settlement": "Nijmegen", "country": "The Netherlands"}}, "email": ""}, {"first": "Igor", "middle": [], "last": "Armendariz", "suffix": "", "affiliation": {}, "email": "iarmendariz@ikerlan.es"}]}, "abstract": [{"text": "The original idea of profiling implies attacking one device with a leakage model generated from an \"identical copy\", but this concept cannot be always enforced. The leakage model is commonly generated with traces from an \"open device\", assuming that a model which works for one device should work for another copy as well. In practice, applying a leakage model to a different copy of the same device (commonly called portability) is a hard problem to deal with, as intrinsic differences in the devices or the experimental setups used to obtain the traces cause behavioural variations which lead to an unsuccessful attack. In this paper we propose a novel similarity assessment technique that allows evaluators to quantify the differences among various copies of the same device. Moreover, we support this technique with actual experiments to show that this metric is directly related to the portability issue. Finally, we derive a method that improves the performance of template attacks.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Nowadays profiling attacks are considered the most powerful kind of Side-Channel Attacks (SCAs). The idea behind profiling is different from the traditional concept of Differential Power Analysis (DPA) [3, 4, 10, 19] , for which the attack is separated from the device (e.g., every device that implements AES encryption is susceptible to the attacks using these techniques). In profiling attacks, the goal of the attacker is to build a leakage model of a particular device and to recover sensitive information comparing that model with the actual power consumption of the device. The first requirement to carry out this kind of SCA is to have, at least, two devices: the attacked device or the device under test (DUT), and another identical hardware device over which we have full control. The reason behind is that the attack requires two different stages: a profiling stage (with a \"copy\" of the device), in which we model the power consumption (side-channel), and an attack phase (with the \"real\" device), in which we use the generated model to obtain the secret parameter with only one or a few traces. Conversely, even though the original idea of a profiling attack is to generate the power consumption model for an \"identical\" copy of the attacked device, this is not always guaranteed in practice. This portability issue is often underestimated in practice, although some previous works suggest that in real-world setups small differences in the production of different devices, aging or even environmental changes during the measurements cause different behaviours of those devices, even leading to an unsuccessful attack [1, 3, 6, 10, 11, 14, 20, 29] .", "cite_spans": [{"start": 202, "end": 205, "text": "[3,", "ref_id": "BIBREF3"}, {"start": 206, "end": 208, "text": "4,", "ref_id": "BIBREF4"}, {"start": 209, "end": 212, "text": "10,", "ref_id": "BIBREF11"}, {"start": 213, "end": 216, "text": "19]", "ref_id": "BIBREF20"}, {"start": 1630, "end": 1633, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 1634, "end": 1636, "text": "3,", "ref_id": "BIBREF3"}, {"start": 1637, "end": 1639, "text": "6,", "ref_id": "BIBREF7"}, {"start": 1640, "end": 1643, "text": "10,", "ref_id": "BIBREF11"}, {"start": 1644, "end": 1647, "text": "11,", "ref_id": "BIBREF12"}, {"start": 1648, "end": 1651, "text": "14,", "ref_id": "BIBREF15"}, {"start": 1652, "end": 1655, "text": "20,", "ref_id": "BIBREF21"}, {"start": 1656, "end": 1659, "text": "29]", "ref_id": null}], "ref_spans": [], "section": "Introduction"}, {"text": "In this work, our goal is to show how these dissimilarities can be addressed from the evaluation point of view, measuring how similar two different devices are and giving insights on how successful a portable profiling attack could be. Moreover, although performing this kind of attack is challenging, in this work we show the feasibility of a portable template attack in a realistic setup. We also provide some suggestions to improve the success rate of these attacks with our new point of interest (POI) selection technique.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "Our main contribution is a novel similarity assessment technique with which, from an evaluation point of view, general similarities/dissimilarities between \"identical\" copies of the same device can be quantified. In addition, our work has revealed some other contributions that are all detailed as follows:", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "-This paper proposes the usage of the well-known Dynamic Time Warping (DTW from now on) statistical tool as a similarity assessment tool. Our approach shows that the warped distance between two specific graphics can quantify the similarities/dissimilarities between different devices or tracesets. -We showcase the proposed technique with several experiments (portable template attacks with four different copies of the same device), demonstrating that the performance of the attack is directly related to this metric and hence the more similar two copies of the same device are (or two different sets of traces from the same device) the better results will be obtained. -Finally, we propose an alternative POI selection technique which helps improving the performance of portable template attacks. This technique is also supported by the aforementioned experiments, showing how an unsuccessful portable attack can be turned into a successful attack by choosing the \"best\" points of interest while building the templates.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "The paper is organized as follows, Sect. 2 summarizes the state of the art and the related work on this topic. Section 3 highlights the common issues with portability as a starting point for our work. Section 4 explains the details of DTW and our similarity assessment technique. Section 5 contains the experimental results supporting our similarity assessment technique and our new POI selection technique (which is also explained in a practical manner in this section). Finally, Sect. 6 draws the conclusions.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "As mentioned above, profiling attacks are dominant in side-channel analysis nowadays. In the profiling phase, the model of the device can be generated by using standard classification techniques like in Template attacks [7, 28] , Support Vector Machine (SVM) [15, 16, 21] , Random Forest (RF) [22] , regression or the Stochastic models approach [32] or recently introduced Deep learning techniques [5, 24, 27] . In the attacking phase, the model is applied and the secret key is guessed. Template attacks and machine learning are the two most popular approaches [23] .", "cite_spans": [{"start": 220, "end": 223, "text": "[7,", "ref_id": "BIBREF8"}, {"start": 224, "end": 227, "text": "28]", "ref_id": "BIBREF29"}, {"start": 259, "end": 263, "text": "[15,", "ref_id": "BIBREF16"}, {"start": 264, "end": 267, "text": "16,", "ref_id": "BIBREF17"}, {"start": 268, "end": 271, "text": "21]", "ref_id": "BIBREF22"}, {"start": 293, "end": 297, "text": "[22]", "ref_id": "BIBREF23"}, {"start": 345, "end": 349, "text": "[32]", "ref_id": "BIBREF33"}, {"start": 398, "end": 401, "text": "[5,", "ref_id": "BIBREF6"}, {"start": 402, "end": 405, "text": "24,", "ref_id": "BIBREF25"}, {"start": 406, "end": 409, "text": "27]", "ref_id": "BIBREF28"}, {"start": 562, "end": 566, "text": "[23]", "ref_id": "BIBREF24"}], "ref_spans": [], "section": "State of the Art"}, {"text": "In this work, we focus on classical Template attacks because it is a wellknown and understood technique in the field of SCA. Moreover, it should be noticed that although template attacks usually require more effort of an expert with signal processing capabilities, they allow the attacker/evaluator to focus on specific parts of the leakage keeping more control in the process (which is not always possible with deep learning techniques).", "cite_spans": [], "ref_spans": [], "section": "State of the Art"}, {"text": "Template attacks are the original form of profiling attacks as proposed for SCA by Chari et al. [7] . These attacks are based on building a multivariate model of the probability distribution of the leakage. The Probability Density Function (PDF) is usually computed assuming that the leakages follow a Gaussian distribution, as in the case of unprotected devices (devices without SCA countermeasures). This is a parametric estimation and we focus on this kind of templates technique because of its fast convergence and the fact that it is widely used and consolidated by many previous works. Nevertheless, it should be mentioned that there are other non-parametric estimations that are able to capture any distribution (which might be helpful with protected devices) like histogram and kernel-based estimators and also some other advanced tools [33] .", "cite_spans": [{"start": 96, "end": 99, "text": "[7]", "ref_id": "BIBREF8"}, {"start": 845, "end": 849, "text": "[33]", "ref_id": "BIBREF34"}], "ref_spans": [], "section": "Template Attacks"}, {"text": "The main goal in a \"traditional\" template attack is to deduce the secret (key) used to perform cryptographic operations. Thus, the attacker has to first take measurements of some device's physical property (commonly the power consumption or the electromagnetic radiation emitted by the device) during the manipulation of some intermediate value iv = f (p, k) related to the plaintext p and the secret key k. In the profiling phase the attacker uses a set of n p profiling traces (T p,k ) to build a Gaussian multivariate model (pdf) for each possible iv. In order to do that, the mean vector \u03bc p,k and the covariance matrix p,k are estimated for each iv, creating the so-called templates. Then, in the attack phase, from a set of n a real power traces and its input data (plaintext), the attacker tries to guess the correct iv value (or its Hamming Weight) by using the maximum likelihood principle. Since iv = f (p, k), knowing iv and p the secret key k can be recovered.", "cite_spans": [], "ref_spans": [], "section": "Template Attacks"}, {"text": "Template attacks are optimal from an information-theoretic point of view but in practice, they have several limitations: preprocessing dependency (the effort of an expert in the field is mandatory most of the times), computational complexity problems and the need for dimensionality reduction. The latter is usually solved by selecting only a subset of the typically huge amount of samples in each power trace (Points of Interest [POI] selection [28] ), applying another data-dimensionality reduction method as Principal Component Analysis (PCA) [2, 34] or Fisher's Linear Discriminant Analysis (LDA) [12, 18] . Due to the high computational requirements of the other techniques, in this work, we reduce the dimensionality of the problem by selecting a few samples (Points of Interest). As we have mentioned, it also allows us to focus only on specific parts of the leakage and improve the results of the \"classical\" template attack (Sect. 5).", "cite_spans": [{"start": 446, "end": 450, "text": "[28]", "ref_id": "BIBREF29"}, {"start": 546, "end": 549, "text": "[2,", "ref_id": "BIBREF2"}, {"start": 550, "end": 553, "text": "34]", "ref_id": "BIBREF36"}, {"start": 601, "end": 605, "text": "[12,", "ref_id": "BIBREF13"}, {"start": 606, "end": 609, "text": "18]", "ref_id": "BIBREF19"}], "ref_spans": [], "section": "Template Attacks"}, {"text": "Although having two identical devices to perform a profiling attack is mandatory, in practice this is not always possible. The traces for the profiling phase and the attack phase are usually captured from the same device in most of the works on this topic [7, 9, 13] . Attacking a second device with a model generated with a first device is often considered trivial, while in practice this is not the case. Even if two devices are clones (\"identical\" copies of the same device) there always exist differences in the construction of the devices that can cause different behaviours in timing, voltage, etc. There could be different reasons for this, such as faults in the manufacturing process, aging, slight differences in the resistance and/or capacitance of the circuit, etc. Moreover, when two measurements are taken in different time moments they will often cause deviations in the acquired power traces, which could lead to an unsuccessful attack [1, 11, 29] . More precisely, we are referring to various small variations in the experimental setup such as I/O interference (serial port, USB, Radio, etc.), influence of the past state, memory management, garbage collection, differences in magnetic field penetration (while taking electromagnetic measurements), changes in environmental parameters (temperature, humidity, electromagnetic noise, etc.), resonance due to LC and RC oscillators, among other phenomenon.", "cite_spans": [{"start": 256, "end": 259, "text": "[7,", "ref_id": "BIBREF8"}, {"start": 260, "end": 262, "text": "9,", "ref_id": "BIBREF10"}, {"start": 263, "end": 266, "text": "13]", "ref_id": "BIBREF14"}, {"start": 951, "end": 954, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 955, "end": 958, "text": "11,", "ref_id": "BIBREF12"}, {"start": 959, "end": 962, "text": "29]", "ref_id": null}], "ref_spans": [], "section": "Portability"}, {"text": "To the best of our knowledge, there are not many papers discussing the portability of profiling attacks. The work of Elaabid et al. is introducing the portability issue and showing how waveform realignment and acquisition campaigns normalization can improve the performance of portable template attacks [11] . The work of Choudary et al. focuses on differences between devices when performing portable template attacks while attacking four different copies of the same device [8, 10] . A more recent work successfully implements a portable template attack over a wireless keyboard performing AES encryption [20] . In the CHES 2018 Side Channel Contest CTF, portability was also considered, and the winning attack was able to obtain a 100% of success in all devices [14] . In [6] , authors considered the usage of several devices during the various stages of a profiling attack in order to attack an RSA implementation. Bhasin et al. have recently made a comparison between different machine learning techniques using portable profiling attacks, but they only focused on machine learning techniques [3] .", "cite_spans": [{"start": 303, "end": 307, "text": "[11]", "ref_id": "BIBREF12"}, {"start": 476, "end": 479, "text": "[8,", "ref_id": "BIBREF9"}, {"start": 480, "end": 483, "text": "10]", "ref_id": "BIBREF11"}, {"start": 607, "end": 611, "text": "[20]", "ref_id": "BIBREF21"}, {"start": 765, "end": 769, "text": "[14]", "ref_id": "BIBREF15"}, {"start": 775, "end": 778, "text": "[6]", "ref_id": "BIBREF7"}, {"start": 1098, "end": 1101, "text": "[3]", "ref_id": "BIBREF3"}], "ref_spans": [], "section": "Portability"}, {"text": "Our approach is orthogonal to all those works as we show a general way to find and quantify differences between clone devices, by obtaining a measurement of its dissimilarity. This metric is directly linked to portability: the more similar two devices are, the better performance the portable template attack will achieve and vice versa. Moreover, we show how this information can be used in the POI selection and we propose an improved POI selection technique, which assists in finding the optimal leakage points for different devices.", "cite_spans": [], "ref_spans": [], "section": "Portability"}, {"text": "As mentioned in Sect. 2.2, to perform a portable profiling attack is a challenging task, mainly because the behaviour of two theoretically identical devices could be (slightly) different in practice. After several experiments we noticed that the differences between two \"identical\" devices can be seen clearly in the graphics used for POI selection. Those graphics (POI graphs from now on) are generated by applying certain functions to the power traces in order to find the leaking points and select proper POIs for Template Attacks. Below we describe some of the most commonly used techniques:", "cite_spans": [], "ref_spans": [], "section": "The Issue of Portability"}, {"text": "Pearson Correlation Coefficient: This is a widely used metric in statistics, which assesses the linear dependence between two variables x and y [17] . It takes on a value between \u22121 and 1, where 0 means no (linear) correlation and 1 and \u22121 imply the total positive and negative linear correlation respectively. We compute the Pearson correlation coefficient between the data manipulated by the target device and the power consumption traces of the device while processing the data. For a sample of the entire population, the coefficient is defined by Eq. (1):", "cite_spans": [{"start": 144, "end": 148, "text": "[17]", "ref_id": "BIBREF18"}], "ref_spans": [], "section": "The Issue of Portability"}, {"text": "(1) SOSD: SOSD or sum of squared differences was proposed for POIs in [13] and is defined by Eq. (2), wherex yi is the mean of the power traces and the manipulated data is equal to y i . Its value is always positive and highlights big differences in means.", "cite_spans": [{"start": 70, "end": 74, "text": "[13]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "The Issue of Portability"}, {"text": "SOSD", "cite_spans": [], "ref_spans": [], "section": "The Issue of Portability"}, {"text": "SOST: This is the normalized version of SOSD [13] , which is equivalent to the pairwise Student's t-test. It is defined by Eq. (3), where n yi and n yj are the number of traces where y is equal to y i and y j respectively.", "cite_spans": [{"start": 45, "end": 49, "text": "[13]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "The Issue of Portability"}, {"text": "SNR: Signal-to-noise ratios are commonly used in electrical engineering and signal processing. In the context of a side-channel attack, the SNR of a point of a power trace can be computed by Eq. (4), where P exp is the exploitable power consumption and P sw.noise and P el.noise correspond to the noise component (switching noise and electronic noise). In a nutshell, it quantifies how much information is leaking from a point of the power trace. For a deeper explanation of the SNR calculation we refer to [25] .", "cite_spans": [{"start": 507, "end": 511, "text": "[25]", "ref_id": "BIBREF26"}], "ref_spans": [], "section": "The Issue of Portability"}, {"text": "If we compare two POI graphs generated with traces from two \"identical\" copies of the same device, significant differences between them could be observed. The spikes do not occur at the same time and with the same shape (or strength), which can influence the portability of an attack. In Figs. 1, 2 and 3 these differences can be noticed. Figure 1 shows the power traces of two copies of the same device during some internal computations in which an 8-bit sensitive value is stored in memory (Voltage vs Time (samples)). In Fig. 2 the leaking part of the signal (the exact point in which the 8-bit data is stored) is shown. Also, Fig. 3 shows the output of the aforementioned POI selection functions of both devices. It is important to note that there are significant differences in the magnitude and shape of both graphs. Those differences are very problematic when porting a template attack: the POIs selected to generate the templates in the first device will not match with the optimal POIs in the second device. Thus, the portable template attack will probably fail. When performing a Template attack, the highest points of the spikes that appear in the POI selection graph are usually selected as POIs, in order to reduce the dimensionality of the multivariate leakage model and make the attack feasible. However, as these points are selected taking into account only the profiling device, a big spike for one device could be a \"valley\" in others. Moreover, if the spikes match, the results could still be bad if the value in the POI graph is too low. We should ideally select spikes with a value that is high enough to represent leakage. In conclusion, two devices can be \"identical\" copies, but in practice there are often remarkable differences between their leaking points. When we build templates from one device and then try to attack another one, it is crucial that the selected POI represents a significant leakage in both devices. Otherwise, the behaviour modeled with the Gaussian multivariate distribution will not apply to the second device and the attack will fail.", "cite_spans": [], "ref_spans": [{"start": 339, "end": 347, "text": "Figure 1", "ref_id": "FIGREF0"}, {"start": 524, "end": 530, "text": "Fig. 2", "ref_id": "FIGREF1"}, {"start": 630, "end": 636, "text": "Fig. 3", "ref_id": "FIGREF2"}], "section": "The Issue of Portability"}, {"text": "In order to quantify how different two \"identical\" copies of a device are, a similarity assessment technique is proposed next, which is based on the Dynamic Time Warping (DTW) statistical tool.", "cite_spans": [], "ref_spans": [], "section": "Similarity Assessment"}, {"text": "DTW is a well-known algorithm to measure similarity between two temporal sequences and find the most similar points between them. In other words, this technique is able to quantify the similarity between two signals (even if they are not completely aligned) and obtain the optimal match (alignment). In Figs. 4 and 5 the difference between the \"traditional\" euclidean distance and the warped distance is demonstrated. Originally, DTW was used in speech recognition [30] but later on, it has been proved its applicability in several fields like gesture recognition, robotics, manufacturing, etc. This technique has been applied also in the SCA field with the elastic alignment [35] as a special kind of alignment using DTW (FastDTW [31] , more precisely). This kind of alignment was proposed in order to address cryptographic implementations with random delay countermeasures. Afterwards, Muijrers et al. proposed another alignment algorithm which can deal with this countermeasure [26] . This method can align traces with less computational effort than elastic alignment (DTW algorithm is relatively computationally costly, depending on the length of the path). However, we now propose the usage of DTW algorithm for an entirely different task: assessing differences between tracesets or devices. Our approach is to use DTW to quantify how similar two devices are by measuring the similarity of two temporal sequences representing the leakage of each device.", "cite_spans": [{"start": 465, "end": 469, "text": "[30]", "ref_id": "BIBREF31"}, {"start": 676, "end": 680, "text": "[35]", "ref_id": "BIBREF37"}, {"start": 731, "end": 735, "text": "[31]", "ref_id": "BIBREF32"}, {"start": 981, "end": 985, "text": "[26]", "ref_id": "BIBREF27"}], "ref_spans": [], "section": "Dynamic Time Warping"}, {"text": "Warp Path and Warped Distance are the two main outcomes of the DTW calculation. The former indicates the best alignment between two shapes while the latter is a measure of the similarity between signals. In our case, the DTW algorithm is applied to two discrete time signals (traces), X = x 1 , x 2 , . . . , x i , . . . , x |X| and Y = y 1 , y 2 , . . . , y j , . . . , y |Y | . In order to compute the warp path and warped distance, the DTW algorithm calculates a cost matrix : an |X|-by-|Y | matrix containing the distances between all samples of X and Y . Figure 6 shows an example of the cost matrix (and its warp path) of the two example curves shown in Figs. 4 and 5. Each element of the matrix (i, j ) represents the distance D(i, j) between samples x i and y i (the darker the cell is, the largest distance). The warping path (in dark blue), connects the cells with smaller distance starting from (1, 1) to (|X|, |Y |), and indicates the optimal alignment between those two curves (shown graphically in Fig. 5 ). The cumulative distances of the warping path is what we call warped distance (our similarity indicator between two time series). Formally speaking, the warping path W between two traces X and Y can be defined as:", "cite_spans": [], "ref_spans": [{"start": 560, "end": 568, "text": "Figure 6", "ref_id": null}, {"start": 1012, "end": 1018, "text": "Fig. 5", "ref_id": null}], "section": "Dynamic Time Warping"}, {"text": "Here, K is the length of the warp path and w k = (i, j) the k th element of the path. Also, this path has to follow several constraints. For w k = (i k , j k ) and w k\u22121 = (i k\u22121 , j k\u22121 ) being two consecutive elements of the warp path, the constraints are:", "cite_spans": [], "ref_spans": [], "section": "Dynamic Time Warping"}, {"text": "The boundary condition ensures that every index of both time series is used in the warp path computation while monotonicity and continuity constraints assure that we do not skip any sample and we do not go backwards in time. Several paths could satisfy these conditions but the minimum-distance path is considered as the optimal warp path, where the distance is:", "cite_spans": [], "ref_spans": [], "section": "Dynamic Time Warping"}, {"text": "This minimum distance is what we call warped distance, a similarity measure between two time series. To find the minimum distance warp path, the distance D of each cell has to be computed. Dynamic programming can solve this problem in a very effective manner, so the value of a cell in the cost matrix is:", "cite_spans": [], "ref_spans": [], "section": "Dynamic Time Warping"}, {"text": "Where d is usually computed as the typical Euclidean distance d(i, j) = d(x i , y j ) = (x i \u2212 y j ) 2 between samples x i and y i and D is known as the cumulative distance (the euclidean distance d(i, j) plus the minimum of the cumulative distances of the contiguous cells).", "cite_spans": [], "ref_spans": [], "section": "Dynamic Time Warping"}, {"text": "Once the basis of the DTW technique have been clarified, our similarity assessment technique can be explained. In order to assess how similar two devices are, we propose the following steps:", "cite_spans": [], "ref_spans": [], "section": "Similarity Assessment Technique"}, {"text": "1.", "cite_spans": [], "ref_spans": [], "section": "Similarity Assessment Technique"}, {"text": "Step 1: Obtain POI graphics of both devices. A set of n P OI traces will be captured from both devices. These traces must be taken when the device is manipulating a certain sensitive variable, which must have a random value each time in order to properly characterize the leakage. Once both sets of traces are taken (n P OI (1) and n P OI (2) ), two POI graphs are obtained by applying one of the POI selection functions mentioned in Sect. 3. ", "cite_spans": [{"start": 324, "end": 327, "text": "(1)", "ref_id": "BIBREF0"}, {"start": 339, "end": 342, "text": "(2)", "ref_id": "BIBREF2"}], "ref_spans": [], "section": "Similarity Assessment Technique"}, {"text": "Step 2: Standardize both graphics. Zero-mean and normalization are standard preprocessing techniques that are mandatory to apply after almost every SCA acquisition. Our case is not an exception: an standardization of both graphs before applying DTW can be helpful since DTW usually interprets those differences as huge dissimilarities. Figures 7 and 8 show how the distance value changes enormously depending on whether we apply this technique or not, even though both graphs are quite similar in shape. Our experimental results show how a portable template attack can be successful if the shapes of its POI graphs are similar enough, even if there are magnitude differences (as shown in Sect. 5). In other words, it is more important how the device leaks its information than the quantity of the leakage (as long as the leakage is big enough). Thus, we propose to standardize each POI graph using Eq. (5), where z is the re-scaled sample, x i is the sample to scale and \u03bc and \u03c3 are the mean and the standard deviation of the trace (Fig. 8) .", "cite_spans": [], "ref_spans": [{"start": 336, "end": 351, "text": "Figures 7 and 8", "ref_id": null}, {"start": 1032, "end": 1040, "text": "(Fig. 8)", "ref_id": null}], "section": "2."}, {"text": "Step 3: Compute the DTW algorithm in order to obtain the minimum distance path (as explained above). In other words, by computing the cumulative of the distances of the minimum distance warping path we obtain the distance between both graphs: a quantitative measurement of the similarity/dissimilarity of both time sequences.", "cite_spans": [], "ref_spans": [], "section": "3."}, {"text": "Additionally, the graphical representation of the warped distance and warping path (Fig. 9 ) can be helpful in the POI selection since DTW highlights the parts of the signal which are most similar between devices. To see graphically misalignment problems and behavioural differences between devices is a good starting point for an improved POI selection.", "cite_spans": [], "ref_spans": [{"start": 83, "end": 90, "text": "(Fig. 9", "ref_id": null}], "section": "3."}, {"text": "In order to support our similarity assessment technique, we have performed realistic experiments involving template attacks with four \"identical\" copies of the same device (ATmega328P microcontroller) called Device 1 (D1), Device 2 (D2), Device 3 (D3) and Device 4 (D4). Additionally, we propose an improved POI selection technique which helps to enhance the performance of the portable template attack. We consider two main template attack use cases: using one device in the profiling phase and using two devices in the profiling phase.", "cite_spans": [], "ref_spans": [], "section": "Experimental Results"}, {"text": "The target is a development board mounting an ATmega328P 8-bit microcontroller working at 16 MHz clock frequency. We are storing random data (8-bit values) in flash memory using a memcpy() operation (in a random address each time). During that operation, we measure the power consumption of the device with a Tektronix CT1 current probe attached to a 20 GS/s digital oscilloscope (LeCroy Waverunner 9104) triggered by the microcontroller, which rises a GPIO signal when the internal computation starts. Each power trace is formed by 400 samples taken at 1 GHz with 8-bit resolution. As an attacker, our goal is to obtain the exact 8-bit value loaded in flash memory using template attacks. A set of n p profiling traces are taken from the profiling device(s) (storing random 8-bit values) and labeled with the stored value. The traces are preprocessed by aligning them and applying the aforementioned standardization technique. Then, a SOST function is ran in order to find possible POIs. 256 templates are built by computing the mean and co-variance matrix for each labeled group (in the selected POIs), using the pooled matrix optimization method. In the attacking phase a set of n a power traces of the attacking device storing a fixed 8-bit value are taken. Then the multivariate model is applied and the 8-bit value is guessed using the maximum likelihood principle. Each label will obtain a confidence value and the 256 labels will be ranked. We consider the attack successful when the correct candidate obtains a rank of 25 or less (the correct candidate is in the top 10% of candidates). We assume that then, the correct value could be guessed using (optimized) brute force.", "cite_spans": [], "ref_spans": [], "section": "Setup"}, {"text": "In the profiling phase 20 000 power traces of D1 are taken and labeled with the stored value. The traces are preprocessed and the SOST function is run in order to find possible POI (Fig. 8, Device 1) . Four significant spikes can be seen, corresponding to the different moments in which the copied variable leaks (production, travel across a bus, load into register, etc.). Thus, four POI are selected, one for each significant spike [97, 158, 220, 294] and the model using 256 templates is built. In the attacking phase 1 000 power traces of the same device (D1) storing a fixed value are taken. Then the multivariate model is applied and the 8-bit value is guessed. In Table 1 we can see that the rank of the correct candidate in this attack (D1 vs D1) is 1 after 1 000 traces (successful attack). In order to perform a more realistic template attack, 1 000 power traces from a second device (D2) storing the same fixed 8-bit value are taken. Then the model computed before with traces from D1 is applied and the fixed value is guessed. As it can be seen in Table 1 , the attack is unsuccessful (the rank of the correct candidate in this attack (D1 vs D2) is 46) because the multivariate model of D1 does not apply to D2. The process is repeated with devices D3 and D4 (results appear in Table 1 ). In this case the attack is successful (the rank of the correct candidate is less than 25), but the results are not optimal. To enhance the model we apply our similarity assessment technique and the improved POI selection technique. Then, once we have the four POI selection graphs (Fig. 11 , one for each device), we run the DTW algorithm to compute the warped distance between D1 and the rest (Fig. 11 (Fig. 1) . D2 is the most similar device to D1, but the attack is not successful. The reason is that the selected POIs are not optimal for this device, as shown below.", "cite_spans": [], "ref_spans": [{"start": 181, "end": 199, "text": "(Fig. 8, Device 1)", "ref_id": "FIGREF0"}, {"start": 671, "end": 678, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 1060, "end": 1067, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 1290, "end": 1297, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 1582, "end": 1590, "text": "(Fig. 11", "ref_id": "FIGREF0"}, {"start": 1695, "end": 1703, "text": "(Fig. 11", "ref_id": "FIGREF0"}, {"start": 1704, "end": 1712, "text": "(Fig. 1)", "ref_id": "FIGREF0"}], "section": "\"Raw\" Template Attack"}, {"text": "To improve the effectiveness of the attack we suggest the following steps:", "cite_spans": [], "ref_spans": [], "section": "Improved POI Selection:"}, {"text": "1. Analyze the performance of each POI individually to find which points correspond to good leaking points (when we port the model to another device, or even in the same device) and which ones are perturbing the model. In order to do that, we build templates using only one of the aforementioned POI each time [97, 158, 220, 294]. Then, we apply the templates to each device (D1, D2, D3 and D4). The results are presented in Table 2 , where it can be seen that the POIs with better performance for D2 (the one with the worst results) are the second and the third POIs. 2. Try different combinations of the POI with better performance to guess which combination has best results. Theoretically, the optimal solution would be a combination of all of them, but in practice it is not always the case. To avoid trying all possible combinations, points with better performance in all cases (identified in previous step) must be selected. Also, the warped distance graphic (Fig. 9) can be used to identify the most similar parts of these signals and choose the POI combinations accordingly. In this case, we have tried the following combinations: 1+3+4, 2+3, 1+2+3, 1+2 and 3+4. Results can be seen in Table 2 ( Step 2). To help identifying which combination works best in all devices we recommend to compute what we call Goodness Score (Table 2 , column GS). This metric is computed by adding the ranks of each row weighted by a coefficient (GS =", "cite_spans": [], "ref_spans": [{"start": 425, "end": 432, "text": "Table 2", "ref_id": "TABREF3"}, {"start": 966, "end": 974, "text": "(Fig. 9)", "ref_id": null}, {"start": 1195, "end": 1204, "text": "Table 2 (", "ref_id": "TABREF3"}, {"start": 1330, "end": 1338, "text": "(Table 2", "ref_id": "TABREF3"}], "section": "Improved POI Selection:"}, {"text": "The value of the coefficients is obtained dividing the rank of the first attack in the Table 1 , by the number of possible combinations (256), so we obtain coefficients from 0 to 1 with the emphasis put on the devices with worse result. The lower GS value, the better performance (generally speaking). Note that the combination with the best performance (in all devices) includes those three points of interest (1+2+3). 3. Adjust the selected POI: once we have found the best combination, we can try to tune each POI moving the selected point in a small number of samples (and adding another one near if necessary) and check if the results improve. Based on experience, points that are not exactly at the peak sometimes provide better results because the behaviour of the devices is more similar in those points. Summing up, we identified the most suitable zones to select POIs in previous step, and we are now tuning the exact value of these POIs. In our case, after a few trials we obtained very good results with [92, 153, 218] ( Table 2, Step 3).", "cite_spans": [], "ref_spans": [{"start": 87, "end": 94, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 1033, "end": 1041, "text": "Table 2,", "ref_id": "TABREF3"}], "section": "Improved POI Selection:"}, {"text": "After applying the proposed techniques, we can conclude the following:", "cite_spans": [], "ref_spans": [], "section": "Improved POI Selection:"}, {"text": "-Not all POIs have the same performance with all devices: For instance, in Table 2 we can see how the templates built with the 2 nd POI have better performance attacking D2 than devices D3 or D4. However, with the 3 rd and 4 th POIs we obtain a better performance attacking devices D3 Fig. 11 we notice how devices D3 and D4 have the smallest distance between them, which means that they are very similar (Table 2 shows how the results of the attacks are almost the same for both). Another example is that if we compare the distance between D1 and the rest, the device with shortest distance is D2, and the performance of the portable attack is generally better with that device. Again, distances from devices D3 and D4 are similar, as well as the results of the portable attacks.", "cite_spans": [], "ref_spans": [{"start": 75, "end": 82, "text": "Table 2", "ref_id": "TABREF3"}, {"start": 285, "end": 292, "text": "Fig. 11", "ref_id": "FIGREF0"}, {"start": 405, "end": 413, "text": "(Table 2", "ref_id": "TABREF3"}], "section": "Improved POI Selection:"}, {"text": "With the aim of confirming the results shown above we repeat the same process, but using D3 for generating the templates (Results shown in Table 3 ). The conclusions obtained when profiling with D1 are now validated. Devices D3 and D4 are very similar and hence the attack using the 4 POIs located in the 4th spike of Device 3's SOST is effective for D4 but unsuccessful for D1 and D2. After analysing the performance of each POI and its combinations we obtain the same conclusion: the POIs that work for D4 (the most similar device) do not work properly for the rest of devices (D1 and D2). Only after adjusting the POI with the best performance in devices D1 and D2 (POI 1+2) and adding another point near the second POI, we can obtain good results in those devices, but at the cost of sacrificing some performance for devices D3 and D4. In conclusion, it is important to get a balance and find POIs that represent leakage in all devices.", "cite_spans": [], "ref_spans": [{"start": 139, "end": 146, "text": "Table 3", "ref_id": "TABREF4"}], "section": "Extending the Problem to Other Device"}, {"text": "In this case, we had to select POIs that are not optimal for attacking D4 but allowed us to successfully attack devices D1 and D2. Thus, the templates generated with the improved POI selection are suitable for attacking each one of those four devices.", "cite_spans": [], "ref_spans": [], "section": "Extending the Problem to Other Device"}, {"text": "With this experiment, we want to show that measurements taken at different times may have substantial differences caused by slight changes in the device or its environment. With D3, the previous process is repeated two times, obtaining two sets of 20 000 random traces and two sets of 1 000 fixed traces. After comparing both SOST graphs (Fig. 12) it can be noticed that, although both graphs are very similar there are slight differences between both traces. In order to check whether those differences affect the performance, we carry out two different attacks. In the first one, we build templates and implement the attack with traces from the first measurement set (D3) while in the second attack we use traces from the second measurement set (D3*) with the model from the first measurement. The attack is successful in both cases, but the correct candidate ranks as 1 in the first attack and as 4 in the second one, showing the worse performance in the later. ", "cite_spans": [], "ref_spans": [{"start": 338, "end": 347, "text": "(Fig. 12)", "ref_id": "FIGREF0"}], "section": "Extending the Problem to Different Measurements of the Same Device"}, {"text": "In order to improve the performance of the portable template attack, we try building templates with two different devices and attacking a third one. Thus, a model is built with 20 000 profiling traces from D1 and 20 000 profiling traces from D2. The traces are preprocessed as in previous experiments and the SOST function is calculated (Fig. 13, Device 1+2 ). This figure, when compared with the SOST of each device separately (Fig. 11) , suggests that the new SOST is a combination of the other two. We select 7 POIs in each one of the significant spikes ([95, 142, 153, 173, 207, 218, 237] ) and generate the 256 templates. In the attacking phase 1 000 power traces of devices D1 and D2 storing a fixed 8-bit value are used (500 from each one). Then the model is applied and the fixed value is guessed. The results of this non-portable attack using two devices for profiling are excellent and they can be seen in ). For the portable attack, the model is applied to 1 000 power traces from D3 storing the same fixed value. As it can be seen in Table 4 ( Step 0), the results are quite bad because the model does not suit this device. The same happens with D4. As in the first use case, the similarity assessment method is applied. Thus, 20 000 power traces from the third and fourth device storing random 8-bit values are taken and labeled with the stored value. The traces are preprocessed and the SOST function is calculated (Fig. 13, D3 ", "cite_spans": [{"start": 557, "end": 592, "text": "([95, 142, 153, 173, 207, 218, 237]", "ref_id": null}], "ref_spans": [{"start": 337, "end": 357, "text": "(Fig. 13, Device 1+2", "ref_id": "FIGREF0"}, {"start": 428, "end": 437, "text": "(Fig. 11)", "ref_id": "FIGREF0"}, {"start": 1046, "end": 1055, "text": "Table 4 (", "ref_id": "TABREF5"}, {"start": 1429, "end": 1441, "text": "(Fig. 13, D3", "ref_id": "FIGREF0"}], "section": "Use Case 2: Template Attack Using Two Devices in Profiling Phase"}, {"text": "In order to consolidate the results shown above we repeat the same process, using devices D1 and D3 for templates generation. First of all, the SOST graph of the profiling traceset (20 000 random traces form D1 and 20 000 random traces from D3) is computed (Fig. 14) . POI combinations to find the optimal one. In this case, we try to select points that provide good results in both devices, avoiding points that work especially bad in a certain device. The combination which provides the best results is POI 1+3+4+5+6+7+9. Finally, after adjusting the selected POI, we obtain excellent results with [91, 115, 153, 168, 181, 216, 266] ( Table 5, Step 3). ", "cite_spans": [], "ref_spans": [{"start": 257, "end": 266, "text": "(Fig. 14)", "ref_id": "FIGREF0"}, {"start": 637, "end": 645, "text": "Table 5,", "ref_id": "TABREF9"}], "section": "Extending the Problem to Other Devices"}, {"text": "As mentioned above, the portability issue is usually underrated. Lots of related works obtain the profiling and attacking data sets from the same device instead of performing a profiling attack in the way it was conceived: generating a power model on an \"identical\" copy of the device to attack. In this work we have shown how performing this kind of attacks in a realistic setup is a complex task, since slight differences in the construction of the devices or in the acquisition of the traces cause different behaviours that usually ruin the attack. While some devices maximize leakage in a particular point of the power traces, the leakage of another \"identical\" copy of the device can be (slightly) shifted. Therefore, it is crucial to take into account these variations and to generate the models using the points where the leakage exist in all devices. In this paper we present a way to understand better how variations between devices occur, and we describe how to build models that allows finding and exploiting the common leakage. The experimental results show how our similarity assessment measurement (warped distance) is directly related to portability, since the portable template attacks have better performance in the most similar devices (devices with a smaller distance between them). The experimental results also confirm that our improved POI selection technique helps in finding the POIs which represent leakage in several devices and in avoiding the ones that perturb the model, making it not applicable to a particular device. Moreover, we have shown how building multivariate leakage models with several devices also enhances the performance of the attack, even more if the model is generated with devices with behavioural differences.", "cite_spans": [], "ref_spans": [], "section": "Conclusions"}, {"text": "In conclusion, the proposed similarity assessment technique allows evaluation laboratories to identify behavioural differences between devices and quantify them, and improves the POI selection in template attacks, as shown in the different use cases presented.", "cite_spans": [], "ref_spans": [], "section": "Conclusions"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Power analysis, what is now possible", "authors": [{"first": "M.-L", "middle": [], "last": "Akkar", "suffix": ""}, {"first": "R", "middle": [], "last": "Bevan", "suffix": ""}, {"first": "P", "middle": [], "last": "Dischamp", "suffix": ""}, {"first": "D", "middle": [], "last": "Moyart", "suffix": ""}], "year": null, "venue": "ASIACRYPT 2000", "volume": "1976", "issn": "", "pages": "489--502", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "Template attacks in principal subspaces", "authors": [{"first": "C", "middle": [], "last": "Archambeau", "suffix": ""}, {"first": "E", "middle": [], "last": "Peeters", "suffix": ""}, {"first": "F.-X", "middle": [], "last": "Standaert", "suffix": ""}, {"first": "J.-J", "middle": [], "last": "Quisquater", "suffix": ""}], "year": 2006, "venue": "CHES 2006", "volume": "4249", "issn": "", "pages": "1--14", "other_ids": {"DOI": ["10.1007/11894063_1"]}}, "BIBREF3": {"ref_id": "b3", "title": "Mind the portability: a warriors guide through realistic profiled side-channel analysis", "authors": [{"first": "S", "middle": [], "last": "Bhasin", "suffix": ""}, {"first": "A", "middle": [], "last": "Chattopadhyay", "suffix": ""}, {"first": "A", "middle": [], "last": "Heuser", "suffix": ""}, {"first": "D", "middle": [], "last": "Jap", "suffix": ""}, {"first": "S", "middle": [], "last": "Picek", "suffix": ""}, {"first": "R", "middle": ["R"], "last": "Shrivastwa", "suffix": ""}], "year": 2020, "venue": "Network and Distributed System Security Symposium", "volume": "", "issn": "", "pages": "", "other_ids": {"DOI": ["10.14722/ndss.2020.24390"]}}, "BIBREF4": {"ref_id": "b4", "title": "Correlation power analysis with a leakage model", "authors": [{"first": "E", "middle": [], "last": "Brier", "suffix": ""}, {"first": "C", "middle": [], "last": "Clavier", "suffix": ""}, {"first": "F", "middle": [], "last": "Olivier", "suffix": ""}], "year": null, "venue": "CHES 2004", "volume": "3156", "issn": "", "pages": "16--29", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Convolutional neural networks with data augmentation against jitter-based countermeasures", "authors": [{"first": "E", "middle": [], "last": "Cagli", "suffix": ""}, {"first": "C", "middle": [], "last": "Dumas", "suffix": ""}, {"first": "E", "middle": [], "last": "Prouff", "suffix": ""}], "year": 2017, "venue": "CHES 2017", "volume": "10529", "issn": "", "pages": "45--68", "other_ids": {"DOI": ["10.1007/978-3-319-66787-4_3"]}}, "BIBREF7": {"ref_id": "b7", "title": "Deep learning to evaluate secure RSA implementations. Cryptology ePrint Archive", "authors": [{"first": "M", "middle": [], "last": "Carbone", "suffix": ""}], "year": 2019, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "Template attacks", "authors": [{"first": "S", "middle": [], "last": "Chari", "suffix": ""}, {"first": "J", "middle": ["R"], "last": "Rao", "suffix": ""}, {"first": "P", "middle": [], "last": "Rohatgi", "suffix": ""}], "year": 2003, "venue": "CHES 2002", "volume": "2523", "issn": "", "pages": "13--28", "other_ids": {"DOI": ["10.1007/3-540-36400-5_3"]}}, "BIBREF9": {"ref_id": "b9", "title": "Efficient, portable template attacks", "authors": [{"first": "M", "middle": ["O"], "last": "Choudary", "suffix": ""}, {"first": "M", "middle": ["G"], "last": "Kuhn", "suffix": ""}], "year": 2018, "venue": "IEEE Trans. Inf. Forensics Secur", "volume": "13", "issn": "2", "pages": "490--501", "other_ids": {"DOI": ["10.1109/TIFS.2017.2757440"]}}, "BIBREF10": {"ref_id": "b10", "title": "Efficient template attacks", "authors": [{"first": "O", "middle": [], "last": "Choudary", "suffix": ""}, {"first": "M", "middle": ["G"], "last": "Kuhn", "suffix": ""}], "year": 2014, "venue": "CARDIS 2013", "volume": "8419", "issn": "", "pages": "253--270", "other_ids": {"DOI": ["10.1007/978-3-319-08302-5_17"]}}, "BIBREF11": {"ref_id": "b11", "title": "Template attacks on different devices", "authors": [{"first": "O", "middle": [], "last": "Choudary", "suffix": ""}, {"first": "M", "middle": ["G"], "last": "Kuhn", "suffix": ""}], "year": 2014, "venue": "COSADE 2014", "volume": "8622", "issn": "", "pages": "179--198", "other_ids": {"DOI": ["10.1007/978-3-319-10175-0_13"]}}, "BIBREF12": {"ref_id": "b12", "title": "Portability of templates", "authors": [{"first": "M", "middle": [], "last": "Elaabid", "suffix": ""}, {"first": "S", "middle": [], "last": "Abdelazizand Guilley", "suffix": ""}], "year": 2012, "venue": "J. Cryptogr. Eng", "volume": "2", "issn": "1", "pages": "63--74", "other_ids": {"DOI": ["10.1007/s13389-012-0030-6"]}}, "BIBREF13": {"ref_id": "b13", "title": "The statistical utilization of multiple measurements", "authors": [{"first": "R", "middle": [], "last": "Fisher", "suffix": ""}], "year": 1935, "venue": "Ann. Eugen. (Cambridge", "volume": "8", "issn": "", "pages": "376--386", "other_ids": {"DOI": ["10.1111/j.1469-1809.1938.tb02189.x"]}}, "BIBREF14": {"ref_id": "b14", "title": "Templates vs. Stochastic methods", "authors": [{"first": "B", "middle": [], "last": "Gierlichs", "suffix": ""}, {"first": "K", "middle": [], "last": "Lemke-Rust", "suffix": ""}, {"first": "C", "middle": [], "last": "Paar", "suffix": ""}], "year": 2006, "venue": "CHES 2006", "volume": "4249", "issn": "", "pages": "15--29", "other_ids": {"DOI": ["10.1007/11894063_2"]}}, "BIBREF15": {"ref_id": "b15", "title": "CHES 2018 side channel contest CTF -solution of the AES challenges. IACR Cryptology ePrint Archive", "authors": [{"first": "A", "middle": [], "last": "Gohr", "suffix": ""}, {"first": "S", "middle": [], "last": "Jacob", "suffix": ""}, {"first": "W", "middle": [], "last": "Schindler", "suffix": ""}], "year": 2019, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "Intelligent machine homicide", "authors": [{"first": "A", "middle": [], "last": "Heuser", "suffix": ""}, {"first": "M", "middle": [], "last": "Zohner", "suffix": ""}], "year": 2012, "venue": "COSADE 2012", "volume": "7275", "issn": "", "pages": "249--264", "other_ids": {"DOI": ["10.1007/978-3-642-29912-4_18"]}}, "BIBREF17": {"ref_id": "b17", "title": "Machine learning in side-channel analysis: a first study", "authors": [{"first": "G", "middle": [], "last": "Hospodar", "suffix": ""}, {"first": "B", "middle": [], "last": "Gierlichs", "suffix": ""}, {"first": "E", "middle": [], "last": "De Mulder", "suffix": ""}, {"first": "I", "middle": [], "last": "Verbauwhede", "suffix": ""}, {"first": "J", "middle": [], "last": "Vandewalle", "suffix": ""}], "year": 2011, "venue": "J. Cryptogr. Eng", "volume": "1", "issn": "", "pages": "293--302", "other_ids": {"DOI": ["10.1007/s13389-011-0023-x"]}}, "BIBREF18": {"ref_id": "b18", "title": "An Introduction to Statistical Learning: With Applications in R", "authors": [{"first": "G", "middle": [], "last": "James", "suffix": ""}, {"first": "D", "middle": [], "last": "Witten", "suffix": ""}, {"first": "T", "middle": [], "last": "Hastie", "suffix": ""}, {"first": "R", "middle": [], "last": "Tibshirani", "suffix": ""}], "year": 2014, "venue": "JABES", "volume": "19", "issn": "", "pages": "556--557", "other_ids": {"DOI": ["10.1007/s13253-014-0179-9"]}}, "BIBREF19": {"ref_id": "b19", "title": "Applied Multivariate Statistical Analysis", "authors": [{"first": "R", "middle": ["A"], "last": "Johnson", "suffix": ""}], "year": 1988, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Differential power analysis", "authors": [{"first": "P", "middle": [], "last": "Kocher", "suffix": ""}, {"first": "J", "middle": [], "last": "Jaffe", "suffix": ""}, {"first": "B", "middle": [], "last": "Jun", "suffix": ""}], "year": 1999, "venue": "CRYPTO 1999", "volume": "1666", "issn": "", "pages": "388--397", "other_ids": {"DOI": ["10.1007/3-540-48405-1_25"]}}, "BIBREF21": {"ref_id": "b21", "title": "AES wireless keyboard: Template attack for eavesdropping", "authors": [{"first": "K", "middle": [], "last": "Kim", "suffix": ""}, {"first": "T", "middle": ["H"], "last": "Kim", "suffix": ""}, {"first": "T", "middle": [], "last": "Kim", "suffix": ""}, {"first": "S", "middle": [], "last": "Ryu", "suffix": ""}], "year": 2018, "venue": "Black Hat Asia", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Side channel attack: an approach based on machine learning", "authors": [{"first": "L", "middle": [], "last": "Lerman", "suffix": ""}, {"first": "G", "middle": [], "last": "Bontempi", "suffix": ""}, {"first": "O", "middle": [], "last": "Markowitch", "suffix": ""}], "year": 2011, "venue": "Constructive Side-Channel Analysis and Secure Design", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "A machine learning approach against a masked AES", "authors": [{"first": "L", "middle": [], "last": "Lerman", "suffix": ""}, {"first": "G", "middle": [], "last": "Bontempi", "suffix": ""}, {"first": "O", "middle": [], "last": "Markowitch", "suffix": ""}], "year": 2015, "venue": "J. Cryptogr. Eng", "volume": "5", "issn": "2", "pages": "123--139", "other_ids": {"DOI": ["10.1007/s13389-014-0089-3"]}}, "BIBREF24": {"ref_id": "b24", "title": "Template attacks versus machine learning revisited and the curse of dimensionality in side-channel analysis: extended version", "authors": [{"first": "L", "middle": [], "last": "Lerman", "suffix": ""}, {"first": "R", "middle": [], "last": "Poussier", "suffix": ""}, {"first": "O", "middle": [], "last": "Markowitch", "suffix": ""}, {"first": "F", "middle": ["X"], "last": "Standaert", "suffix": ""}], "year": 2018, "venue": "J. Cryptogr. Eng", "volume": "8", "issn": "4", "pages": "301--313", "other_ids": {"DOI": ["10.1007/s13389-017-0162-9"]}}, "BIBREF25": {"ref_id": "b25", "title": "Breaking cryptographic implementations using deep learning techniques", "authors": [{"first": "H", "middle": [], "last": "Maghrebi", "suffix": ""}, {"first": "T", "middle": [], "last": "Portigliatti", "suffix": ""}, {"first": "E", "middle": [], "last": "Prouff", "suffix": ""}], "year": 2016, "venue": "", "volume": "2016", "issn": "", "pages": "3--26", "other_ids": {"DOI": ["10.1007/978-3-319-49445-6_1"]}}, "BIBREF26": {"ref_id": "b26", "title": "Power Analysis Attacks: Revealing the Secrets of Smart Cards", "authors": [{"first": "S", "middle": [], "last": "Mangard", "suffix": ""}, {"first": "E", "middle": [], "last": "Oswald", "suffix": ""}, {"first": "T", "middle": [], "last": "Popp", "suffix": ""}], "year": 2007, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"DOI": ["10.1007/978-0-387-38162-6"]}}, "BIBREF27": {"ref_id": "b27", "title": "RAM: rapid alignment method", "authors": [{"first": "R", "middle": ["A"], "last": "Muijrers", "suffix": ""}, {"first": "J", "middle": ["G J"], "last": "Van Woudenberg", "suffix": ""}, {"first": "L", "middle": [], "last": "Batina", "suffix": ""}], "year": 2011, "venue": "CARDIS 2011", "volume": "7079", "issn": "", "pages": "266--282", "other_ids": {"DOI": ["10.1007/978-3-642-27257-8_17"]}}, "BIBREF28": {"ref_id": "b28", "title": "On the performance of convolutional neural networks for side-channel analysis", "authors": [{"first": "S", "middle": [], "last": "Picek", "suffix": ""}, {"first": "I", "middle": ["P"], "last": "Samiotis", "suffix": ""}, {"first": "J", "middle": [], "last": "Kim", "suffix": ""}, {"first": "A", "middle": [], "last": "Heuser", "suffix": ""}, {"first": "S", "middle": [], "last": "Bhasin", "suffix": ""}, {"first": "A", "middle": [], "last": "Legay", "suffix": ""}], "year": 2018, "venue": "SPACE 2018", "volume": "11348", "issn": "", "pages": "157--176", "other_ids": {"DOI": ["10.1007/978-3-030-05072-6_10"]}}, "BIBREF29": {"ref_id": "b29", "title": "Practical template attacks", "authors": [{"first": "C", "middle": [], "last": "Rechberger", "suffix": ""}, {"first": "E", "middle": [], "last": "Oswald", "suffix": ""}], "year": 2005, "venue": "WISA 2004", "volume": "3325", "issn": "", "pages": "440--456", "other_ids": {"DOI": ["10.1007/978-3-540-31815-6_35"]}}, "BIBREF30": {"ref_id": "b30", "title": "A formal study of power variability issues and side-channel attacks for nanoscale devices", "authors": [{"first": "M", "middle": [], "last": "Renauld", "suffix": ""}, {"first": "F.-X", "middle": [], "last": "Standaert", "suffix": ""}, {"first": "N", "middle": [], "last": "Veyrat-Charvillon", "suffix": ""}, {"first": "D", "middle": [], "last": "Kamel", "suffix": ""}, {"first": "D", "middle": [], "last": "Flandre", "suffix": ""}], "year": 2011, "venue": "EUROCRYPT 2011", "volume": "6632", "issn": "", "pages": "109--128", "other_ids": {"DOI": ["10.1007/978-3-642-20465-4_8"]}}, "BIBREF31": {"ref_id": "b31", "title": "Dynamic programming algorithm optimization for spoken word recognition", "authors": [{"first": "H", "middle": [], "last": "Sakoe", "suffix": ""}, {"first": "S", "middle": [], "last": "Chiba", "suffix": ""}], "year": 1978, "venue": "IEEE Trans. Acoust. Speech Signal Process", "volume": "26", "issn": "1", "pages": "43--49", "other_ids": {"DOI": ["10.1109/TASSP.1978.1163055"]}}, "BIBREF32": {"ref_id": "b32", "title": "Toward accurate dynamic time warping in linear time and space", "authors": [{"first": "S", "middle": [], "last": "Salvador", "suffix": ""}, {"first": "P", "middle": [], "last": "Chan", "suffix": ""}], "year": 2007, "venue": "Intell. Data Anal", "volume": "11", "issn": "", "pages": "561--580", "other_ids": {"DOI": ["10.3233/IDA-2007-11508"]}}, "BIBREF33": {"ref_id": "b33", "title": "A stochastic model for differential side channel cryptanalysis", "authors": [{"first": "W", "middle": [], "last": "Schindler", "suffix": ""}, {"first": "K", "middle": [], "last": "Lemke", "suffix": ""}, {"first": "C", "middle": [], "last": "Paar", "suffix": ""}], "year": 2005, "venue": "CHES 2005", "volume": "3659", "issn": "", "pages": "30--46", "other_ids": {"DOI": ["10.1007/11545262_3"]}}, "BIBREF34": {"ref_id": "b34", "title": "Bridging the gap: advanced tools for side-channel leakage estimation beyond Gaussian templates and histograms", "authors": [{"first": "T", "middle": [], "last": "Schneider", "suffix": ""}, {"first": "A", "middle": [], "last": "Moradi", "suffix": ""}, {"first": "F.-X", "middle": [], "last": "Standaert", "suffix": ""}, {"first": "T", "middle": [], "last": "G\u00fcneysu", "suffix": ""}], "year": null, "venue": "SAC 2016", "volume": "10532", "issn": "", "pages": "58--78", "other_ids": {}}, "BIBREF36": {"ref_id": "b36", "title": "Using subspace-based template attacks to compare and combine power and electromagnetic information leakages", "authors": [{"first": "F.-X", "middle": [], "last": "Standaert", "suffix": ""}, {"first": "C", "middle": [], "last": "Archambeau", "suffix": ""}], "year": 2008, "venue": "CHES 2008", "volume": "5154", "issn": "", "pages": "411--425", "other_ids": {"DOI": ["10.1007/978-3-540-85053-3_26"]}}, "BIBREF37": {"ref_id": "b37", "title": "Improving differential power analysis by elastic alignment", "authors": [{"first": "J", "middle": [], "last": "Woudenberg", "suffix": ""}, {"first": "M", "middle": [], "last": "Witteman", "suffix": ""}, {"first": "B", "middle": [], "last": "Bakker", "suffix": ""}], "year": 2011, "venue": "CT-RSA", "volume": "6558", "issn": "", "pages": "104--119", "other_ids": {"DOI": ["10.1007/978-3-642-19074-2_8"]}}}, "ref_entries": {"FIGREF0": {"text": "Differences between devices: Power trace", "latex": null, "type": "figure"}, "FIGREF1": {"text": "Differences between devices: Leaking part of the power trace", "latex": null, "type": "figure"}, "FIGREF2": {"text": "Differences between POI selection functions", "latex": null, "type": "figure"}, "FIGREF3": {"text": "Euclidian distance Warped distance Cost matrix and warp path (Color figure online)", "latex": null, "type": "figure"}, "FIGREF4": {"text": "SOST SOST Warped distance between Device 1 and Device 2Fig. 10. Warp path between Device 1 and 2", "latex": null, "type": "figure"}, "FIGREF5": {"text": "SOST graphics of each one of the four analyzed devices and distances between them Improving the Results First and foremost, we apply our similarity assessment method. Thus, 20 000 power traces of the second device storing random 8-bit values are taken and labeled with the stored value. The traces are preprocessed and the SOST function is run (Figs. 7 and 11, Device 2). The same process is repeated with D3 and D4.", "latex": null, "type": "figure"}, "FIGREF6": {"text": "SOST graph of the 1st and 2nd measurements (Device 3).", "latex": null, "type": "figure"}, "FIGREF7": {"text": "SOST graph of devices 1+2, 3 and 4", "latex": null, "type": "figure"}, "FIGREF8": {"text": "SOST graph of devices 1+3, 2 and 4", "latex": null, "type": "figure"}, "TABREF0": {"text": "Portable template attack experiments using Device 1 (D1) for profiling.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>POI Rank (D1 vs D1) </td><td>Rank (D1 vs D2) </td><td>Rank (D1 vs D3) </td><td>Rank (D1 vs D4)\n</td></tr><tr><td>[97, 158, 220, 294] 1 </td><td>46 </td><td>17 </td><td>18\n</td></tr></table></body></html>"}, "TABREF2": {"text": ", D1 vs D2, D1 vs D3, D1 vs D4). Note that we also calculate other distances (D2 vs D3, D2 vs D4, D3 vs D4) to measure the similarities among the four devices. These results lead to the following conclusions: Devices D3 and D4 are the most similar ones since their distance is the smallest one. Thus, the distances between D1 & D3 and D1 & D4 are similar, and this fact validates the results of the attacks D1 vs D3 and D1 vs D4, which are also similar", "latex": null, "type": "table"}, "TABREF3": {"text": "", "latex": null, "type": "table"}, "TABREF4": {"text": "and D4. The same happens with combinations of those POIs: POI 1+2 has better performance for D2 than others, while profiling with POI 1+3+4 has good results for devices D3 and D4 but not for D2, etc.-DTW's wrapping distance can assess the similarity between devices. After selecting proper POI, we can see how the results of the Template attacks and the similarity assessment technique are directly linked. In", "latex": null, "type": "table"}, "TABREF5": {"text": "Step 0, [D1+D2] vs [D1+D2]", "latex": null, "type": "table"}, "TABREF6": {"text": "and D4). We can see that both shapes are completely different and hence the attack is not successful because we are not selecting representative POIs for all the devices. To improve the POI selection, we apply our technique, as shown in Sec. 5.2. First, we analyze the performance of each POI individually (Table 4,Step 0). Note that the results are almost the same in D3 and D4 because these devices are very similar. Then, different combinations of the 7 POIs are tested(Table 4,Step 2). The combination which throws best results is 2+3+6. After that, we try to adjust the POI of interest, achieving the attack using the points [143, 157, 217] (Table 4,Step 3).", "latex": null, "type": "table"}, "TABREF7": {"text": "In this case, the model is built with traces from two devices which have significant differences, as we have seen in previous experiments. Then, a multivariate model is built using 10 POI located in each one of the significant spikes of the SOST ([90, 104, 115, 155, 166, 178, 216, 234, 267, 296]). The results appear in Table 5 (Step 0). Note that the results are quite good without applying our improved POI selection because we have constructed a model with devices which are similar to the attacked devices (Devices D1 & D2 and D3 & D4 are very similar). Nevertheless, the results with D2 are not as good as expected, so we perform our improved POI selection. After analyzing the performance of each POI individually, we can notice that, in general, all points work better for one device than for the other. Thus, we try different", "latex": null, "type": "table"}, "TABREF8": {"text": "Portable template attacks experiments using Device 1 (D1) and Device 2 (D2) for profiling.", "latex": null, "type": "table"}, "TABREF9": {"text": "Portable template attacks experiments using Device 1 (D1) and Device 3 (D3) for profiling.", "latex": null, "type": "table"}}, "back_matter": [{"text": "Step ", "cite_spans": [], "ref_spans": [], "section": "annex"}]}