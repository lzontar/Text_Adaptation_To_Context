{"paper_id": "0ccf161ca222319eceb8fdb800f43faf16cb08dd", "metadata": {"title": "Rule Generation Using NN and GA for SARS-CoV Cleavage Site Prediction", "authors": [{"first": "Yeon-Jin", "middle": [], "last": "Cho", "suffix": "", "affiliation": {"laboratory": "", "institution": "Korea University", "location": {"postCode": "136-701", "settlement": "Seoul", "country": "Korea"}}, "email": ""}, {"first": "Hyeoncheol", "middle": [], "last": "Kim", "suffix": "", "affiliation": {"laboratory": "", "institution": "Korea University", "location": {"postCode": "136-701", "settlement": "Seoul", "country": "Korea"}}, "email": "hkim@comedu.korea.ac.kr"}]}, "abstract": [{"text": "Cleavage site prediction is an important issue in molecular biology. We present a new method that generates prediction rules for SARS-CoV protease cleavage sites. Our method includes rule extraction from a trained neural network and then enhancing the extracted rules by genetic evolution to improve its quality. Experimental results show that the method could generate new rules for cleavage site prediction, which are more general and accurate than consensus patterns.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Strong interest in automated identification and prediction of cleavage sites have been evoked not only by the huge amount of unprocessed data available but also by the commercial need. The identification and prediction problem is domain-specific, and machine learning methods such as neural networks have therefore been widely used and been successful. In this paper, we present new approaches to rule generation for the cleavage site prediction, and the rule is represented in an explicit form such as \"if L@p2 and R@p3, then cleavage\". Prediction of SARS-CoV protease cleavage site was selected as a subject of study.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "The first cases of severe acute respiratory syndrome (SARS) were identified in China in November, 2002 and have spread many countries around the world [17] . By late June 2003, the World Health Organization (WHO) has recorded more than 8000 cases of SARS and more than 750 SARS related deaths, and a global alert for the illness was issued due to the severity of the disease [20] . Corona virus (CoV) family consists of four groups as illustrated in figure 1. SARS-CoV is a mutant virus of CoV and belongs to the Group 4. One of the ways to make SARS-CoV incapable is to obstruct the increase of the virus by constraining the activity of proteinase (3CLpro), which is one of the core viruses of SARS-CoV. Therefore, the analysis of CoV cleavage site in the other three groups makes it possible to predict the cleavage site of SARS-CoV and tackle the deseases caused by other upcoming CoV mutant viruses.", "cite_spans": [{"start": 151, "end": 155, "text": "[17]", "ref_id": "BIBREF16"}, {"start": 375, "end": 379, "text": "[20]", "ref_id": "BIBREF19"}], "ref_spans": [], "section": "Introduction"}, {"text": "SARS-CoV can be incapacitated by restraining the activity of protease (3CL pro ), which is one of the main proteins consisting SARS-CoV [11] . Several researches indicate that virus proliferation can be arrested using specific proteinase inhibitors.", "cite_spans": [{"start": 136, "end": 140, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "Introduction"}, {"text": "Consequently, the protease inhibitors that restrains the virus proliferate can be found by analysing the cleavage site which cleaved by protease, a main protein, in Corona virus. This fact motivated the computational research on the cleavage site prediction and analysis. It reduces time and expense of processes of the pathology experiments. The cleavage site analysis enables us to recognize the cleavage candidates and to design the inhibitors of protease [4] , [10] , [11] . It will assist the cure for SARS and for other diseases caused by Corona viruses. Machine learning approaches including neural networks have been applied to cleavage site analysis successfully [1] , [3] , [4] , [8] , [15] . They however focused on identification or classification of cleavage sites, but not on the explanation of the classification. Prediction knowledge or rule in an explicit format will help us to understand how the sites are classified and provide us with better insights about the specific domain. The idea of prediction rule is not new since consensus patterns and decision trees were used among biologists. However, the consensus patterns are not complete and not accurate enough. Our goal in this paper is to present accurate and robust methods to generate prediction rules of good quality. We used the methods of rule extraction from neural networks and knowledge-based genetic algorithms in this paper.", "cite_spans": [{"start": 459, "end": 462, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 465, "end": 469, "text": "[10]", "ref_id": "BIBREF9"}, {"start": 472, "end": 476, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 672, "end": 675, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 678, "end": 681, "text": "[3]", "ref_id": "BIBREF2"}, {"start": 684, "end": 687, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 690, "end": 693, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 696, "end": 700, "text": "[15]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Introduction"}, {"text": "In the search for potential inhibitors, important issue is to predict which peptides can be cleaved by SARS-CoV protease. Even limited in the range of an octapeptide, experimental test would be very expensive because the number of possible octapeptides formed from 20 amino acids runs into 20 8 = 2.56\u00d710 10 . Thus, computational methods for cleavage site prediction would be very useful.", "cite_spans": [], "ref_spans": [], "section": "Materials and Methods"}, {"text": "Twenty-four genomic sequences of coronavirus and the annotation information were downloaded from the GenBank database [2] , of which 12 are SARS-CoV and 12 are other groups of coronaviruses. Each sequence of coronavirus genome includes 11 cleavage sites and thus total 264 (= 24\u00d711) sites are available. We eliminated duplicated ones out of the total 264 results and identified final 70 cleavage sites. Each cleavage site of octapeptides includes 8 regions (i.e., 8 positions of P4, P3, P2, P1, P1', P2', P3', P4'). The position p1 is just before the cleavage site; p4 through p1 is Nterminal to the cleavage site and p1' through p4' is C-terminal to the cleavage site. Each region represents one of the 20 amino acids.", "cite_spans": [{"start": 118, "end": 121, "text": "[2]", "ref_id": "BIBREF1"}], "ref_spans": [], "section": "Data Set Preparation"}, {"text": "For a classification problem such as cleavage site classification, both positive and negative examples are needed. It searches or induces rules that cover positive examples as much as possible and negative examples as little as possible. Negative examples (presumed non-cleavage sites) are created by defining all other Glutamines (Q) in the viral polyproteins as non-cleavable sites [11] . Therefore we obtained 70 positive (i.e., cleavage) and 1267 negative (i.e., non-cleavage) examples in our experimental dataset. Since every site in our dataset has a glutamine (Q) in position P1 (the position just before the cleavage site), the position p1 does not play any role in our classification experiments and thus the symbol \"Q@p1\" (i.e., amino acid 'Q' at position p1) is ignored in the rules generated in our experiments.", "cite_spans": [{"start": 384, "end": 388, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "Data Set Preparation"}, {"text": "For neural network training, each region value that is one of 20 amino acids is converted into 20 binary digits. For example, Alanine(A) among 20 amino acids is represented by 20 bits of 10000000000000000000. Thus, each cleavage sites (i.e., octapeptides) composed of 8 regions is encoded into 160 bits. Class is encoded into either 1 (i.e., cleavage) or 0 (i.e., non-cleavage).", "cite_spans": [], "ref_spans": [], "section": "Data Set Preparation"}, {"text": "Amino acid conservation in multiple sequence alignments may be visualized using sequence logo. Sequence logo is useful for a quick examination of the range in which a sequence signal is present. From the sequence logo in Figure 2 , a very strong consensus is evident around the cleavage site. Three consensus patterns from the sequence logo are 'LQ', 'LQ[S/A]' and '[T/S/A]X[L/F]Q[S/A/G]' [11] .", "cite_spans": [{"start": 389, "end": 393, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [{"start": 221, "end": 229, "text": "Figure 2", "ref_id": "FIGREF1"}], "section": "Analysis of the Cleavage Sites: Sequence Logo and Decision Tree"}, {"text": "Decision tree is one of the best-known classification techniques in symbolic machine learning. We used C5.0 algorithm and generated the following: \"if L@p2 ^ [A/C/G/N/S]@p1', then cleavage\". ", "cite_spans": [], "ref_spans": [], "section": "Analysis of the Cleavage Sites: Sequence Logo and Decision Tree"}, {"text": "Kiemer, et al. used feed-forward neural networks for SARS-CoV cleavage site analysis [11] . They showed that the neural network outperforms three consensus patterns in terms of classification performance. However, they used the neural network for just cleavage site prediction, but not for expressing the sites in explicit knowledge.", "cite_spans": [{"start": 85, "end": 89, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "Feed-Forward Neural Network and Rule Extraction"}, {"text": "There have been many studies for efficient extraction of valid and general rules from a trained neural network [1] , [6] , [7] , [8] , [9] , [12] , [16] , [18] , [19] . In this paper, we used the OAS (Ordered-Attribute Search) algorithm to extract if-then rules from the neural networks [12] .", "cite_spans": [{"start": 111, "end": 114, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 117, "end": 120, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 123, "end": 126, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 129, "end": 132, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 135, "end": 138, "text": "[9]", "ref_id": "BIBREF8"}, {"start": 141, "end": 145, "text": "[12]", "ref_id": "BIBREF11"}, {"start": 148, "end": 152, "text": "[16]", "ref_id": "BIBREF15"}, {"start": 155, "end": 159, "text": "[18]", "ref_id": "BIBREF17"}, {"start": 162, "end": 166, "text": "[19]", "ref_id": "BIBREF18"}, {"start": 287, "end": 291, "text": "[12]", "ref_id": "BIBREF11"}], "ref_spans": [], "section": "Feed-Forward Neural Network and Rule Extraction"}, {"text": "GA (Genetic algorithm) can be used for searching generalized rules [5] , [13] , [14] . Individual chromosome in a GA population is a sequence of 8 symbols in which each symbol represents an amino acid or `*' (i.e., don't_care symbol). Then we can say that, for example, the chromosome [**LQS***] represents the rule \"If L@p2 and S@p1', then cleavage\". We ignore the Q at p1 as mentioned before. Therefore the size of rule space is as huge as 21 8 . The GA-based model searches for the best fitted set of chromosomes (i.e., rules) among the 21 8 candidates. One-point crossover is used and crossing point is selected randomly. Mutation occurs on each symbol by 1% and changes its symbol to one of other 20 symbols. Fitness function for a chromosome n is defined as follows. The GA-based model generates rules, but the performance is not good enough. The performance was very sensitive to the initial population of chromosomes which was generated by random. Knowledge-based approach to the GA-model is used to restrict the random search space. Domain-knowledge was used as an initial population and GA-model refines and explores from the initial rules. The knowledge-based approach also reduces the GA learning time significantly because it restricts GA search space.", "cite_spans": [{"start": 67, "end": 70, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 73, "end": 77, "text": "[13]", "ref_id": "BIBREF12"}, {"start": 80, "end": 84, "text": "[14]", "ref_id": "BIBREF13"}, {"start": 445, "end": 446, "text": "8", "ref_id": "BIBREF7"}], "ref_spans": [], "section": "Genetic Algorithm and Knowledge-Based Genetic Algorithm"}, {"text": "Our experiment includes the following steps; (1) Rule extraction from a trained neural network and comparison of the rules with consensus patterns and decision trees;", "cite_spans": [], "ref_spans": [], "section": "Experimental Results"}, {"text": "(2) Rule generation by GA-based model with initial knowledge from consensus patterns, decision tree and neural network rules; (3) Comparison of the rules from neural networks, decision tree and knowledge-based GA. A rule is in the form of \"IF condition, THEN class\" where class is either of cleavage or non-cleavage. Performance of a rule is evaluated by its coverage and accuracy defined as follows: A feed-forward neural network was configured with 160 input nodes, 2 hidden nodes and 1 output node. The neural network was trained and tested by 3-fold crossvalidation. Generalization of the neural network is as high as 97.9% while training accuracy is 99.6%. Then we extracted if-then rules from the trained neural network by Kim's OAS algorithm [12] , and compared them with consensus rules and decision tree rules.", "cite_spans": [{"start": 749, "end": 753, "text": "[12]", "ref_id": "BIBREF11"}], "ref_spans": [], "section": "Experimental Results"}, {"text": "Next, GA-based model was used with domain knowledge incorporated initially. Domain knowledge was obtained by extracting rules from consensus patterns, decision tree and neural networks. Our experiment shows that the GA rules from neural network knowledge outperform others in terms of the number of quality rules.", "cite_spans": [], "ref_spans": [], "section": "Experimental Results"}, {"text": "Finally, we compare the rule performances between decision tree, neural network and knowledge-based genetic algorithm (KBGA). Table 1 lists the rules with coverage greater than 17% and accuracy greater than 60%. Decision Tree generates rules no better than consensus patterns, while neural network generates four other useful rules in addition to the decision tree rules. The neural network rules were enhanced by GA evolution which was initialized with the neural network rules. The new rule, [S@p4 ^ S@p1'], discovered only by the KBGA is of good quality with accuracy 86.6% and the rule was not discovered by any other methods. ", "cite_spans": [], "ref_spans": [{"start": 126, "end": 133, "text": "Table 1", "ref_id": "TABREF0"}], "section": "Experimental Results"}, {"text": "Prediction or classification rules provide us with explanation about the classification and thus better insights about a domain. We presented a new method that generates rules and improves quality of the rules with the subject of SARS-CoV protease cleav-age site prediction. Rules were extracted from a well-trained neural network and then enhanced by genetic evolution. Our experiment presents the rules generated by four different types of approaches: \u2212 Consensus patterns \u2212 Decision Tree \u2212 Neural networks \u2212 Genetic Algorithm initialized by neural network rules Neural network could generate the rules of high quality that were not discovered by decision trees or consensus patterns. Knowledge-Based Genetic Algorithm (KBGA) model in which the neural network rules were incorporated initially could discover new rules in addition to the neural network rules. The KBGA can be considered as a hybrid model of neural networks and genetic algorithm since knowledge learned by a neural network is enhanced and expanded by GA evolution. The experimental result demonstrates that the hybrid model improves quality of rule generation.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Survey and critique of techniques for extracting rules from trained artificial neural networks", "authors": [{"first": "Robert", "middle": [], "last": "Andrews", "suffix": ""}, {"first": "Joachim", "middle": [], "last": "Diederich", "suffix": ""}, {"first": "", "middle": [], "last": "Tickle", "suffix": ""}, {"first": "B", "middle": [], "last": "Alam", "suffix": ""}], "year": 1995, "venue": "Knowledge-Based Systems", "volume": "8", "issn": "6", "pages": "373--389", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "GenBank: update", "authors": [{"first": "D", "middle": ["A"], "last": "Benson", "suffix": ""}, {"first": "I", "middle": [], "last": "Karsch-Mizrachi", "suffix": ""}, {"first": "D", "middle": ["J"], "last": "Lipman", "suffix": ""}, {"first": "J", "middle": [], "last": "Ostell", "suffix": ""}, {"first": "D", "middle": ["L"], "last": "Wheeler", "suffix": ""}], "year": 2004, "venue": "", "volume": "", "issn": "", "pages": "23--26", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "Cleavage site analysis in picornaviral polyproteins: discovering cellular targets by neural networks", "authors": [{"first": "N", "middle": [], "last": "Blom", "suffix": ""}, {"first": "J", "middle": [], "last": "Hansen", "suffix": ""}, {"first": "D", "middle": [], "last": "Blaas", "suffix": ""}, {"first": "S", "middle": [], "last": "Brunak", "suffix": ""}], "year": 1996, "venue": "Protein Sci", "volume": "5", "issn": "", "pages": "2203--2216", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "ZCURVE-CoV: a new system to recognize protein coding genes in coronavirus genomes, and its applications in analyzing SARS-CoV genomes", "authors": [{"first": "L", "middle": ["L"], "last": "Chen", "suffix": ""}, {"first": "H", "middle": ["Y"], "last": "Ou", "suffix": ""}, {"first": "R", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "C", "middle": ["T"], "last": "Zhang", "suffix": ""}], "year": 2003, "venue": "", "volume": "", "issn": "", "pages": "382--388", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "Learning Concept Classification Rules Using Genetic Algorithms", "authors": [{"first": "De", "middle": [], "last": "Jong", "suffix": ""}, {"first": "K", "middle": ["A"], "last": "Spears", "suffix": ""}, {"first": "W", "middle": ["M"], "last": "", "suffix": ""}], "year": 1991, "venue": "Proceedings of the I Zth. international Conference on Artificial Intelligence", "volume": "", "issn": "", "pages": "651--656", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Neural Networks in Computer Intelligence", "authors": [{"first": "Limin", "middle": [], "last": "Fu", "suffix": ""}], "year": 1994, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Rule generation from neural networks", "authors": [{"first": "Limin", "middle": [], "last": "Fu", "suffix": ""}], "year": 1994, "venue": "IEEE Transactions on Systems, Man, and Cybernetics", "volume": "24", "issn": "8", "pages": "1114--1124", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Introduction to knowledge-based neural networks. Knowledge-Based Systems", "authors": [{"first": "Limin", "middle": [], "last": "Fu", "suffix": ""}], "year": 1995, "venue": "", "volume": "8", "issn": "", "pages": "299--300", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "Abstraction and Representation of Hidden Knowledge in an Adapted Neural Network. unpublished", "authors": [{"first": "Limin", "middle": [], "last": "Fu", "suffix": ""}, {"first": "Hyeoncheol", "middle": [], "last": "Kim", "suffix": ""}], "year": 1994, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Prediction of proteinase cleavage sites in polyproteins of coronaviruses and its applications in analyzing SARS-CoV genomes", "authors": [{"first": "F", "middle": [], "last": "Gaoa", "suffix": ""}, {"first": "H", "middle": ["Y"], "last": "Oua", "suffix": ""}, {"first": "L", "middle": ["L"], "last": "Chena", "suffix": ""}, {"first": "W", "middle": ["X"], "last": "Zhenga", "suffix": ""}, {"first": "C", "middle": ["T"], "last": "Zhanga", "suffix": ""}], "year": 2003, "venue": "", "volume": "553", "issn": "", "pages": "451--456", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Coronavirus 3CL-pro proteinase cleavage sites: Possible relevance to SARS virus pathology", "authors": [{"first": "L", "middle": [], "last": "Kiemer", "suffix": ""}, {"first": "O", "middle": [], "last": "Lund", "suffix": ""}, {"first": "S", "middle": [], "last": "Brunak", "suffix": ""}, {"first": "N", "middle": [], "last": "Blom", "suffix": ""}], "year": 2004, "venue": "BMC Bioinformatics", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "Computationally Efficient Heuristics for If-Then Rule Extraction from Feed-Forward Neural Networks", "authors": [{"first": "Hyeoncheol", "middle": [], "last": "Kim", "suffix": ""}], "year": 2000, "venue": "Lecture Notes in Artificial Intelligence", "volume": "1967", "issn": "", "pages": "170--182", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "Genetic Algorithms + Data Structures = Evolution Programs", "authors": [{"first": "Z", "middle": [], "last": "Michalewicz", "suffix": ""}], "year": 1996, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "An Introduction to Genetic Algorithms", "authors": [{"first": "M", "middle": [], "last": "Mitchell", "suffix": ""}], "year": 1996, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "Mining viral protease data to extract cleavage knowledge", "authors": [{"first": "A", "middle": [], "last": "Narayanan", "suffix": ""}, {"first": "X", "middle": [], "last": "Wu", "suffix": ""}, {"first": "Z", "middle": ["R"], "last": "Yang", "suffix": ""}], "year": 2002, "venue": "bioinformatics", "volume": "18", "issn": "1", "pages": "5--13", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Understanding neural networks via rule extraction", "authors": [{"first": "Rudy", "middle": [], "last": "Setino", "suffix": ""}, {"first": "Huan", "middle": [], "last": "Liu", "suffix": ""}], "year": 1995, "venue": "Proceedings of the 14th International Conference on Neural Networks", "volume": "", "issn": "", "pages": "480--485", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "SARS -BEGINNING TO UNDERSTAND A NEW VIRUS", "authors": [{"first": "K", "middle": [], "last": "Stadler", "suffix": ""}, {"first": "V", "middle": [], "last": "Masignani", "suffix": ""}, {"first": "M", "middle": [], "last": "Eickmann", "suffix": ""}, {"first": "S", "middle": [], "last": "Becker", "suffix": ""}, {"first": "S", "middle": [], "last": "Abrignani", "suffix": ""}, {"first": "H", "middle": ["D"], "last": "Klenk", "suffix": ""}, {"first": "R", "middle": [], "last": "Rappuoli", "suffix": ""}], "year": 2003, "venue": "", "volume": "1", "issn": "", "pages": "209--218", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Symbolic interpretation of artificial neural networks", "authors": [{"first": "Ismali", "middle": ["A"], "last": "Taha", "suffix": ""}, {"first": "Joydeep", "middle": [], "last": "Ghosh", "suffix": ""}], "year": 1999, "venue": "IEEE Transactions on Knowledge and Data Engineering", "volume": "11", "issn": "3", "pages": "443--463", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Extracting refined rules from knowledgebased neural networks", "authors": [{"first": "Geoffrey", "middle": ["G"], "last": "Towell", "suffix": ""}, {"first": "Jude", "middle": ["W"], "last": "Shavlik", "suffix": ""}], "year": 1993, "venue": "Machine Learning", "volume": "13", "issn": "1", "pages": "", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Relationship of SARS-CoV to other pathogenic RNA viruses explored by tetranucleotide usage profiling", "authors": [{"first": "Y", "middle": ["L"], "last": "Yap", "suffix": ""}, {"first": "X", "middle": ["W"], "last": "Zhang", "suffix": ""}, {"first": "A", "middle": [], "last": "Danchin", "suffix": ""}], "year": 2003, "venue": "BMC Bioinformatics", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "SARS Corona virus and six other Corona viruses 1", "latex": null, "type": "figure"}, "FIGREF1": {"text": "The sequence logo of SARS-CoV cleavage sites. P1 = N-terminal to cleavage site, P1'= C-terminal to cleavage site", "latex": null, "type": "figure"}, "FIGREF2": {"text": "nt (or nf) is the number of positive (or negative) instances matched by the chromosome rule and d is the number of *s (i.e., don't_care symbols) in the chromosome.", "latex": null, "type": "figure"}, "FIGREF3": {"text": "# of examples matched by the condition part Total # of examples coverage = # of true positive examples # of examples matched by the condition part accuracy =", "latex": null, "type": "figure"}, "TABREF0": {"text": "The performance of the rules extracted from each classifier algorithm (standard coverage: +17%, standard accuracy: +60%)", "latex": null, "type": "table"}}, "back_matter": []}