{
    "paper_id": "1c3656c81c6750d6cddec5715f0ccba5361d66c6",
    "metadata": {
        "title": "Expressiveness and Conciseness of Timed Automata for the Verification of Stochastic Models",
        "authors": [
            {
                "first": "Susanna",
                "middle": [],
                "last": "Donatelli",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Universit\u00e0 di Torino",
                    "location": {
                        "settlement": "Turin",
                        "country": "Italy"
                    }
                },
                "email": "donatelli@di.unito.it"
            },
            {
                "first": "(",
                "middle": [
                    "B"
                ],
                "last": "",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Serge",
                "middle": [],
                "last": "Haddad",
                "suffix": "",
                "affiliation": {
                    "laboratory": "LSV, ENS Paris-Saclay, CNRS, Inria",
                    "institution": "Universit\u00e9 Paris-Saclay",
                    "location": {
                        "settlement": "Cachan",
                        "country": "France"
                    }
                },
                "email": "haddad@lsv.fr"
            }
        ]
    },
    "abstract": [
        {
            "text": "Timed Automata are a well-known formalism for specifying timed behaviours. In this paper we are concerned with Timed Automata for the specification of timed behaviour of Continuous Time Markov Chains (CTMC), as used in the stochastic temporal logic CSL TA . A timed path formula of CSL TA is specified by a Deterministic Timed Automaton (DTA) that features two kinds of transitions: synchronizing transitions (triggered by CTMC transitions) and autonomous transitions (triggered when a clock reaches a given threshold). Other definitions of CSL TA are based on DTAs that do not include autonomous transitions. This raises the natural question: do autonomous transitions enhance expressiveness and/or conciseness of DTAs? We prove that this is the case and we provide a syntactical characterization of DTAs for which autonomous transitions do not add expressive power, but allow one to define exponentially more concise DTAs.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Stochastic logics like CSL [5] allow one to express assertions about the probability of timed executions of Continuous Time Markov Chains (CTMC). In CSL, model executions (typically called \"paths\") are specified by two operators: timed neXt and timed Until. CSL has been extended in several ways to include action names (name of the events in the paths) and path properties specified using regular expressions leading to asCSL [6] , or rewards, leading to CSRL [7] . Note that asCSL can specify rather complex path behaviour, expressed by regular expressions, but the timing requirements cannot be mixed within these expressions. GCSRL [14] is an extension of CSRL for model checking of CTMC generated by Generalized Stochastic Petri nets (GSPN) [1] taking into account both stochastic and immediate events.",
            "cite_spans": [
                {
                    "start": 27,
                    "end": 30,
                    "text": "[5]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 427,
                    "end": 430,
                    "text": "[6]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 461,
                    "end": 464,
                    "text": "[7]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 636,
                    "end": 640,
                    "text": "[14]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 746,
                    "end": 749,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Automata with time constraints have been used to specify path-based performance indices [16] for Stochastic Activity Networks [15] , while hybrid automata have been used to define rather complex forms of passage of time [2] for GSPN, as well as generic performance properties [9] that are estimated using simulation. The use of a Deterministic Timed Automaton (DTA) in the stochastic logic CSL TA [12] allows to specify paths in terms of state propositions and action names associated to CTMC states and transitions (respectively) and in terms of the timed behaviour of portions of the paths. The CTMC actions are the input symbols for the DTA, and two types of transitions are distinguished: synchronizing transitions that read the input symbols of the CTMC, and autonomous transitions, that are taken by the DTA when the clock reaches some threshold, with priority over synchronizing ones. The determinism requirement ensures that the synchronized product of the DTA and the CTMC is still a stochastic process as all sources of non-determinism are eliminated. CSL TA strictly includes [12] CSL and asCSL. Various extensions of CSL TA have been presented in the literature. DTA with multiple clocks have been used for defining an extension of CSL TA [10, 13] but autonomous transitions are not allowed. In this paper we concentrate on single-clock CSL TA with autonomous transitions, as in the original definition of CSL TA . Indeed the single-clock limitation is a necessary requirement to reduce the CSL TA model-checking problem to the (steady-state) solution of a Markov Regenerative Process, which is the largest class of stochastic processes for which we can compute an exact numerical solution, supported by efficient solution tools [3, 4] . The single-clock setting allows also to investigate whether the definition of CSL TA in [10, 13] , once limited to a single clock, is equivalent to the original definition of CSL TA (introduced in [12] ). Paper Contributions. This paper addresses two research questions. The first one (Sect. 3) is whether the presence of autonomous transitions enhances the expressiveness of DTAs both in terms of timed languages (qualitative comparison) and in terms of probability of accepting the random path of a CTMC (quantitative comparison). We establish that autonomous transitions do enhance expressiveness. Given that eliminating autonomous transitions from a DTA is not always feasible, the second question (Sect. 4) is which are the uses of autonomous transitions that can be emulated by DTA w/o autonomous transitions. We have identified a hierarchy of subclasses of DTA in which the presence of autonomous transitions does not extend expressiveness (and autonomous transitions can therefore be eliminated), but that exponentially improves the DTA size. Only the most interesting proofs and properties have been included in this paper. Missing proofs and the full set of properties can be found in [11] .",
            "cite_spans": [
                {
                    "start": 88,
                    "end": 92,
                    "text": "[16]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 126,
                    "end": 130,
                    "text": "[15]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 220,
                    "end": 223,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 276,
                    "end": 279,
                    "text": "[9]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 397,
                    "end": 401,
                    "text": "[12]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 1087,
                    "end": 1091,
                    "text": "[12]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 1251,
                    "end": 1255,
                    "text": "[10,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 1256,
                    "end": 1259,
                    "text": "13]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 1741,
                    "end": 1744,
                    "text": "[3,",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 1745,
                    "end": 1747,
                    "text": "4]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 1838,
                    "end": 1842,
                    "text": "[10,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 1843,
                    "end": 1846,
                    "text": "13]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 1947,
                    "end": 1951,
                    "text": "[12]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 2945,
                    "end": 2949,
                    "text": "[11]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Although our motivations rely on the acceptance of paths of CTMCs featuring atomic propositions that label states and actions that label transitions, we set our work in the general context of acceptance of timed paths, where the i`1-th state of a timed path is identified by v i (we count indices from 0), the boolean evaluation of the atomic propositions in that state. \u03b4 i indicates a delay, or a sojourn time in state i, and \u03c4 i indicates the time elapsed until exiting state i. A timed path leaves state v i with action a i after a sojourn time in the state equal to \u03b4 i . The elapsed time can be computed as: \u03c4 i \" \u03b4 i`\u03c4i\u22121 , with \u03c4 \u22121 \" 0.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Context and Definitions"
        },
        {
            "text": "Example 1 (Timed Path). In writing timed paths we indicate functions v i as the set of elements in AP that evaluate to J. Given AP \" {p, q} and Act \"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 1 (Timed Path). Given a set AP of atomic propositions and a set Act of actions, a timed (infinite) path is a sequence"
        },
        {
            "text": "is interpreted as the system staying in a state that satisfies p^q in the time interval [0, 0.5[, at time 0.5 action a takes place and the system moves to a state that satisfies \u00acp^q, stays there for 1.3 time units and then action b takes place (at the global time \u03c4 \" 1.8).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 1 (Timed Path). Given a set AP of atomic propositions and a set Act of actions, a timed (infinite) path is a sequence"
        },
        {
            "text": "DTA definition includes a clock x and two types of constraints: boundary ones, BoundC = {x \" \u03b1, \u03b1 P N} and inner ones, InC = {\u03b1 x \u03b2}, with , P {\u0103, , }, \u03b1 P N, and \u03b2 P N Y {8}. In the sequel, C is the largest time constant occurring in a DTA. Before formally defining the syntax and semantic of a DTA (Definitions 2, 3 and 4), let us introduce its main ingredients. During the execution of a stochastic discrete event system (e.g. a Markov chain) that can be represented by a timed path, one manages (1) an index i of the timed path (2) a location, say , is matched with the current state of the path indexed by i, and (3) a delay \u03b4 \u03b4 i until the next state change from i to i`1. The function \u039b mapping the set of locations to the set of boolean expressions over atomic propositions, B AP , restricts the possible matchings since the valuation v i must satisfy the formula \u039b( ). This matching evolves in three ways depending on the delay \u03b4, elapsed until the next transition (v i , \u03b4 i ) ai \u2212 \u2192 (v i`1 , \u03b4 i`1 ) of the path.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 1 (Timed Path). Given a set AP of atomic propositions and a set Act of actions, a timed (infinite) path is a sequence"
        },
        {
            "text": "-Either after some delay \u03b4 \u03b4, there is an outgoing autonomous transition from whose boundary condition (say x \" \u03b1) is satisfied and such that v i fulfills \u039b( ) where is the target location of the transition. Then is matched with i, delay \u03b4 becomes \u03b4 \u2212 \u03b4 , the clock x is increased by \u03b4 and the index i is unchanged. -Else if there is a synchronizing transition outgoing from such that (1) after time \u03b4 has elapsed its inner condition (say \u03b1 x \u03b2) is satisfied, (2) the action a i belongs to the subset of actions associated with the synchronizing transition, and (3) v i`1 satisfies \u039b( ) where is the target location of the transition. Then is matched with i`1, the new delay \u03b4 is set to \u03b4 i`1 , the clock x is either increased by \u03b4 or reset depending on the transition, and the index becomes i`1. -Otherwise there is no possible matching and the timed path is rejected by the DTA.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 1 (Timed Path). Given a set AP of atomic propositions and a set Act of actions, a timed (infinite) path is a sequence"
        },
        {
            "text": "In the first two cases above, when \" f , the final location, the timed path is accepted by the DTA whatever its future. This is ensured due to \u039b( f ) \" J and the existence of the unique (looping) synchronizing transition from f with no timing and action conditions. Observe that the synchronization may last forever without visiting f : in this case the timed path is rejected.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 1 (Timed Path). Given a set AP of atomic propositions and a set Act of actions, a timed (infinite) path is a sequence"
        },
        {
            "text": "Furthermore the synchronization of the stochastic system with the DTA should not introduce non determinism. So (1) the formulas associated with the initial locations are mutually exclusive, (2) synchronizing transitions outgoing from the same location are never simultaneously enabled, (3) autonomous transitions outgoing from the same location are never simultaneously enabled, and (4) autonomous transitions have priority over synchronizing transitions.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 1 (Timed Path). Given a set AP of atomic propositions and a set Act of actions, a timed (infinite) path is a sequence"
        },
        {
            "text": "A single-clock Deterministic Timed Automaton with autonomous transitions is defined by a tuple A \" L, \u039b, L 0 , f , AP , Synch, Aut where L is a finite set of locations, L 0 \u010e L is the set of initial locations, f P L is the final location, \u039b : L \u2192 B AP is a function that assigns to each location a boolean expression over the set of propositions AP , Synch \u010e L\u02c6InC\u02c62 Act\u02c6 \u2205, \u2193 \u02c6L is the set of synchronizing transitions, and Aut \u010e L\u02c6BoundC\u02c67\u02c6 \u2205, \u2193 \u02c6L is",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 2 (DTA)."
        },
        {
            "text": "Given a clock constraint \u03b3 and a clock valuationx,x |\" \u03b3 denotes the satisfaction of \u03b3 byx. Similarly given a boolean formula \u03d5 and a valuation of atomic propositions v, v |\" \u03d5 denotes the satisfaction of \u03d5 by v. Example 2 (DTA). Figure 1 , left, shows a DTA with five locations: 0 , 1 , 2 , 3 and f . There is a single initial location, 0 . Autonomous transitions are depicted as dotted arcs, while synchronizing are depicted as solid arcs. For readability we omit: (1) the symbol 7 on autonomous transitions; (2) the set r when there is no reset; (3) Act if a transition accepts all actions; (4) trivially true guards (like x 0) and boolean conditions; (5) the name x of the clock in x \" \u03b1 guards.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 230,
                    "end": 238,
                    "text": "Figure 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Definition 2 (DTA)."
        },
        {
            "text": "As a result an autonomous transition is depicted as either l \u03b1,\u2193 \u2212 \u2212 \u2192 l , as between 1 and 0 , or as l \u03b1 \u2212 \u2192 l , as between 0 and 2 . We informally write \"a transition with reset\" or \"a transition without reset\" to indicate the condition r \" \u2193 and r \" \u2205 respectively. The arc from 0 to 1 represents a synchronizing transition with a clock reset. The arc from 0 to 2 represents an autonomous transition to be taken when the clock is equal to 1, with no clock reset. Boolean expression of locations are: p, associated with 0 , 1 , 2 and (\u00acp^q), associated with 3 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 2 (DTA)."
        },
        {
            "text": "Let us describe a possible run of this DTA. At time 0.5, it goes from 0 to 1 by performing action a and resets x. Then at time 1.5, it autonomously comes back to location 0 and clock x is again reset. Then it autonomously goes to 2 at time 2.5 and later to f at time 3.5. While irrelevant, x has current value 2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 2 (DTA)."
        },
        {
            "text": "To enforce priority of autonomous transitions,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 3 (Run of"
        },
        {
            "text": "A run is therefore a path in the DTA where the visited locations are coupled with a valuation of propositions, a clock value and a delay in a consistent way w.r.t. the DTA.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 3 (Run of"
        },
        {
            "text": "Given that v is described in terms of the subset of AP that evaluate to J, a run for the DTA of Fig. 1 , left, is: 0",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 96,
                    "end": 102,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Example 3 (DTA run)."
        },
        {
            "text": "A timed path \u03c3 is recognized by a run \u03c1 of A such that the occurrences of the actions in \u03c3 are matched by the synchronizing transitions in \u03c1. This requires to define a mapping to match the points in the paths in which synchronizing transitions take place. This can be done by identifying a strictly increasing mapping for the indices of the timed path \u03c3 to the subset of the indices of the run \u03c1 that correspond to a synchronizing transition. Note that, due to determinism, if such a run exists, it is unique.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Example 3 (DTA run)."
        },
        {
            "text": "\u03c3 \" (v 0 , \u03b4 0 ) a0 \u2212 \u2192 (v 1 , \u03b4 1 ) a1 \u2212 \u2192 \u00b7 \u00b7 \u00b7 (v i , \u03b4 i ) ai \u2212 \u2192 \u00b7 \u00b7 \u00b7 be a timed path and \u03c1 \" ( 0 , v 0 ,x 0 , \u03b4 0 ) \u03b30,B0,r0 \u2212\u2212\u2212\u2212\u2212\u2192 \u00b7 \u00b7 \u00b7 ( i , v i ,x i , \u03b4 i ) \u03b3i,Bi,ri \u2212 \u2212\u2212\u2212\u2212 \u2192 \u00b7 \u00b7 \u00b7 be a run of a DTA A. Then \u03c3 is recognized by \u03c1 if there is a strictly increasing mapping \u03ba : N \u2192 N (extended to \u03ba(\u22121) \" \u22121), such that for all i P N -a i P B \u03ba(i) and \u03b4 i \" \u03ba(i\u22121)\u0103h \u03ba(i) \u03b4 h -\u2200h, \u03ba(i \u2212 1) \u0103 h \u03ba(i) \u21d2 v h \" v i and h P \u03ba(N) \u21d2 B h \" 7 A timed path \u03c3 is accepted by A if \u03c3 is recognized by a run \u03c1 and \u03c1 visits f . The language L(A) of A is the set of the timed paths \u03c3 accepted by A.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 4 (Path recognized by A and L(A)). Let"
        },
        {
            "text": ":(p, \u03b4) \u00b7 \u00b7 \u00b7 is recognized by the run of Example 3 with mapping \u03ba:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Example 4 (Path recognized by a run)."
        },
        {
            "text": "The run visits f and the path is accepted.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Example 4 (Path recognized by a run)."
        },
        {
            "text": "We consider timed paths generated by a CTMC with state properties and actions. We assume that each state has at least one successor: for all s P S, exists a P Act, s P S such that R(s, a, s ) > 0. CTMC executions lead to timed paths, and a CTMC is a generator of a random path. We define by Pr M (A) the probability that the random path of M is accepted by A (probability measure of all paths accepted by A as in [8] ).",
            "cite_spans": [
                {
                    "start": 413,
                    "end": 416,
                    "text": "[8]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Example 4 (Path recognized by a run)."
        },
        {
            "text": "M \" S, s 0 , Act , AP , lab, R , where S is a finite set of states, s 0 P S the initial state,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 5 (CTMC representation). A continuous time Markov chain with state and action labels is represented by a tuple"
        },
        {
            "text": "We indicate with A the whole family of automata of Definition 2 and with A na the subclass of automata with no autonomous transitions: A na \" {A P A | Aut(A) \" \u2205} The comparison of the expressive power of A and A na is both qualitative (based on the timed path language) and quantitative (based on accepting probabilities). As usual, we derive other relations between such families. A 1 and A 2 are equally expressive w.r.t. language (resp. Markov chains), denoted",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Autonomous Transitions and Expressiveness"
        },
        {
            "text": "Observe that by definition Observe the difference between sc i , defined at the syntactical level, which maps a location to its i th successor and sc, defined at the semantical level, which maps a pair consisting in a location and a clock valuation to the new clock valuation obtained by firing the single transition enabled w.r.t. the clock valuation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 6. Let"
        },
        {
            "text": "We also define the region (multi-)graph G A \" (V, E) of such a DTA A as follows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 6. Let"
        },
        {
            "text": "-V , the set of vertices, is defined by V \" {( , i) | P L^0 i C`1}; -Let ( , i) be a vertex, then for all j s.t. max(i, 1) j C`1, there is a transition from ( , i) to (sc j ( ), j ) labelled by j with j \" 0 if r j \"\u2193 and j \" j otherwise. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 6. Let"
        },
        {
            "text": "The above formula represents the probability of acceptance when the Markov chain starts in s and the DTA starts in with clock valuation t, with i \u2212 1 t i C, therefore within the region (l, i). This probability is computed in terms of the probability of having the next CTMC transition within the region (l, i) itself, or any later region (l, j), multiplied by the probability of acceptance from the state reached by accepting the CTMC transition.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "Proof. Define p n (s, , t) as the probability that the run associated with a random timed path of M starting in s when the DTA starts in with clock valuation t reaches location f after performing n actions. Then for \" f , p 0 (s, , t) \" 0 and p 0 (s, f , t) \" 1. Assume that p n (s, , t) is continuous (and so measurable) for all s and . Then the following equation holds for i \u2212 1 t i C:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "Observe that for \u03c4 > C, p n (sc(s), sc C`1 ( ), sc( , \u03c4 )) is constant since if there is a reset then sc( , \u03c4 ) \" 0 and if there is no reset then sc( , \u03c4 ) \" \u03c4 > C and so the valuation of the clock is irrelevant. Thus the equation can be rewritten as follows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "Observe that max(1, \u03bb s )e \u2212\u03bbs\u03c4 is uniformly continuous. So pick \u03b7 > 0 such that",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": ". Then for all t \u0103 t t`\u03b7, one bounds |p n`1 (s, , t) \u2212 p n`1 (s, , t )| by the sum of three terms using the above equation to establish that |p n`1 (s, , t) \u2212 p n`1 (s, , t )| \u03b5. Thus p n`1 (s, , t) is continuous. When t > C, p n`1 (s, , t) is constant and so continuous. Observe that p(s, , t) \" lim n\u21928 p n (s, , t). So the mapping p(s, , t) is measurable as a limit of continuous mappings. Thus Eq. 1 holds for i \u2212 1 t i C: Repeating the same argument as the one for the inductive case yields the result. When t > C, p(s, , t) is constant and so continuous. Proof. We will even prove this result when restricting the quantification to Markov chains with a single action and a single valuation of propositions for all states and a single successor for all states. Thus we can omit propositions and actions in the DTA and only consider simple chains.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "Let A be an automaton that satisfies the hypothesis. We want to establish that for all configurations ( , t) in some region of G A reachable from ( 0 , 0), and for all states s of a simple Markov chain, p(s, , t) \" z. We do this by induction on the distance from the initial region in the region graph and then we prove that z is either 0 or 1. The basis case of the induction corresponds to the assumption Pr M (A) \" z, for all M. For the inductive step we assume that for a given ( , t), and for all states s of a simple chain, p(s, , t) \" z and we prove that the p(s , , t ) \" z, for all (s , , t ) reachable in one step from (s, , t). Let M be an arbitrary simple chain and define M \u03bb as the simple chain with a single transition outgoing from its initial state to the initial state of M whose rate is \u03bb. Let s be the initial state of M \u03bb . By assumption, p(s, , t) \" z. Define f (\u03c4 ) by p(sc(s), sc j ( ), sc( , t`\u03c4 )) when j \u2212 1 \u0103 t`\u03c4 j C and by p(sc(s), sc C`1 ( ), sc( , t`\u03c4 )) when t`\u03c4 > C. Equation 1 can be rewitten as p(s, , t) \" \u03c4 0 \u03bbe \u2212\u03bb\u03c4 f (\u03c4 )d\u03c4 . Since for all \u03bb, Pr M \u03bb (A) \" z, the Laplace transform of f (\u03c4 ) is equal to z \u03bb , i.e. the Laplace transform of the constant function z. By the theorem of unicity of Laplace transforms, this entails that f (\u03c4 ) \" z except for a set of null measure. However, consider a successor region ( , i) of location with clock valuation t .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "\u2022 Either i \" 0 (meaning that there has been a reset) and the region has a single point reached with non null probability. So p(sc(s), , 0) \" z. \u2022 Or i > 0, so by Lemma 1, p(sc(s), , t ) is continuous inside the region w.r.t.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 162,
                    "end": 185,
                    "text": "Lemma 1, p(sc(s), , t )",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "t and thus everywhere equal to z.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "So the induction is established. So if a region of f is reachable in the region graph, then z \" 1. Otherwise f is not reachable implying that no run is accepting, and thus z \" 0.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "We can now prove Theorem 1 (A na \u0148 M A). Proof of Theorem 1. The DTA A in Fig. 1 (lower right) has an action set reduced to a singleton {a} (omitted in the figure) and an empty set of propositions. The language of A is the set of timed paths whose first action occurs at time \u03c4 P [2i, 2i`1[ for some i P N. Assume by contradiction that there exists A P A na such that for all Markov chain M, Pr M (A ) \" Pr M (A). Pick an arbitrary Markov chain M and define M \u03bb as the Markov chain which has a single transition from its initial state to the initial state of M with rate \u03bb. It is routine to check that Pr M \u03bb (A) \" 1\u2212e \u2212\u03bb 1\u2212e \u22122\u03bb (as only the first transition of M \u03bb is relevant) and, consequently, lim \u03bb\u21920 Pr M \u03bb (A) \" 1 2 and, given the hypothesis, also lim \u03bb\u21920 Pr M \u03bb (A ) \" 1 2 . Pr M \u03bb (A ) can be decomposed as p 1,\u03bb`p2,\u03bb where p 1,\u03bb is the probability to accept the random timed path and that the first action takes place at most at time C and p 2,\u03bb is the probability to accept the random timed path and that the first action takes place after C, where C is the maximal constant of A . But lim \u03bb\u21920 p 1,\u03bb \" 0 and therefore lim \u03bb\u21920 p 2,\u03bb \" 1 2 . On the other hand, let 1 be the location of A reached from its initial location when the value of the clock is greater than C, its maximal constant. There must be one, if not lim \u03bb\u21920 p 2,\u03bb \" 0, which contradicts what derived above. We want to design an automaton A equivalent to A when reaching 1 with clock value greater than C: any timed path is accepted by A iff it is accepted by A when starting in 1 with clock valuation greater than C. For the construction we duplicate the automaton and merge the final location, the initial location is location 1 of the first copy, and in the first copy we add to the guard of all transitions the formula x > C and redirect the transitions that reset the clock to the corresponding location of the second copy.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 74,
                    "end": 94,
                    "text": "Fig. 1 (lower right)",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 156,
                    "end": 163,
                    "text": "figure)",
                    "ref_id": null
                }
            ],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "But then lim \u03bb\u21920 p 2,\u03bb \" Pr M (A ). Since lim \u03bb\u21920 p 2,\u03bb \" 1 2 and M is arbitrary, this contradicts Proposition 1 applied to A .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "The DTA in Fig. 1 (upper right) shows that the above counter-example is of practical interest. Consider a periodic system that cycles over phases of duration 2, each split in two sub-phases of duration 1 (for example a running and a reset phase) and that can experience good (G), bad (B), and neutral (N) actions, generated from a CTMC of arbitrary complexity. The depicted DTA allows one to compute the probability of the CTMC behaviours characterized by a good action in the running sub-phase, given that in the preceding phases no bad action has happened in the running phase. Any action is instead allowed during the reset phase.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 11,
                    "end": 31,
                    "text": "Fig. 1 (upper right)",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Lemma 1. Let s be a state of a simple Markov chain M and be a location of a DTA in A na . Then the function that maps t to p(s, , t) is continuous and for"
        },
        {
            "text": "We have established that there exists DTAs that cannot be translated into DTAs without autonomous transitions (A na \u0148 M A). We now investigate whether restricted forms of use of autonomous transitions are as expressive as A na . To this goal we identify two additional subclasses of A, namely A nra and A rc , characterized by a limited presence of autonomous transitions and that are in the following subset relationship:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Autonomous Transitions and Conciseness"
        },
        {
            "text": "A rc is the subclass of automata A P A in which all cycles of A including an autonomous transition with a reset also include a synchronizing transition ( , \u03b3, B, r, ) with r \"\u2193 or \u03b3 \" (x > C).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Restricted cycles."
        },
        {
            "text": "A rc in which there is no autonomous transition that resets the clock:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "No reset on autonomous transitions. A nra is the subclass of automata A P"
        },
        {
            "text": "The DTA on the left of Fig. 1 belongs to A rc \\A nra : indeed there is an autonomous transition with reset (from 1 to 0 ), therefore it is not in A nra , but although the transition is part of a cycle, that cycle also includes a synchronizing transition with reset (from 0 to 1 ). Any DTA with no reset on autonomous transitions is an example of A nra . The family A rc has been introduced to provide an accurate syntactical characterization of DTA for which the autonomous transitions do not add expressive power. In some sense, the DTA of Theorem 1 emphasizes the interest of A rc since the cycle performed by the autonomous resetting transition points out what increases the expressive power. A nra , which forbids clock resets on autonomous transitions, removes from CSL TA the capacity of combining time constants depending on the time elapsed during (a portion of) an execution. As observed in [12] (section 4), clock resets on autonomous transitions are what makes CSL TA more expressive than asCSL [6] .",
            "cite_spans": [
                {
                    "start": 900,
                    "end": 904,
                    "text": "[12]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 1006,
                    "end": 1009,
                    "text": "[6]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [
                {
                    "start": 23,
                    "end": 29,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "No reset on autonomous transitions. A nra is the subclass of automata A P"
        },
        {
            "text": "The following frame summarizes the results for A subclasses.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "No reset on autonomous transitions. A nra is the subclass of automata A P"
        },
        {
            "text": "A na \" L A nra \" L A rc \u0148 M A with A rc (A nra ) exponentially more concise than A nra (A na , respectively)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "No reset on autonomous transitions. A nra is the subclass of automata A P"
        },
        {
            "text": "We first establish that in A rc the autonomous resetting transitions can be mimicked in A nra using additional finite memory, but with exponential cost.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "No reset on autonomous transitions. A nra is the subclass of automata A P"
        },
        {
            "text": "There exists an algorithm operating in exponential time that takes as input A P A rc and outputs A P A nra with L(A ) \" L(A).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 2."
        },
        {
            "text": "Sketch of Proof. The construction (1) duplicates locations by memorizing in the location an integer value, (2) take into account this value for modifying the guard and the destination of the outgoing transitions, and (3) deletes the reset of autonomous transitions. This value corresponds to the accumulated value of constants in the guards of resetting autonomous transitions since the last visit of a synchronizing transition with a reset or a guard x > C. The restriction over A rc ensures that this value is bounded by some finite integer K. However K may be exponential in the size of A and thus this transformation is exponential.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 2."
        },
        {
            "text": "The exponential blowup due to the duplication of locations is unavoidable:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 2."
        },
        {
            "text": "There exists a family {A n } nPN in A rc such that the size of A n is O(n 2 ) and for all A P A nra with L(A) \" L(A n ), (|Aut|`1)|Synch| 2 n .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 2."
        },
        {
            "text": "We now prove that autonomous transitions in A nra can be eliminated, also at an exponential cost.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 2."
        },
        {
            "text": "Sketch of Proof. The construction proceeds in two steps: at first, cycles of autonomous transitions are eliminated, then all (linear) paths of autonomous transitions are eliminated. The first construction is quadratic, as we duplicate each location to store in the location the information on the number of autonomous transitions visited since the last visit of a synchronized transition. The idea of this construction is that if a path exceeds the number of autonomous transitions it must visit twice the same autonomous transition without visiting a synchronized transition and so diverges. In words: in the resulting DTA, divergence has been transformed into deadlock. This finite memory has a linear size w.r.t. the size of the original DTA.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 4. There exists an algorithm operating in exponential time that takes as input A P A nra and outputs"
        },
        {
            "text": "The second step consists in eliminating autonomous transitions when there are no such cycles. The key point is to select a location which is the source of the last autonomous transition of a maximal path of such transitions. Thus every autonomous transition outgoing from reaches some location u where only synchronized transitions are possible. Roughly speaking, the construction builds a synchronized transition corresponding to a sequence of an autonomous transition followed by a synchronized transition. However the construction is more involved since has to be duplicated in order to check which autonomous transition can be triggered (or if no autonomous transition can be triggered). This duplication also has an impact on the incoming transitions of . Repeating (at most |L| times) this transformation eliminates all autonomous transitions. The exponential blowup due to the repetition of duplication of locations is unavoidable:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 4. There exists an algorithm operating in exponential time that takes as input A P A nra and outputs"
        },
        {
            "text": "There exists a family of automata {A n } nPN in A nra such that the size of A n belongs to O(n log(n)) and for all A P A na with L(A) \" L(A n ) the number of its locations is at least 2 n .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 4. There exists an algorithm operating in exponential time that takes as input A P A nra and outputs"
        },
        {
            "text": "We have established that autonomous transitions do enhance expressiveness of single clock DTAs, and more precisely for the less discriminating case of the probability of the random paths of a CTMC accepted by the DTA. This is the most relevant one for comparing some variations of (1-clock) CSL TA defined in the literature. This enhanced expressiveness is due to the possibility of associating clock resets with autonomous transitions that occur in a cycle. The small counterexample of Proposition 1 can be seen as the basic construct to study systems with periodic behaviours or periodic phases, with clear practical implications. Even in DTA subclasses for which the autonomous transitions do not enhance expressiveness, they do play a role in defining concise DTAs: removing autonomous transitions may lead to an exponential blow up of the DTA.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion and Future Work"
        },
        {
            "text": "We plan to investigate whether the precise identification of the characteristics that enhance expressiveness and conciseness can help the identification of the best algorithms for CSL TA model-checking, in particular for the componentbased method [4] . Moreover, following the suggestion by an anonymous reviewer, we intend to investigate further consequences of Proposition 1, for example to study systems that include probabilistic choices of autonomous transitions.",
            "cite_spans": [
                {
                    "start": 247,
                    "end": 250,
                    "text": "[4]",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion and Future Work"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Modelling with Generalized Stochastic Petri Nets",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ajmone-Marsan",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Balbo",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Conte",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Donatelli",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Franceschinis",
                    "suffix": ""
                }
            ],
            "year": 1995,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Expressing and computing passage time measures of GSPN models with HASL",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "G"
                    ],
                    "last": "Amparore",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Ballarini",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Beccuti",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Donatelli",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Franceschinis",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "PETRI NETS 2013",
            "volume": "7927",
            "issn": "",
            "pages": "110--129",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "MC4CSL TA : an efficient model checking tool for CSL TA",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "G"
                    ],
                    "last": "Amparore",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Donatelli",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "QEST 2010",
            "volume": "",
            "issn": "",
            "pages": "153--154",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Efficient model checking of the stochastic logic CSLTA",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "G"
                    ],
                    "last": "Amparore",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Donatelli",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Perform. Eval. 123",
            "volume": "124",
            "issn": "",
            "pages": "1--34",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Model-checking continuous-time Markov chains",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Aziz",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Sanwal",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Singhal",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Brayton",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "ACM Trans. Comput. Log",
            "volume": "1",
            "issn": "1",
            "pages": "162--170",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Model checking Markov chains with actions and state labels",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Baier",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Cloth",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "R"
                    ],
                    "last": "Haverkort",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Kuntz",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Siegle",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "IEEE TSE",
            "volume": "33",
            "issn": "",
            "pages": "209--224",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "On the logical characterisation of performability properties",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Baier",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Haverkort",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Hermanns",
                    "suffix": ""
                },
                {
                    "first": "J.-P",
                    "middle": [],
                    "last": "Katoen",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "ICALP 2000",
            "volume": "1853",
            "issn": "",
            "pages": "780--792",
            "other_ids": {
                "DOI": [
                    "10.1007/3-540-45022-X_65"
                ]
            }
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Model-checking algorithms for continuous-time Markov chains",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Baier",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Haverkort",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Hermanns",
                    "suffix": ""
                },
                {
                    "first": "J.-P",
                    "middle": [],
                    "last": "Katoen",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "IEEE TSE",
            "volume": "29",
            "issn": "6",
            "pages": "524--541",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "HASL: a new approach for performance evaluation and model checking from concepts to experimentation",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Ballarini",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Barbot",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Duflot",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Haddad",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Pekergin",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Perform. Eval",
            "volume": "90",
            "issn": "",
            "pages": "53--77",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Model checking of continuoustime Markov chains against timed automata specifications",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Tchen",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Han",
                    "suffix": ""
                },
                {
                    "first": "J.-P",
                    "middle": [],
                    "last": "Katoen",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Mereacre",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Log. Methods Comput. Sci",
            "volume": "7",
            "issn": "1",
            "pages": "1--34",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Autonomous Transitions Enhance CSA TA Expressiveness and Conciseness",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Donatelli",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Haddad",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Model checking timed and stochastic properties with CSL TA",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Donatelli",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Haddad",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Sproston",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "IEEE TSE",
            "volume": "35",
            "issn": "2",
            "pages": "224--240",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Monitoring CTMCs by multiclock timed automata",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Feng",
                    "suffix": ""
                },
                {
                    "first": "J.-P",
                    "middle": [],
                    "last": "Katoen",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Xia",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Zhan",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "CAV 2018",
            "volume": "10981",
            "issn": "",
            "pages": "507--526",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-319-96145-3_27"
                ]
            }
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "GCSRL-a logic for stochastic reward models with timed and untimed behaviour",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Kuntz",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "R"
                    ],
                    "last": "Haverkort",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "8th PMCCS",
            "volume": "",
            "issn": "",
            "pages": "50--56",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Stochastic activity networks: structure, behavior, and application",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "F"
                    ],
                    "last": "Meyer",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Movaghar",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "H"
                    ],
                    "last": "Sanders",
                    "suffix": ""
                }
            ],
            "year": 1985,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "106--115",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "State-space support for path-based reward variables",
            "authors": [
                {
                    "first": "I",
                    "middle": [
                        "I"
                    ],
                    "last": "Obal",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "D"
                    ],
                    "last": "Sanders",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "H"
                    ],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 1999,
            "venue": "Perform. Eval",
            "volume": "35",
            "issn": "",
            "pages": "233--251",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Some examples of DTA.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Act is a finite set of action names, AP is a finite set of atomic propositions, lab : S \u2192 {J, K} AP is a state-labeling function that assigns to each state s a valuation of the atomic propositions, R \u010e S\u02c6Act\u02c6S \u2192 R 0 is a rate function. If \u03bb \" R(s, a, s )^\u03bb > 0, we write s a,\u03bb \u2212 \u2212 \u2192 s .",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "We now establish that autonomous resetting transitions extend the expressive power of DTA w.r.t. Markov chains (A na \u0148 M A). The weaker result w.r.t. language (A na \u0148 L A) is shown in [11]. Theorem 1. There exists A P A such that for all A P A na there exists a Markov chain M with Pr M (A ) \" Pr M (A).Before proving this theorem, we prove some intermediate properties. We first establish a kind of 0-1 law for DTA in A na and Markov chains. In order to obtain this intermediate result, we introduce some objects. Simple chains are Markov chains with a single action, no atomic proposition (or equivalently with the same valuation for all states) and such that each state s has a single successor state sc(s) reached with rate \u03bb s . W.r.t. the acceptance probability of simple chains, we can consider DTAs without actions and atomic propositions. Moreover we add to each DTA an additional garbage location and we split the transitions, so that, w.l.o.g. one can assume that for each location of a DTA in A na , there are C`1 outgoing transitions:{ i\u22121 x\u0103i,ri \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 sc i ( ) | 1 i C} Y { x C,rC`1 \u2212\u2212\u2212\u2212\u2212\u2212\u2192 sc C`1 ( )}where C is the maximal constant occurring in the DTA. The shape of the guards is not a restriction in the context of Markov chains. For all clock valuationsx, the clock valuation sc( ,x) is defined by: -Let i \" min(j | j P {1, . . . , C}^x \u0103 j) with min(\u2205) \" C`1; -If r i \"\u2193 then sc( ,x) \" 0 else sc( ,x) \"x.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "A as follows. The vertex ( , 0) corresponds to the region defined by location with clock valuation 0. The vertex ( , 1) corresponds to the region defined by location with clock valuation in ]0, 1[. The vertex ( , i) for 1 \u0103 i C corresponds to the region defined by location with clock valuation in [i \u2212 1, i[. The vertex ( , C`1) corresponds to the region defined by location with clock valuation in [C, 8[. The transition outgoing from ( , i) labelled by j corresponds to the combination of time elapsing to enter the region ( , j) followed by an action of the Markov chain, leading to either ( , j) or to ( , 0), in case of reset. Given s a state of a Markov chain, a location of DTA, andx a clock valuation, p(s, ,x) denotes the probability of acceptance when the Markov chain starts in s and the DTA starts in with clock valuationx. In particular for a DTA A applied to a Markov chain M, Pr M (A) \" p(s 0 , 0 , 0) where s 0 is the initial state of M and 0 is the initial location of A such that lab(s 0 ) |\" \u039b( 0 ).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Let A P A na and z P [0, 1] such that for all Markov chains M, Pr M (A) \" z, then z P {0, 1}.",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "A 1 and A 2 be families of DTA. Then: -A 2 is at least as expressive as A 1 w.r.t. language, denoted A 1 \u0103 L A 2 , if for all A 1 P A 1 there exists A 2 P A 2 such that L(A 2 ) \" L(A 1 ); -A 2 is at least as expressive as A 1 w.r.t. Markov chains, denoted A 1 \u0103 M A 2 , if for all A 1 P A 1 there exists A 2 P A 2 such that for all Markov chains M, Pr M (A 2 ) \" Pr M (A 1 ).",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}