{"paper_id": "1fb8f52f04826c3a1611ae2901f726f23897767a", "metadata": {"title": "ArtPDGAN: Creating Artistic Pencil Drawing with Key Map Using Generative Adversarial Networks", "authors": [{"first": "Suchang", "middle": [], "last": "Li", "suffix": "", "affiliation": {"laboratory": "", "institution": "Beijing Institute of Technology", "location": {"settlement": "Beijing", "country": "China"}}, "email": ""}, {"first": "Kan", "middle": [], "last": "Li", "suffix": "", "affiliation": {"laboratory": "", "institution": "Beijing Institute of Technology", "location": {"settlement": "Beijing", "country": "China"}}, "email": "likan@bit.edu.cn"}, {"first": "Ilyes", "middle": [], "last": "Kacher", "suffix": "", "affiliation": {}, "email": ""}, {"first": "Yuichiro", "middle": [], "last": "Taira", "suffix": "", "affiliation": {"laboratory": "", "institution": "Tokyo University of the Arts", "location": {"settlement": "Tokyo", "country": "Japan"}}, "email": ""}, {"first": "Bungo", "middle": [], "last": "Yanatori", "suffix": "", "affiliation": {"laboratory": "", "institution": "Tokyo University of the Arts", "location": {"settlement": "Tokyo", "country": "Japan"}}, "email": ""}, {"first": "Imari", "middle": [], "last": "Sato", "suffix": "", "affiliation": {"laboratory": "", "institution": "National Institute of Informatics", "location": {"settlement": "Tokyo", "country": "Japan"}}, "email": ""}]}, "abstract": [{"text": "A lot of researches focus on image transfer using deep learning, especially with generative adversarial networks (GANs). However, no existing methods can produce high quality artistic pencil drawings. First, artists do not convert all the details of the photos into the drawings. Instead, artists tend to use strategies to magnify some special parts of the items and cut others down. Second, the elements in artistic drawings may not be located precisely. What's more, the lines may not relate to the features of the items strictly. To address above challenges, we propose ArtPDGAN, a novel GAN based framework that combines an image-to-image network to generate key map. And then, we use the key map as an important part of input to generate artistic pencil drawings.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}, {"text": "The key map can show the key parts of the items to guide the generator. We use a paired and unaligned artistic drawing dataset containing highresolution photos of items and corresponding professional artistic pencil drawings to train ArtPDGAN. Results of our experiments show that the proposed framework performs excellently against existing methods in terms of similarity to artist's work and user evaluations.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Pencil drawing is one of the most appreciated technique in quick sketching or finely-worked depiction. Researchers are quite interested in pencil drawings because it is a combination of observation, analysis and experience of the authors. So study pencil drawing can be help to the progress of artificial intelligence. And it usually takes several hours to finish a fine drawing (Fig. 1) , even for an experienced artist with professional training, which attracts people work on the pencil drawing generation algorithms. In former methods, pencil drawing generation was split into two components, the structure map that define region boundaries, and the tone map that reflects differences in the amount of light falling on a region as well as its intensity or tone and even texture [20] . However, we learned from artists that artistic pencil drawing should be able to capture the characteristics of the items and emphasize them. We give the images which key part have been labeled a name called key map. The key maps labeled by artists are also shown in Fig. 1 .", "cite_spans": [{"start": 782, "end": 786, "text": "[20]", "ref_id": "BIBREF19"}], "ref_spans": [{"start": 379, "end": 387, "text": "(Fig. 1)", "ref_id": "FIGREF0"}, {"start": 1055, "end": 1061, "text": "Fig. 1", "ref_id": "FIGREF0"}], "section": "Introduction"}, {"text": "Designing an algorithm or a framework which can study from artistic drawings and automatically transform an input photo into high-quality artistic drawings is highly desired. It can be used in many areas such as animation and advertisement. In particular, the development of deep learning which uses networks to perform image style transfer was also proposed [5] . Recently, generative adversarial network (GAN) [8] based style transfer methods (e.g. [1, 2, 11, 30] ) with datasets of (paired or unpaired) photos and stylized images have achieved abundant good results.", "cite_spans": [{"start": 359, "end": 362, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 412, "end": 415, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 451, "end": 454, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 455, "end": 457, "text": "2,", "ref_id": "BIBREF1"}, {"start": 458, "end": 461, "text": "11,", "ref_id": "BIBREF10"}, {"start": 462, "end": 465, "text": "30]", "ref_id": "BIBREF29"}], "ref_spans": [], "section": "Introduction"}, {"text": "Based the knowledge of artists, generating artistic pencil drawings are quite different with pencil styles studied in previous work [17, 20] . The differences can be summarized into three aspects. First, the artists will not convert all the details of the photos directly into their drawings, they will find the most important regions to magnify and simplify other parts at the same time. Second, artists will not locate the elements in pencil drawings precisely, which makes it a challenge for the methods based on similarity or correspondence (e.g. Pix2Pix [11] ). Finally, artists put lines in pencil drawings that are not directly related to the basic vision features in the view or photograph of the items. Therefore, even state-of-the-art image style transfer algorithms (e.g. [5, 11, 16, 18, 22, 30] ) often fail to produce vivid and realistic artistic pencil drawings.", "cite_spans": [{"start": 132, "end": 136, "text": "[17,", "ref_id": "BIBREF16"}, {"start": 137, "end": 140, "text": "20]", "ref_id": "BIBREF19"}, {"start": 559, "end": 563, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 783, "end": 786, "text": "[5,", "ref_id": "BIBREF4"}, {"start": 787, "end": 790, "text": "11,", "ref_id": "BIBREF10"}, {"start": 791, "end": 794, "text": "16,", "ref_id": "BIBREF15"}, {"start": 795, "end": 798, "text": "18,", "ref_id": "BIBREF17"}, {"start": 799, "end": 802, "text": "22,", "ref_id": "BIBREF21"}, {"start": 803, "end": 806, "text": "30]", "ref_id": "BIBREF29"}], "ref_spans": [], "section": "Introduction"}, {"text": "To address the above challenges, we propose ArtPDGAN, a novel GAN based architecture which combines with an image-to-image network for transforming photos to high-quality artistic pencil drawings. ArtPDGAN can generate key maps for the original photos and use the key maps to synthesis the artistic pencil drawings. To learn key region for different object shapes effectively, our architecture involves a specialized image-to-image network to capture key map.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "The main contributions of this work are summarized as follows:", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "-We propose a GAN based framework for artistic pencil drawing generation, which combines with a specialized image-to-image network to generate highquality and expressive artistic drawings from real photos. -In order to imitate artists better, we also propose a key map dedicated to the artists' emphasizing parts. This make our model more imitation of the artist than previous works. To our knowledge, it is the first one to apply the key map in artistic style transfer, which is an idea based on the knowledge of artists. -The experiments demonstrate the ability of our model to synthesize artistic pencil drawings which are more close to the artists' drawings than the stateof-the-art methods. ", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "Pencil drawing generation has been widely studied in sketch extraction and deep learning style transfer. In this section, we will summarize related work in these two aspects respectively.", "cite_spans": [], "ref_spans": [], "section": "Related Work"}, {"text": "Traditional edge extraction methods like [3, 7, 14] usually deal with the edge extraction problem with fuzzy mathematics as well as other algebraic algorithms. However, the edges are not as natural as human-made ones even though they are easy to calculate because of their discontinuity. Works such as [26, 29] are also based on neural network. However, their results are still quite different with artistic drawings.", "cite_spans": [{"start": 41, "end": 44, "text": "[3,", "ref_id": "BIBREF2"}, {"start": 45, "end": 47, "text": "7,", "ref_id": "BIBREF6"}, {"start": 48, "end": 51, "text": "14]", "ref_id": "BIBREF13"}, {"start": 302, "end": 306, "text": "[26,", "ref_id": "BIBREF25"}, {"start": 307, "end": 310, "text": "29]", "ref_id": "BIBREF28"}], "ref_spans": [], "section": "Sketch Extraction"}, {"text": "Large numbers of approaches have been proposed to learn style transfer from examples, because it is too hard to describe the styles semantically. The Image Analogy approach [9] requires the input and the output are strictly aligned because it is designed for pairs training. Liao et al. [18] proposed a method called Deep Image Analogy which also requires the example images and target image to have similar content, if they are not aligned with each other. By finding semantically meaningful correspondences between two input images, they first compute correspondences between feature maps extracted by a network, and then finish visual attribute transfer. Deep Image Analogy works well on phototo-style transfer problem, but when being applied to our artistic pencil drawing style, the subjects in the generated images look fuzzy due to the light texture. Due to the difficulty of gathering aligned and paired data, advanced neural style transfer methods (e.g. [11, 25, 31] ) can be hardly used in common style transfer applications.", "cite_spans": [{"start": 173, "end": 176, "text": "[9]", "ref_id": "BIBREF8"}, {"start": 287, "end": 291, "text": "[18]", "ref_id": "BIBREF17"}, {"start": 963, "end": 967, "text": "[11,", "ref_id": "BIBREF10"}, {"start": 968, "end": 971, "text": "25,", "ref_id": "BIBREF24"}, {"start": 972, "end": 975, "text": "31]", "ref_id": "BIBREF30"}], "ref_spans": [], "section": "Style Transfer Using Neural Networks"}, {"text": "There are also methods (e.g. [10, 13, 15, 19, 30] ) which can learn mappings from unpaired data. Most of them are designed with cycle-consistency theorem. However, these methods do not work well on capturing the tone texture.", "cite_spans": [{"start": 29, "end": 33, "text": "[10,", "ref_id": "BIBREF9"}, {"start": 34, "end": 37, "text": "13,", "ref_id": "BIBREF12"}, {"start": 38, "end": 41, "text": "15,", "ref_id": "BIBREF14"}, {"start": 42, "end": 45, "text": "19,", "ref_id": "BIBREF18"}, {"start": 46, "end": 49, "text": "30]", "ref_id": "BIBREF29"}], "ref_spans": [], "section": "Style Transfer Using Neural Networks"}, {"text": "Gatys et al. [5] is a milestone for neural style transfer research. They use the Gram matrices [4] in a VGG network to capture the content and style representations of images. The stylization process is achieved by minimizing the distances between the style features of the content image and the style image. This method works well on oil painting style transfer and get good results for famous artists' styles like Van Gogh. But it is not suitable for pencil drawing style transfer because it takes style as a kind of texture while style in pencil drawing is too little to be easily captured. The perceptual loss which based on high-level features was proposed by Johnson et al. [12] , and became one of the best loss in image style transfer problem. For the same reason as [6] , their texture-based loss function is not suitable for our style. In addition to aforementioned limitations for artistic pencil drawing style transfer, most existing methods require the style image to be close to the content image. And they do not apply the key map to improve the generated results.", "cite_spans": [{"start": 13, "end": 16, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 95, "end": 98, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 680, "end": 684, "text": "[12]", "ref_id": "BIBREF11"}, {"start": 775, "end": 778, "text": "[6]", "ref_id": "BIBREF5"}], "ref_spans": [], "section": "Style Transfer Using Neural Networks"}, {"text": "Our models are different with the works above. We use an image-to-image network to generate key map, then combine it with structure map and tone map as the input to our generator. Our ArtPDGAN is able to use the features from these three kinds of maps and generate artistic pencil drawings.", "cite_spans": [], "ref_spans": [], "section": "Style Transfer Using Neural Networks"}, {"text": "Our approach is based on the knowledge learned from artists that pencil drawings can be separated into three main components: structure map, tone map and key map. Each of them delineate different parts of the pencil drawings. The structure map is used to detect object boundaries as well as other boundaries in the scene. The cross hatching and other tonal technique for lighting, texture, and materials should be shown in tone map. The key map which our method replied on can help to find the key parts of the items. Our method combines all the maps above to do the style transformation.", "cite_spans": [], "ref_spans": [], "section": "Model"}, {"text": "With the dataset provided by artists, our model is trained to learn to translate from input maps to artistic pencil drawings. Our training process is based on the idea of paired image-to-image translation frameworks, though our model does not need the aligned data. Since the artists will abstract and transform the photos, the aligned training data are not helpful to artistic characteristics. We use two GAN-based models in our framework, one is used for generating the artistic pencil drawings and the other is for the key map generation. These two models are trained together because we want the whole framework can learn how to imitate the artists. Figure 2 shows the main modules of the proposed framework. We generate the training maps by using abstraction filters and functions on pencil drawings to estimates edges and tones. These filters can produce similar abstract maps from pencil drawings as from real photographs. Hence, at test time, we use the same abstraction filters on the input photograph, to produce input maps which are in the same domain as the training inputs. ", "cite_spans": [], "ref_spans": [{"start": 654, "end": 662, "text": "Figure 2", "ref_id": "FIGREF1"}], "section": "Model"}, {"text": "For generating structure map, we use the adaptive filter [28] , which can mark material edges of images, even the highly-textured ones. To extract the tone map, we apply a simple mapping on the pixels of photos to generate a smoothing output as the tone extraction. The mapping can be formulated as", "cite_spans": [{"start": 57, "end": 61, "text": "[28]", "ref_id": "BIBREF27"}], "ref_spans": [], "section": "Structure Map and Tone Map"}, {"text": "This formula is based on the experience of the artists. The artists only use a few channels of tone compared with real photos. So we directly compress the values of the pixels. Examples of structure map and tone map are shown in Fig. 3 . The tone maps are actually invisible and we managed to show them as images.", "cite_spans": [], "ref_spans": [{"start": 229, "end": 235, "text": "Fig. 3", "ref_id": "FIGREF2"}], "section": "Structure Map and Tone Map"}, {"text": "The goal of our key map is to help the generator network learn the artistic characteristics. Our model mainly based on the fact that artists will use their experience to find the key parts and emphasize them. Our model can learn from Fig. 3 . The key map network aims at extracting key regions from the photos. The important parts in the key maps are marked in red. As it's impossible to learn the key map for every photo at test time, we apply a specialized image-to-image network based GAN model to preprocess inputs and generate the key map at test time. Our training key map pair is labeled by artist. And the 300 training pairs contains almost all common shapes. The image-to-image network contains the Generator G 1 and the Discriminator D 1 , and use the loss as [11] ", "cite_spans": [{"start": 770, "end": 774, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [{"start": 234, "end": 240, "text": "Fig. 3", "ref_id": "FIGREF2"}], "section": "Key Map"}, {"text": "where", "cite_spans": [], "ref_spans": [], "section": "Key Map"}, {"text": "During the training stage, the model G 1 and D 1 will work together to learn how to find the key map by using aligned and paired data created from key map labeled by artists and real photos. Then the whole framework learns to apply the emphasizing according to the key maps. At test-time, the model will generate the key map using real photos only.", "cite_spans": [], "ref_spans": [], "section": "Key Map"}, {"text": "The G 2 and D 2 are the Generator and Discriminator of pencil drawing network (Fig. 2) . We first use the key map network to generate the key maps. Then we encode key map and the real photos as feature maps and concatenated with the features of the structure map and the tone map. The pencil drawing network will use the features to generate artistic pencil drawings. Due to the lines of artistic pencil drawings are not related to the real photo precisely, there always some artifacts around the lines and make the results look fuzzy. To address this issue, we apply feature matching based on the idea of [21] . We extract the features from the Discriminator D 2 and regulate them to match the features from the Discriminator D 1 of the key map network.", "cite_spans": [{"start": 606, "end": 610, "text": "[21]", "ref_id": "BIBREF20"}], "ref_spans": [{"start": 78, "end": 86, "text": "(Fig. 2)", "ref_id": "FIGREF1"}], "section": "Pencil Drawing Network"}, {"text": "As tried in the previous works [17] , loss functions do not perform well alone, our loss function is combined by three loss functions. However, we do not use the classical pixel-based reconstruction loss L rec . The reason is described above, as the artists will not directly change every detail of the real photos into drawings, the L rec will lead the model to a less artistic results. Our loss function can be described as", "cite_spans": [{"start": 31, "end": 35, "text": "[17]", "ref_id": "BIBREF16"}], "ref_spans": [], "section": "Loss Function"}, {"text": "Adversarial Loss. As the traditional conditional GAN, we use the discriminator network D 2 to discriminate the real samples from the pencil drawings and generated results. And the goal of the generator G 2 works on opposite, trying to generate images which cannot be judged from the real ones by the discriminator D 2 . This can be achieved by using an adversarial loss:", "cite_spans": [], "ref_spans": [], "section": "Loss Function"}, {"text": "In which P Y and P X represent the distributions of pencil drawing samples y and their generated samples x.", "cite_spans": [], "ref_spans": [], "section": "Loss Function"}, {"text": "To match features extract from the Discriminator of image-to-image network D 1 and the Discriminator of pencil drawing network D 2 , we use formula introduced by [21] .", "cite_spans": [{"start": 162, "end": 166, "text": "[21]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "Feature Match Loss."}, {"text": "In which f (x) denote activations on an intermediate layer of the discriminator.", "cite_spans": [], "ref_spans": [], "section": "Feature Match Loss."}, {"text": "Perceptual Loss. The perceptual loss [12] was performed well in minimizing the feature differences. It makes the results sharper than traditional reconstruction loss L rec . So we also apply it to help the generated samples look more close to the artistic pencil drawing.", "cite_spans": [{"start": 37, "end": 41, "text": "[12]", "ref_id": "BIBREF11"}], "ref_spans": [], "section": "Feature Match Loss."}, {"text": "where x, y are the input and the pencil drawing from artists, G is the translation model, and \u03a6 stands for the VGG-19 [23] network up to the ReLU i 1 layer.", "cite_spans": [{"start": 118, "end": 122, "text": "[23]", "ref_id": "BIBREF22"}], "ref_spans": [], "section": "Feature Match Loss."}, {"text": "We implemented ArtPDGAN using PyTorch [24] and execute experiments on a computer with an NVIDIA Titan X GPU. Our model only need 200 epochs' training, and the training time is about 6 h. The generator G takes color photos as input and output the gray drawings whose size is 512 * 512. So the numbers of input and output channels are 3 and 1, respectively. In all our experiments, the parameters in Eq. 4 are fixed at \u03b1 = 1.0, \u03b2 = 0.5, \u03b3 = 0.5. In order to guarantee the fairness, all the evaluation results showed in this section are based on the generated results of test data, and all the images are resized to 256 * 256.", "cite_spans": [{"start": 38, "end": 42, "text": "[24]", "ref_id": "BIBREF23"}], "ref_spans": [], "section": "Experiments"}, {"text": "The generated results are shown in the Fig. 4 . We use 100 images in user study 1 and 80 images in user study 2. We finally collect the feedback from 108 users of totally 9920 scores.", "cite_spans": [], "ref_spans": [{"start": 39, "end": 45, "text": "Fig. 4", "ref_id": "FIGREF3"}], "section": "Experiments"}, {"text": "We perform an ablation study on our unique factor, the key map. As it shown in Fig. 5 , the user study between ArtPDGAN and ArtPDGAN without key map show that the key map is critical to our ArtPDGAN and help to produce highquality results of artistic pencil drawings.", "cite_spans": [], "ref_spans": [{"start": 79, "end": 85, "text": "Fig. 5", "ref_id": null}], "section": "Ablation Study in ArtPDGAN"}, {"text": "We compare ArtPDGAN with three state-of-the-art style transfer methods: Gatys, CycleGAN and Im2Pencil.", "cite_spans": [], "ref_spans": [], "section": "Comparison with State-of-the-art"}, {"text": "Gatys, Pix2Pix and CycleGAN are classical and famous style transfer models of different types of data. Im2Pencil is accepted by CVPR 2019, which stands for the latest approach. Our dataset is made up of paired and unaligned data, which do not satisfy the conditions of the Pix2Pix model. So we choose CycleGAN as the comparative method because it can be applied in the unpaired and unaligned dataset. Qualitative results of comparison with Gatys, CycleGAN and Im2Pencil are shown in Fig. 5, Fig. 6, Fig. 7, Fig. 8 and Table 1 . Figure 8 shows the results of one of the user studies, which rates the similarity between the results of different algorithms and the artists' works. In the user study, we divided the users into two groups, an inexperienced user group and an experienced user group, based on their drawing experience. The reason is that users with different drawing experience may have different focuses while looking at images. Experienced users my easily to find out the key map like the artist, while inexperienced users may pay more attention on realistic details of the object in the drawings.", "cite_spans": [], "ref_spans": [{"start": 483, "end": 513, "text": "Fig. 5, Fig. 6, Fig. 7, Fig. 8", "ref_id": "FIGREF5"}, {"start": 518, "end": 525, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 528, "end": 536, "text": "Figure 8", "ref_id": "FIGREF5"}], "section": "Comparison with State-of-the-art"}, {"text": "Gatys' method takes one content image and one style image as input by default, so we use the exact drawing in the training set as the style and content image to model the target style for a fair comparison. Im2pencil provides many styles to choose from, we just use the fundamental style in all the experiment. As Fig. 5 shows, Gatys' method generates good results for artistic pencil stylization. The CycleGAN gets good results among PSNR, SSIM and user study, while the Im2pencil only gets very good manual score. And our ArtPDGAN is always the best one among these methods. We can find that Gatys's results lose some features and have two or more kinds of styles of regions. And the results contain many artifacts. The reason behind is that the method regards style as texture information in the Gram matrix, which cannot capture our artistic pencil style which only has little texture. And the artistic deformation caused the imprecise content loss. CycleGAN also cannot imitate the artistic drawings well. As shown in Fig. 8 , CycleGAN's results do not look like an artist's drawing. CycleGAN is unable to preserve important features because it uses the cycle-consistency to constrain network. The cycle-consistency which uses only unsupervised information, is less accurate than a supervised method and leads to problems that it's hard for the loss to accurately recover all the details of domains. Im2pencil generates results that preserve some aspect of artistic drawings, but they also have many artifacts. The structural lines, making the stylized result unlike the artistic drawings, and the xDOG filter [27] makes the tone maps look too close to black-and-white photos.", "cite_spans": [{"start": 1615, "end": 1619, "text": "[27]", "ref_id": "BIBREF26"}], "ref_spans": [{"start": 314, "end": 320, "text": "Fig. 5", "ref_id": null}, {"start": 1023, "end": 1029, "text": "Fig. 8", "ref_id": "FIGREF5"}], "section": "Comparison with State-of-the-art"}, {"text": "The main reason of these problems is that they did not use the real pictures drawing by artists.", "cite_spans": [], "ref_spans": [], "section": "Comparison with State-of-the-art"}, {"text": "In comparison, our method captures the key regions accurately and generates high-quality results with artist's drawing style. Moreover, our results are very close to the drawings drawn by the artists than other methods. For quantitative evaluation, we compare our ArtPDGAN with artists' works, Gatys, CycleGAN and Im2Pencil using the user study, which are a widely used in GAN evaluation. We also measure the similarity between generated artistic pencil drawings and real artistic pencil drawings use the PSNR, SSIM and the user study at the same time. The comparison results are presented in Table 1 . The scores show that our method has a higher PSNR value and SSIM value, which means that our drawings is closer to the artistic pencil drawings than Im2Pencil, CycleGAN and Gtays. The same as the results of user investigation. In other words, these results indicate ArtPDGAN captures better artistic pencil drawings distribution than comparative methods.", "cite_spans": [], "ref_spans": [{"start": 593, "end": 600, "text": "Table 1", "ref_id": "TABREF0"}], "section": "Comparison with State-of-the-art"}, {"text": "In this paper, we propose ArtPDGAN, a framework which can transform photos into artistic pencil drawings. We use different filters to produce structure maps and tone maps of the pencil drawings, as well as the key maps which generated from the original photos to train the network to transfer photos into artistic drawings. To imitate the artists' skills as much as possible and avoid the time consuming of aligned data collection for future application, our model uses unaligned data for the training. Experiment results and user study both show that our method can successfully complete artistic style transfer and outperform the state-of-the-art methods. In the future, we will try to use our key maps combined with the technology of instance segmentation to deal with more complex photos.", "cite_spans": [], "ref_spans": [], "section": "Conclusion and Future Work"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Multicontent GAN for few-shot font style transfer. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "S", "middle": [], "last": "Azadi", "suffix": ""}, {"first": "M", "middle": [], "last": "Fisher", "suffix": ""}, {"first": "V", "middle": ["G"], "last": "Kim", "suffix": ""}, {"first": "Z", "middle": [], "last": "Wang", "suffix": ""}, {"first": "E", "middle": [], "last": "Shechtman", "suffix": ""}, {"first": "T", "middle": [], "last": "Darrell", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "CartoonGAN: generative adversarial networks for photo cartoonization", "authors": [{"first": "Y", "middle": [], "last": "Chen", "suffix": ""}, {"first": "Y", "middle": [], "last": "Lai", "suffix": ""}, {"first": "Y", "middle": [], "last": "Liu", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "9465--9474", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "An improved Sobel edge detection", "authors": [{"first": "W", "middle": [], "last": "Gao", "suffix": ""}, {"first": "X", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "L", "middle": [], "last": "Yang", "suffix": ""}, {"first": "H", "middle": [], "last": "Liu", "suffix": ""}], "year": 2010, "venue": "", "volume": "5", "issn": "", "pages": "67--71", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "Texture synthesis using convolutional neural networks. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "L", "middle": ["A"], "last": "Gatys", "suffix": ""}, {"first": "A", "middle": ["S"], "last": "Ecker", "suffix": ""}, {"first": "M", "middle": [], "last": "Bethge", "suffix": ""}], "year": 2015, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "Image style transfer using convolutional neural networks", "authors": [{"first": "L", "middle": ["A"], "last": "Gatys", "suffix": ""}, {"first": "A", "middle": ["S"], "last": "Ecker", "suffix": ""}, {"first": "M", "middle": [], "last": "Bethge", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "2414--2423", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Controlling perceptual factors in neural style transfer", "authors": [{"first": "L", "middle": ["A"], "last": "Gatys", "suffix": ""}, {"first": "A", "middle": ["S"], "last": "Ecker", "suffix": ""}, {"first": "M", "middle": [], "last": "Bethge", "suffix": ""}, {"first": "A", "middle": [], "last": "Hertzmann", "suffix": ""}, {"first": "E", "middle": [], "last": "Shechtman", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "3730--3738", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "An improved Sobel edge detection method based on generalized type-2 fuzzy logic", "authors": [{"first": "C", "middle": ["I"], "last": "Gonzalez", "suffix": ""}, {"first": "P", "middle": [], "last": "Melin", "suffix": ""}, {"first": "J", "middle": ["R"], "last": "Castro", "suffix": ""}, {"first": "O", "middle": [], "last": "Mendoza", "suffix": ""}, {"first": "O", "middle": [], "last": "Castillo", "suffix": ""}], "year": 2016, "venue": "Soft. Comput", "volume": "20", "issn": "2", "pages": "773--784", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Generative adversarial nets", "authors": [{"first": "I", "middle": [], "last": "Goodfellow", "suffix": ""}], "year": 2014, "venue": "", "volume": "", "issn": "", "pages": "2672--2680", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "Image analogies", "authors": [{"first": "A", "middle": [], "last": "Hertzmann", "suffix": ""}, {"first": "C", "middle": ["E"], "last": "Jacobs", "suffix": ""}, {"first": "N", "middle": [], "last": "Oliver", "suffix": ""}, {"first": "B", "middle": [], "last": "Curless", "suffix": ""}, {"first": "D", "middle": [], "last": "Salesin", "suffix": ""}], "year": 2001, "venue": "", "volume": "", "issn": "", "pages": "327--340", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Multimodal unsupervised image-toimage translation. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "X", "middle": [], "last": "Huang", "suffix": ""}, {"first": "M", "middle": [], "last": "Liu", "suffix": ""}, {"first": "S", "middle": [], "last": "Belongie", "suffix": ""}, {"first": "J", "middle": [], "last": "Kautz", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Image-to-image translation with conditional adversarial networks. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "P", "middle": [], "last": "Isola", "suffix": ""}, {"first": "J", "middle": [], "last": "Zhu", "suffix": ""}, {"first": "T", "middle": [], "last": "Zhou", "suffix": ""}, {"first": "A", "middle": ["A"], "last": "Efros", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "Perceptual losses for real-time style transfer and super-resolution. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "J", "middle": [], "last": "Johnson", "suffix": ""}, {"first": "A", "middle": [], "last": "Alahi", "suffix": ""}, {"first": "L", "middle": [], "last": "Feifei", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "Learning to discover cross-domain relations with generative adversarial networks", "authors": [{"first": "T", "middle": [], "last": "Kim", "suffix": ""}, {"first": "M", "middle": [], "last": "Cha", "suffix": ""}, {"first": "H", "middle": [], "last": "Kim", "suffix": ""}, {"first": "J", "middle": ["K"], "last": "Lee", "suffix": ""}, {"first": "J", "middle": [], "last": "Kim", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "1857--1865", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Fractional Fourier transform and fractional-order calculus-based image edge detection", "authors": [{"first": "S", "middle": [], "last": "Kumar", "suffix": ""}, {"first": "R", "middle": [], "last": "Saxena", "suffix": ""}, {"first": "K", "middle": [], "last": "Singh", "suffix": ""}], "year": 2017, "venue": "Circ. Syst. Sig. Process", "volume": "36", "issn": "4", "pages": "1493--1513", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "Diverse image-to-image translation via disentangled representations", "authors": [{"first": "H", "middle": [], "last": "Lee", "suffix": ""}, {"first": "H", "middle": [], "last": "Tseng", "suffix": ""}, {"first": "J", "middle": [], "last": "Huang", "suffix": ""}, {"first": "M", "middle": [], "last": "Singh", "suffix": ""}, {"first": "M", "middle": [], "last": "Yang", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "36--52", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Combining Markov random fields and convolutional neural networks for image synthesis. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "C", "middle": [], "last": "Li", "suffix": ""}, {"first": "M", "middle": [], "last": "Wand", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "Im2Pencil: controllable pencil illustration from photographs", "authors": [{"first": "Y", "middle": [], "last": "Li", "suffix": ""}, {"first": "C", "middle": [], "last": "Fang", "suffix": ""}, {"first": "A", "middle": [], "last": "Hertzmann", "suffix": ""}, {"first": "E", "middle": [], "last": "Shechtman", "suffix": ""}, {"first": "M", "middle": [], "last": "Yang", "suffix": ""}], "year": 2019, "venue": "", "volume": "", "issn": "", "pages": "1525--1534", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Visual attribute transfer through deep image analogy", "authors": [{"first": "J", "middle": [], "last": "Liao", "suffix": ""}, {"first": "Y", "middle": [], "last": "Yao", "suffix": ""}, {"first": "L", "middle": [], "last": "Yuan", "suffix": ""}, {"first": "G", "middle": [], "last": "Hua", "suffix": ""}, {"first": "S", "middle": ["B"], "last": "Kang", "suffix": ""}], "year": 2017, "venue": "ACM Trans. Graph", "volume": "36", "issn": "4", "pages": "", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Unsupervised image-to-image translation networks. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "M", "middle": [], "last": "Liu", "suffix": ""}, {"first": "T", "middle": ["M"], "last": "Breuel", "suffix": ""}, {"first": "J", "middle": [], "last": "Kautz", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Combining sketch and tone for pencil drawing production", "authors": [{"first": "C", "middle": [], "last": "Lu", "suffix": ""}, {"first": "L", "middle": [], "last": "Xu", "suffix": ""}, {"first": "J", "middle": [], "last": "Jia", "suffix": ""}], "year": 2012, "venue": "", "volume": "", "issn": "", "pages": "65--73", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Improved techniques for training GANs. arXiv Learning", "authors": [{"first": "T", "middle": [], "last": "Salimans", "suffix": ""}, {"first": "I", "middle": [], "last": "Goodfellow", "suffix": ""}, {"first": "W", "middle": [], "last": "Zaremba", "suffix": ""}, {"first": "V", "middle": [], "last": "Cheung", "suffix": ""}, {"first": "A", "middle": [], "last": "Radford", "suffix": ""}, {"first": "X", "middle": [], "last": "Chen", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "Style transfer for headshot portraits", "authors": [{"first": "Y", "middle": [], "last": "Shih", "suffix": ""}, {"first": "S", "middle": [], "last": "Paris", "suffix": ""}, {"first": "C", "middle": [], "last": "Barnes", "suffix": ""}, {"first": "W", "middle": ["T"], "last": "Freeman", "suffix": ""}, {"first": "F", "middle": [], "last": "Durand", "suffix": ""}], "year": 2014, "venue": "International Conference on Computer Graphics and Interactive Techniques", "volume": "33", "issn": "", "pages": "", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Very deep convolutional networks for large-scale image recognition. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "K", "middle": [], "last": "Simonyan", "suffix": ""}, {"first": "A", "middle": [], "last": "Zisserman", "suffix": ""}], "year": 2014, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "PyTorch: an imperative style, high-performance deep learning library", "authors": [{"first": "B", "middle": [], "last": "Steiner", "suffix": ""}], "year": 2019, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "High-resolution image synthesis and semantic manipulation with conditional GANs", "authors": [{"first": "T", "middle": [], "last": "Wang", "suffix": ""}, {"first": "M", "middle": [], "last": "Liu", "suffix": ""}, {"first": "J", "middle": [], "last": "Zhu", "suffix": ""}, {"first": "A", "middle": [], "last": "Tao", "suffix": ""}, {"first": "J", "middle": [], "last": "Kautz", "suffix": ""}, {"first": "B", "middle": [], "last": "Catanzaro", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "8798--8807", "other_ids": {}}, "BIBREF25": {"ref_id": "b25", "title": "Road structure refined cnn for road extraction in aerial image", "authors": [{"first": "Y", "middle": [], "last": "Wei", "suffix": ""}, {"first": "Z", "middle": [], "last": "Wang", "suffix": ""}, {"first": "M", "middle": [], "last": "Xu", "suffix": ""}], "year": 2017, "venue": "IEEE Geosci. Remote Sens. Lett", "volume": "14", "issn": "5", "pages": "709--713", "other_ids": {}}, "BIBREF26": {"ref_id": "b26", "title": "XDoG: advanced image stylization with extended difference-of-Gaussians", "authors": [{"first": "H", "middle": [], "last": "Winnemoller", "suffix": ""}], "year": 2011, "venue": "", "volume": "", "issn": "", "pages": "147--156", "other_ids": {}}, "BIBREF27": {"ref_id": "b27", "title": "Adaptive filter theory", "authors": [{"first": "B", "middle": [], "last": "Wittenmark", "suffix": ""}], "year": 1993, "venue": "Automatica", "volume": "29", "issn": "2", "pages": "567--568", "other_ids": {}}, "BIBREF28": {"ref_id": "b28", "title": "Holistically-nested edge detection. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "S", "middle": [], "last": "Xie", "suffix": ""}, {"first": "Z", "middle": [], "last": "Tu", "suffix": ""}], "year": 2015, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF29": {"ref_id": "b29", "title": "Unpaired image-to-image translation using cycle-consistent adversarial networks", "authors": [{"first": "J", "middle": [], "last": "Zhu", "suffix": ""}, {"first": "T", "middle": [], "last": "Park", "suffix": ""}, {"first": "P", "middle": [], "last": "Isola", "suffix": ""}, {"first": "A", "middle": ["A"], "last": "Efros", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "2242--2251", "other_ids": {}}, "BIBREF30": {"ref_id": "b30", "title": "Toward multimodal image-to-image translation. arXiv Computer Vision and Pattern Recognition", "authors": [{"first": "J", "middle": [], "last": "Zhu", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "Examples of artistic pencil drawing and key map", "latex": null, "type": "figure"}, "FIGREF1": {"text": "The structure of the ArtPDGAN", "latex": null, "type": "figure"}, "FIGREF2": {"text": "Examples of structure map, tone map and key map the labeled key map and find the key parts by itself as the artists do. Examples of key map used by our model are shown in", "latex": null, "type": "figure"}, "FIGREF3": {"text": "The generated results", "latex": null, "type": "figure"}, "FIGREF4": {"text": "The results of user study 1 The results of PSNR Fig. 7. The results of SSIM", "latex": null, "type": "figure"}, "FIGREF5": {"text": "The results of user study 2", "latex": null, "type": "figure"}, "TABREF0": {"text": "Experiment results", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Model </td><td>Mean PSNR </td><td>Max PSNR </td><td>Mean SSIM </td><td>Max SSIM\n</td></tr><tr><td>ArtPDGAN </td><td>30.0945 </td><td>34.5141 </td><td>0.7502 </td><td>0.8368\n</td></tr><tr><td>Im2Pencil </td><td>18.5237 </td><td>24.1215 </td><td>0.5256 </td><td>0.7295\n</td></tr><tr><td>Gatys </td><td>22.3423 </td><td>26.6630 </td><td>0.6521 </td><td>0.7226\n</td></tr><tr><td>CycleGAN </td><td>23.7886 </td><td>31.7173 </td><td>0.6838 </td><td>0.7801\n</td></tr></table></body></html>"}}, "back_matter": []}