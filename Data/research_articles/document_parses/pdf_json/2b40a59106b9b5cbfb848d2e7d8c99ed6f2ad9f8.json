{"paper_id": "2b40a59106b9b5cbfb848d2e7d8c99ed6f2ad9f8", "metadata": {"title": "A Toolkit for Analyzing and Visualizing Online Users via Reshare Cascade Modeling", "authors": [{"first": "Quyu", "middle": [], "last": "Kong", "suffix": "", "affiliation": {}, "email": "quyu.kong@anu.edu.au"}, {"first": "Rohit", "middle": [], "last": "Ram", "suffix": "", "affiliation": {}, "email": "rohit.ram@uts.edu.au"}, {"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": "", "affiliation": {}, "email": "marian-andrei.rizoiu@uts.edu.au"}]}, "abstract": [{"text": "Modeling online discourse dynamics is a core activity in understanding the spread of information, both offline and online, and emergent online behavior. There is currently a disconnect between the practitioners of online social media analysis -usually social, political and communication scientists -and the accessibility to tools capable of handling large quantities of online data, and examining online users and their behavior. We present two tools, birdspotter and evently, for analyzing online users based on their involvement in retweet cascades. birdspotter provides a toolkit to measure social influence and botness of Twitter users. While it leverages the multimodal information of tweets, such as text contents, evently augments the user measurement by modeling the temporal dynamics of information diffusions using self-exciting processes. Both tools are designed for users with a wide range of computer expertise, and include tutorials and detailed documentation. We illustrate a case study of a topical dataset relating to COVID-19, using both tools for end-to-end analysis of online user behavior.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "The dissemination of information and opinion through social media, drives change in our societies today. The existence of \"viral\" diffusion of information suggests that some users can exert a disproportionate influence on discourse [5, 10] , and that \"bad actors\" can exploit misinformation campaigns causing societal divisiveness [26] . Consequently, there is a clear need for tools to analyze the dynamics and weaknesses of online discourse systems, and to identify important users based on their activity.", "cite_spans": [{"start": 232, "end": 235, "text": "[5,", "ref_id": "BIBREF4"}, {"start": 236, "end": 239, "text": "10]", "ref_id": "BIBREF9"}, {"start": 331, "end": 335, "text": "[26]", "ref_id": "BIBREF26"}], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "There seems to currently exist a disconnect between the practitioners of online social media analysis (who are most often social and political scientists, journalists or communication scientists) and the existing tools facilitating this analysis. The latter -when they exist -either require extensive programming experience, or make particular unrealistic assumptions about the usage flow. The result is that practitioners carefully curate large social media datasets, which remain underutilized due to the lack of accessible tools. This work aims to fill this gap by proposing a suite of tools, aimed at non-computing experts, to analyze online discussions and users from the view of information reshare cascades.", "cite_spans": [], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "This work addresses three specific open questions concerning the tools to model reshare cascades and analyze online users. The first open question relates to profiling user botness and influence on previously collected data. The state-of-the-art bot detector, Botometer [15] , can only be accessed through its web APIs and cannot * Both authors contributed equally to this research. produce predictions for users that are no longer accessible, such as suspended accounts. Since bots have a high tendency of being suspended by Twitter, measuring botness a while after collecting data risks missing a large proportion of the bots involved in discussions. Likewise, while there are plenty of research on examining the influence and reputation of online users in the literature [6, 41] , few of these have converted into accessible tools for this task, and even existing tools often require the knowledge of the social graph which is sometimes impossible to capture retrospectively. The question is: can we have a tool that determines users' botness and influence, locally, on existing curated datasets. The second open question relates to modeling reshare cascades. Only individual scripts or packages of proposed models are provided by recent works on information diffusion modeling [36, 44, 55] with disconnected API designs and (potentially complex) environmental setups. A question, therefore, remains open: is there an easily accessible tool that allows comparing multiple self-existing models on real data, while remaining easily accessible to the nonexperts? The third open question relates to describing users based both on their activity dynamics, and how other users react to their content. Informative temporal features of reshare cascades have been explored in prior research [33, 36] , but no existing software can extract such features at the user-level. The question is can we extract reshare cascade features easily with a tool and show their effectiveness in online user analysis.", "cite_spans": [{"start": 270, "end": 274, "text": "[15]", "ref_id": "BIBREF14"}, {"start": 774, "end": 777, "text": "[6,", "ref_id": "BIBREF5"}, {"start": 778, "end": 781, "text": "41]", "ref_id": "BIBREF41"}, {"start": 1281, "end": 1285, "text": "[36,", "ref_id": "BIBREF36"}, {"start": 1286, "end": 1289, "text": "44,", "ref_id": "BIBREF44"}, {"start": 1290, "end": 1293, "text": "55]", "ref_id": "BIBREF55"}, {"start": 1785, "end": 1789, "text": "[33,", "ref_id": "BIBREF33"}, {"start": 1790, "end": 1793, "text": "36]", "ref_id": "BIBREF36"}], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "In this work we address the above-mentioned open questions by introducing an integrated suite of tools: the two packages (evently 1 and birdspotter 2 ) and one visualizer (birdspotter.ml 3 ). Starting from an already collected dataset containing one day-worth of Twitter discussion around COVID-19, we showcase the usage of the tools to analyze the reshare cascades and the online users. Both tools are open-source and available on GitHub 12 , and they both feature extensive documentation and usage tutorials 45 .", "cite_spans": [{"start": 510, "end": 512, "text": "45", "ref_id": "BIBREF45"}], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "We address the first open question by introducing birdspotter, a python3 package designed to measure retrospectively the botness and social influence of Twitter users. For influence estimation, birdspotter implements a recent influence estimation algorithm [42] which relies only on the reshare cascades that users are involved in, and does not require the users' social graph which is prohibitive to obtain. For bot detection, birdspotter extracts a large number of user and activity features from the dataset only - Figure 1 : (a) The birdspotter.ml visualization system: Twitter users are plotted based on their user influence and botness (left panel), and a selected user's profiles and cascade history are shown (right panel). (b) A schematic view of the software suite to analyze reshare cascades and online users, and the functionality and data dependencies between its components birdspotter and evently, designed to examine the static user attributes and dynamic user attributes respectively. The arrows depict the incoming features for birdspotter to compute botness and user influence, and for evently to model reshare cascades.", "cite_spans": [{"start": 257, "end": 261, "text": "[42]", "ref_id": "BIBREF42"}], "ref_spans": [{"start": 518, "end": 526, "text": "Figure 1", "ref_id": null}], "section": "INTRODUCTION"}, {"text": "i.e., it does not require accessing the user's current profile -and deploys a pre-trained XGboost classifier to produce the likelihood of a user being a bot. The tool features easy-to-use Python and R interfaces, and it exposes a simple interface which allows researchers to annotate their own Twitter user collection. This allows fine-tuning predictions to a particular problem or dataset, and even predicting entirely different user attributes.", "cite_spans": [], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "We address the second question by introducing evently, a R package dedicated to modeling online information reshare cascades using self-exciting point processes. It currently supports fitting and sampling realizations of the Hawkes process and its finite population version HawkesN [44] , using the exponential and power-law decaying kernels, both unmarked and with a continuous event mark. evently exposes a number of functionalities around reshare cascades and online users. For online cascades, it can fit any of its supported models to observed data, and it can sample synthetic cascades from fitted models. It can be used to continue likely unfoldings of partially observed cascades, and compute their expected final popularity. For online users, evently can jointly fit all cascades initiated by the same users and obtains a single model which is descriptive for the user. It also allows to build a large number of dynamic user descriptors, such as the viral score (i.e., the expected size of a cascades posted by the user), and summaries of cascade size, reshare timing and event magnitude.", "cite_spans": [{"start": 282, "end": 286, "text": "[44]", "ref_id": "BIBREF44"}], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "To answer the third question, we first introduce birdspotter.ml shown in Fig. 1a -a visualizer designed to analyze Twitter users engaged in online discussions, and aim to provide both broad and specific views of the data. Second, we show how the functionalities of birdspotter and evently can be combined to extract user and reshare cascade information from aTwitter dataset surrounding COVID-19 discussions, fit cascades and predict final popularity, and build user features. Finally, we show that two clusters of active users emerge, and that bots are not among the influential users.", "cite_spans": [], "ref_spans": [{"start": 73, "end": 80, "text": "Fig. 1a", "ref_id": null}], "section": "INTRODUCTION"}, {"text": "The main contributions of this paper are as follows: \u2022 evently -a software package dedicated to modeling reshare cascades, and capable of characterizing online users based on the reshare dynamics of the cascades they generate. \u2022 birdspotter -a software package designed to detect online bots from retrospective (already collected) data, and to estimate online user influence based on the reshare cascades. \u2022 birdspotter.ml -an online visualizer designed to perform exploratory analysis of online Twitter users. \u2022 A set of online tutorials showcasing how these tools can be used as an integrated toolkit aimed at non-computer science experts, and an example analysis of discussions around COVID-19.", "cite_spans": [], "ref_spans": [], "section": "INTRODUCTION"}, {"text": "In this section, we briefly review the theoretical prerequisites concerning modeling reshare cascades using point processes , and estimating reshare influence. Reshare cascades. Both evently and birdspotter analyze the spread of online information in the form of online reshare cascades. A reshare cascade consists of an initial user post and some reshare events of the post by other users. In Twitter, for example, this can happen when users use the retweet functionality. We denote a cascade observed up to time T as H (T ) = {t 0 , t 1 , . . . } where t i \u2208 H (T ) are the event times relative to the first event (t 0 = 0). We denote cascades with additional information about eventsdubbed here as event marks -as marked cascades. We use the notation H m (T ) = {(t 0 , m 0 ), (t 1 , m 1 ), . . . }, where each event is a tuple of the event time and the event mark. For example, for retweet cascades, the numbers of followers of a Twitter user are commonly adopted as event marks [36, 55] .", "cite_spans": [{"start": 983, "end": 987, "text": "[36,", "ref_id": "BIBREF36"}, {"start": 988, "end": 991, "text": "55]", "ref_id": "BIBREF55"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "The Hawkes processes. Both our proposed tools model reshare cascades using Hawkes processes [21] -a type of point processes with the self-exciting property, i.e., the occurrence of past events increases the likelihood of future events. The occurrence of events in a Hawkes process is controlled by the event intensity function:", "cite_spans": [{"start": 92, "end": 96, "text": "[21]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "where \u00b5(t) is the background intensity function and \u03d5 : R + \u2192 R + is a kernel function capturing the decaying influence from a historical event. We note that, for reshare cascades, all events are considered to be offspring of the initial event, i.e. there is no background event rate \u00b5(t) = 0. Two widely adopted parametric forms for the kernel function \u03d5 include the exponential function \u03d5 EX P (t) = \u03ba\u03b8e \u2212\u03b8 t and the power-law function \u03d5 P L (t) = \u03ba(t + c) \u2212(1+\u03b8 ) . The HawkesN process [44] is a finite-population variant of the Hawkes processes, stemming from the connection of Hawkes with the classical SIR epidemic model [25] . HawkesN assumes a finite N -the maximum number of events in the process -, and modulates the likelihood of future event by the remaining proportion of total population. Its intensity function is defined as:", "cite_spans": [{"start": 489, "end": 493, "text": "[44]", "ref_id": "BIBREF44"}, {"start": 627, "end": 631, "text": "[25]", "ref_id": "BIBREF25"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "where N t is the counting process, i.e., the number of events up to time t. Note that N 0 = 1 due to the initial event t 0 = 0. Marked Models. Both evently and birdspotter implement marked versions of the point processes, where the mark is the number of followers that the user emitting the tweet has. This is because the mark of each event governs the number of future events, e.g., a tweet from a largely followed user is likely to attract more retweets. The marked versions of both Hawkes [36] and HawkesN [29] processes are then derived by rescaling the kernel functions with the marks, i.e., \u03d5(m, t) = m \u03b2 \u03d5(t); \u03b2 controls the warping effect of the mark.", "cite_spans": [{"start": 492, "end": 496, "text": "[36]", "ref_id": "BIBREF36"}, {"start": 509, "end": 513, "text": "[29]", "ref_id": "BIBREF29"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "Sampling Hawkes realizations are of use when one wants to generate a synthetic reshare cascade given model parameters, or when one wants to continue a partially observed cascade. We apply the rejection-sampling algorithm [37] to simulate events from Hawkes and HawkesN processes. We refer to [43] for the detailed simulation algorithm. The branching factor n * is an important quantity for the Hawkes and HawkesN processes (as discussed in Section 3.1). It is defined as the expected number of events directly spawned by a single event, i.e., n * = \u222b \u221e 0 \u03d5(\u03c4 )d\u03c4 . For the marked variants, an expectation is also taken over the distribution of marks,", "cite_spans": [{"start": 221, "end": 225, "text": "[37]", "ref_id": "BIBREF37"}, {"start": 292, "end": 296, "text": "[43]", "ref_id": "BIBREF43"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "is a doubly stochastic formulation of Hawkes processes where the branching factor (dubbed as infectiousness by Zhao et al. [55] ) is a stochastic time-varying function n * (t) estimated from the observed events H m (t). Parameter estimation. We estimate the parameters of Hawkes and HawkesN using the log-likelihood function for point processes [14] :", "cite_spans": [{"start": 123, "end": 127, "text": "[55]", "ref_id": "BIBREF55"}, {"start": 345, "end": 349, "text": "[14]", "ref_id": "BIBREF13"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "SEISMIC is fitted using the R package by Zhao et al. [55] . Cascades joint modeling. When analyzing the reshare dynamics of online items (like Youtube videos and news articles) or users, it is desirable to account for the multiple cascades relating to them. Kong et al. [28] proposed to jointly model a group of cascades with a shared Hawkes model by summing the log-likelihood functions of individual cascades. In Section 4, we jointly model the cascades initiated by the same user, and we show that the learned models can be used to separate active Twitter users from bots. Final popularity prediction. The final popularity of a reshare cascade is the total number of events which occurred until the cascade has ended. Predicting the final popularity of a cascade that is still active (i.e., before its end) has been extensively explored in prior works [36, 44, 47, 55] . Given a Hawkes process observed until time T , its expected final size has an analytical solution:", "cite_spans": [{"start": 53, "end": 57, "text": "[55]", "ref_id": "BIBREF55"}, {"start": 270, "end": 274, "text": "[28]", "ref_id": "BIBREF28"}, {"start": 855, "end": 859, "text": "[36,", "ref_id": "BIBREF36"}, {"start": 860, "end": 863, "text": "44,", "ref_id": "BIBREF44"}, {"start": 864, "end": 867, "text": "47,", "ref_id": "BIBREF47"}, {"start": 868, "end": 871, "text": "55]", "ref_id": "BIBREF55"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "where N T is the number of events observed until time T . While SEISMIC predicts final popularities with Eq. (4), Mishra et al. [36] and Kong et al. [29] apply an additional regression layer over the model parameters to train a final popularity regressor. Viral score v describes a user or an online item, and it is defined as the expected popularity of a newly started cascade relating to the given user or item. It is obtained using the model jointly trained on all observed cascades of the user (item) [45] , and it is defined as", "cite_spans": [{"start": 128, "end": 132, "text": "[36]", "ref_id": "BIBREF36"}, {"start": 149, "end": 153, "text": "[29]", "ref_id": "BIBREF29"}, {"start": 505, "end": 509, "text": "[45]", "ref_id": "BIBREF45"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "for marked models). User influence estimation. Birdspotter adopts the following definition for user influence, widely used in literature [16, 42, 52] :", "cite_spans": [{"start": 137, "end": 141, "text": "[16,", "ref_id": "BIBREF15"}, {"start": 142, "end": 145, "text": "42,", "ref_id": "BIBREF42"}, {"start": 146, "end": 149, "text": "52]", "ref_id": "BIBREF52"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "is defined as the mean number of reshares generated directly and indirectly by a message posted by u, irrespective if it is an original message or a reshare.", "cite_spans": [], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "Estimating influence from retweet cascades has the additional difficulty of not observing the branching structure of the diffusion -i.e., the Twitter API attributes all retweets to the original tweet. birdspotter estimates Twitter user influence using only the observed retweet cascade H m (T )", "cite_spans": [], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "where marks correspond to users' number of followers.", "cite_spans": [], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "Rizoiu et al. [42] propose a method to estimate user influence in the absence of the branching structure by assuming that retweets arrive following a Hawkes point process [43] . We can quantify the probability that an event v j is generated by an previous event v i as the ratio of the event intensity generated by v i and the total intensity at time t j . Formally, the probability v j retweets v i is", "cite_spans": [{"start": 14, "end": 18, "text": "[42]", "ref_id": "BIBREF42"}, {"start": 171, "end": 175, "text": "[43]", "ref_id": "BIBREF43"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "Rizoiu et al. [42] also introduce the pairwise influence score m i j , intuitively defined as the amount of influence that v i exerts over v j either directly (when v j is a direct retweet of v i ) or indirectly (when v j is a retweet of a descendant of v i ): Finally, the influence of v i is \u03c6(v i ) = n k =i m ik , and the influence of a user u is the average of the influences of all of their tweets:", "cite_spans": [{"start": 14, "end": 18, "text": "[42]", "ref_id": "BIBREF42"}], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "where T (u) is the set of all the tweets emitted by user u.", "cite_spans": [], "ref_spans": [], "section": "PRELIMINARIES"}, {"text": "In this section, we give an overview of the two packages and the visualizer, and we describe their usage, functionalities, and design. Fig. 1b schematically shows the usages and data dependencies between the two packages.", "cite_spans": [], "ref_spans": [{"start": 135, "end": 142, "text": "Fig. 1b", "ref_id": null}], "section": "PACKAGE OVERVIEW"}, {"text": "evently is a R package for modeling online reshare cascades -and retweet cascades in particular -using Hawkes processes and their variants. By design, it provides an integrated set of functionalities to enable one to conduct cascade-level or user-level analysis of reshare diffusion. Design. evently is designed around the interactions among three components: data (i.e., reshare cascades), models and diffusion measures. In applications, models can be used to simulate new cascades, and diffusion measures are analyzed with off-the-shelf supervised and unsupervised tools. Table 1 shows available diffusion measures and their corresponding R function calls at cascade and user levels.", "cite_spans": [], "ref_spans": [{"start": 574, "end": 581, "text": "Table 1", "ref_id": "TABREF0"}], "section": "The evently"}, {"text": "For cascade-level analysis, a reshare cascade is usually observed until a certain time T . A chosen model is then fitted on the cascade capturing its temporal dynamics. From the learned model, evently characterizes the cascade with its branching factor (in Section 2). It can also simulate possible future developments of the cascade after time T and, in addition, derive the expectation of all future unfolding (i.e., the final popularity in Eq. (4)).", "cite_spans": [], "ref_spans": [], "section": "The evently"}, {"text": "When performing user-level analysis, cascades are grouped based on the user that initiates them. evently models these cascades jointly, and the resulting fitted model encodes the reshare patterns at the user level. Similarly, new reshare cascades can be simulated from this model, and the viral score denoting the expected popularity of a new cascade from the same user can be derived (Section 2). Other temporal features for the user that can be derived from the group of cascades include 6-point summaries (mean, first/third quarters, median, minimum and maximum values) of cascade sizes, reshare event time intervals and event magnitudes [36] . Implementation. evently contains two core functions in terms of data and models: fit_series fits a model on given cascades; generate_series simulates cascades from a provided model. A model can be indicated by passing an model_type argument to these functions where we use abbreviated strings to denote models. For example, EXP and PL stands for Hawkes processes with an exponential kernel and a power-law kernel respectively, while mEXP and mPL are their marked variants. We refer to the package documentation 4 for a complete table of model abbreviations. Data structure. Cascades are structured as tables (or data.frames in R) where a time column stores event timestamps relative to the first event t 0 and an optional magnitude column holds the corresponding event mark information. The APIs of evently also work with an R list of cascade data.frames assuming these cascades share a same model. Optimization. As mentioned in Section 2, the model parameter estimation is done via AMPL, a modeling language designed to describe and solve large-scale optimization problems. Compared to other optimization tools such as nlopt [23] , which require precomputed or numerical gradients, AMPL provides automatic differentiation of functions leading to model implementation efficiency. Moreover, it is also compatible with a wide range of solvers including two standard non-linear solvers IPOPT [46] and LGO [39] . Installation. Evently can be installed in R directly from Github 1 : remotes::install_github('behavioral-ds/evently'). Upon the first load, it automatically downloads and configures its dependencies AMPL and IPOPT, which if performed manually would involve considerable effort.", "cite_spans": [{"start": 641, "end": 645, "text": "[36]", "ref_id": "BIBREF36"}, {"start": 1774, "end": 1778, "text": "[23]", "ref_id": null}, {"start": 2037, "end": 2041, "text": "[46]", "ref_id": "BIBREF46"}, {"start": 2050, "end": 2054, "text": "[39]", "ref_id": "BIBREF39"}], "ref_spans": [], "section": "The evently"}, {"text": "birdspotter is a python3 package providing a toolkit to measure the botness and social influence of Twitter users retrospectivelyi.e. on previously collected tweets provided in the standard jsonl or json format. The package is aimed at practitioners who analyze discourse and user activity on social media -such as social scientists and journalists -, while requiring only basic R or python experience and no statistical modeling knowledge. Measure influence and botness. birdspotter measures user influence as outlined in Section 2, using by default a marked Hawkes exponential kernel with parameters \u03b2 = 1, \u03ba = 1 \u03b8 and \u03b8 = 6.8\u00d710 \u22124 . These were tuned on a large collection of real cascades [42] , and can be customized using the function getInfluenceScores().", "cite_spans": [{"start": 693, "end": 697, "text": "[42]", "ref_id": "BIBREF42"}], "ref_spans": [], "section": "birdspotter"}, {"text": "Internally, birdspotter leverages an XGboost classifier [8] trained on a large tweet dataset of labeled bots. We construct user features in three categories: classic, semantic, and topic-based features. The classic features include user features (such as the follower-tofollowee ratio, friends count and years on twitter), activity features (such as retweet count, statuses rate, and favorite count) and lexical features (such as number of characters in tweets, number of punctuation marks, and number of mentions). The semantic features are constructed from word2vec [35] embeddings of users' tweets and their user descriptions. By default, birdspotter automatically downloads and uses the GloVe 300d Twitter embeddings [38] , however customized embeddings can easily be used. Finally, the topic-based features are constructed from the term frequencyinverse document frequency (TF-IDF) [24] of the hashtags of the tweets/retweets which users participate in. Usage and functionalities. Given a dataset of tweets collected externally, leveraging the Twitter API, birdspotter's core functionality revolves around two steps. First, it loads the Twitter dataset, 1 birdspotter <import('birdspotter') 2 bs <-birdspotter$BirdSpotter('corona_2020_01_31.jsonl') 3 cascades <-bs$getCascadesDataFrame() 4 # user information can be obtained by 5 labeled_users_botness <-bs$getBotness() 6 labeled_users_influence <-bs$getInfluenceScores() extracts retweet cascades, and compiles the user-level information.", "cite_spans": [{"start": 56, "end": 59, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 568, "end": 572, "text": "[35]", "ref_id": "BIBREF35"}, {"start": 721, "end": 725, "text": "[38]", "ref_id": "BIBREF38"}, {"start": 887, "end": 891, "text": "[24]", "ref_id": "BIBREF24"}, {"start": 1196, "end": 1197, "text": "2", "ref_id": "BIBREF1"}, {"start": 1254, "end": 1255, "text": "3", "ref_id": "BIBREF2"}, {"start": 1293, "end": 1294, "text": "4", "ref_id": "BIBREF3"}, {"start": 1333, "end": 1334, "text": "5", "ref_id": "BIBREF4"}, {"start": 1375, "end": 1376, "text": "6", "ref_id": "BIBREF5"}], "ref_spans": [], "section": "birdspotter"}, {"text": "In the second step, it performs the influence and botness analysis. The former is achieved by simply invoking the BirdSpotter constructor, while the latter is achieved by calling the function getLabeledUsers() which returns a table with the user features detailed above. For every observed cascade, birdspotter computes the most likely branching structure (see discussion in Section 2 about how Twitter attributes all retweets to the original tweet). This can be achieved using the function getCascadesDataFrame(), which returns the reshare cascades in the same format as evently with the additional column expected_parent which indicates for a tweet its most likely parent.", "cite_spans": [], "ref_spans": [], "section": "birdspotter"}, {"text": "For power users, birdspotter provides a number of robust configurations -such as changing the parameters of the Hawkes kernel in Eq. (5) or using user-defined word embeddings -documented using its readthedocs 5 documentation. A usage tutorial is available on birdspotter's repository 2 . For users who prefer to analyze the results outside python, birdspotter can dump the user table and the reshare cascades in Comma Separated Values (CSV) files, that can be loaded in outside tools. All birdspotter functionalities can be accessed in R via reticulate [1] .", "cite_spans": [{"start": 553, "end": 556, "text": "[1]", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "birdspotter"}, {"text": "Birdspotter's pre-trained XGBoost classifier can be customized to a particular application or dataset through labeling and re-training. The function getBotAnnotationTemplate() outputs a CSV that can be annotated by the user, and trainClassifierModel() retrains the classifier with this annotated data. An option controls whether the detection parameter is further tuned starting from the existing model (useful for adapting both detection to a particular dataset) or retrained from scratch. We exemplify this in Section 4. Data Structures. birdspotter's main class, called BirdSpotter, is used to access methods and attributes. birdspotter uses pandas dataframes to store extracted data and perform analysis. In particular, three dataframes are made accessible, through the main object after tweets are extracted: featuresDataframe (users and their extracted features), cascadeDataframe (tweets and cascade information), and hashtagDataframe (TD-IDF of hashtags used by users in tweets text). Installation. birdspotter installs in the canonical python way: pip install birdspotter.", "cite_spans": [], "ref_spans": [], "section": "birdspotter"}, {"text": "birdspotter.ml 3 is a visualizer built on top of birdspotter, and designed to analyze Twitter users engaged in online discussions.", "cite_spans": [], "ref_spans": [], "section": "birdspotter.ml visualiser"}, {"text": "The visualisation provides both broad and specific views of the data, via the three components shown in Fig. 1a: a scatter ", "cite_spans": [], "ref_spans": [{"start": 104, "end": 122, "text": "Fig. 1a: a scatter", "ref_id": null}], "section": "birdspotter.ml visualiser"}, {"text": "In this section, we apply birdspotter and evently to a dataset related to online discussions about the COVID-19 [7] and demonstrate individual functionalities with code snippets and the outputs. All steps and results presented here are reproducible which can be accessed via an online Rmarkdown notebook 6 . We have also pre-loaded a sample of the dataset into the birdspotter.ml public installation 3 . Dataset. We use the dataset of tweets concerning the novel coronavirus COVID-19 pandemic in 2020. Chen et al. [7] collected the tweet IDs by subscribing to Twitter\u00e2\u0102\u0179s streaming API with a set of manually selected accounts and keywords (refer to their online repository 7 for a full list). We limit our dataset to tweets posted on January the 31st. The dataset is provided as a list of tweet IDs which require re-hydration with tools like twarc. As deleted tweets cannot be recovered, we obtain 68.8% of the original dataset. Import from raw data. Importing the COVID-19 dataset, and extracting user and cascade information can be achieved using birdspotter in just five lines of code (see Fig. 2a, lines 1-6) . including \"ghost\" tweets, i.e., tweets posted before Jan 31st, which spawned retweet cascades during the studied period. Our dataset contains 1,566,328 unique tweets (71,940 of which are \"ghost\" tweets) posted by 919,176 unique users. Birdspotter extracts 423,443 cascades, started by 280,336 users. Dataset profiling. We perform an exploratory data analysis of the dataset. In line with prior literature, we observe that cascade size is long-tail distributed, with a mean of 3.7 events per cascade. The cascade duration shows a more complex distribution, and an average cascade duration of 18.7 hours. Note that due to space constraints, the cascade size and duration distributions are only shown in the accompanying online tutorial. Fig. 2b shows the empirical distributions of user botness, influence and activity levels -the latter being defined as the number of retweet cascades that a user participates in. Botness has a mean of 0.27, and its distribution shows two maxima: a larger one around 0.17 showing the most participants in the discussions are likely human, and a smaller one towards high botness values, indicating that a non-trivial number of bots participated in the COVID-19 discussions. In line with prior work [42] , both the influence and the activity level are long-tailed distributed -they appear as lines on a log-log CCDF plot -, which is expected as most popularity measures follow the \"rick-get-richer\" paradigm. While most users participate in only one cascade, the maximum participation is 1,348 by a self-proclaimed bot @viriyabot (with botness 0.634).", "cite_spans": [{"start": 112, "end": 115, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 514, "end": 517, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 2346, "end": 2350, "text": "[42]", "ref_id": "BIBREF42"}], "ref_spans": [{"start": 1094, "end": 1113, "text": "Fig. 2a, lines 1-6)", "ref_id": "FIGREF1"}, {"start": 1851, "end": 1858, "text": "Fig. 2b", "ref_id": "FIGREF1"}], "section": "CASE STUDY: COVID-19 DISCUSSIONS"}, {"text": "(Re-)Labeling Users. Upon closer examination, we observe that the users @DumplingSays, @eddfuentess, and @marat_dospolovwith botness scores of 0.873, 0.83, and 0.925 respectively-are in fact likely humans. Birdspotter allows to correct such false positives (and false negatives) by fine-tuning the model on additional labeled data. We use the getAnnotationTemplate function to obtain a template for manual annotation of all users in the data set (see Fig. 2a, line 8) . We label the three users above as human, we remove the other rows, and we use trainClassifier (with parameter update set to True, see Fig. 2a , line 10) to continue training the bot detection classifier. In the end, the new botness scores for the above users are 0.375, 0.296, and 0.559, respectively.", "cite_spans": [], "ref_spans": [{"start": 451, "end": 467, "text": "Fig. 2a, line 8)", "ref_id": "FIGREF1"}, {"start": 604, "end": 611, "text": "Fig. 2a", "ref_id": "FIGREF1"}], "section": "CASE STUDY: COVID-19 DISCUSSIONS"}, {"text": "In theory, practitioners can use birdspotter as a general purpose user classifier by retraining the classifier with any latent user attribute (of a type supported by XGboost). Fit observed reshare cascades efficiently. evently fits Hawkes processes efficiently by leveraging the AMPL interface with a range of model choices. Fig. 3a depicts an example where we apply marked Hawkes processes with the power-law kernel function to jointly fit the cascades of two randomly selected Twitter users: @BobOngHugots (account posting quotes from a Filipino author) and @Jaefans_Global (account of a K-pop singer), respectively. We employ the function fit_series from evently and obtain the fitted models. The learned kernel functions for the two users are plotted at lines 7-8, and shown in the lower panel. We observe that, on average, tweets posted by @BobOngHugots have an initial higher intensity but demonstrate a faster decay trend in followers' memory compared to @Jaefans_Global. On the other hand, tweets from @Jaefans_Global tend to influence followers for a longer period. Simulate processes with a range of models. With a given model, evently allows to sample entire synthetic new cascades, or continue partially observed cascades. For instance, in line 1-3 in Fig. 3b we use evently to simulate a hypothetical cascade started by @BobOngHugots using the model obtained in Fig. 3a . The lower panel plots the simulated cascade which contains 21 reshare events which is a pretty large cascade given that @BobOngHugots's viral score is 7.40). In another example at Fig. 3c, line 1-3 , we partially observe a real cascade from @BobOngHugots, and we use evently to continue the cascade unfolding via simulation. 25 new events are spawned following the observed history (line 2-6). Compute popularity measures. The above-mentioned procedure outputs just one possible ending for a given cascade. Using evently we can compute the cascade's popularity, i.e. the expected cascade size over all possible unfolding. At line 7-13, we obtain the expected final popularity with two methods: a marked powerlaw Hawkes process and the SEISMIC model, which output final sizes values of 458.3028 and 729.923, respectively. We note that the true final popularity of the cascade is 472 obtained by checking the retweets within following 10 days (1st Feb to 10th Feb). Another two diffusion measures are computed in the example: @BobOngHugots's branching factor, and their viral score. Visualize users in a latent space. The aforementioned applications provide methods to study individual user, however it might be desirable to analyze users in relation to each other. We leverage the temporal features from evently and user metrics from birdspotter to create a visualization of the users in the dataset. We select the top 300 users who initiated the most number of cascades in the dataset. For these users, using birdspotter we obtain their influence and botness as shown in Fig. 2a , and using evently we build their temporal features using the function generate_features. In Fig. 4 , we apply the state-of-the-art dimension reduction tool t-SNE [32] to build a two-dimensional space from the higher dimensional space of the temporal features. Finally, we label as bots the users with a botness score higher than 0.6 [42] , and we color them based on their user influence scores.", "cite_spans": [{"start": 3128, "end": 3132, "text": "[32]", "ref_id": "BIBREF32"}, {"start": 3299, "end": 3303, "text": "[42]", "ref_id": "BIBREF42"}], "ref_spans": [{"start": 325, "end": 332, "text": "Fig. 3a", "ref_id": "FIGREF4"}, {"start": 1264, "end": 1271, "text": "Fig. 3b", "ref_id": "FIGREF4"}, {"start": 1375, "end": 1382, "text": "Fig. 3a", "ref_id": "FIGREF4"}, {"start": 1565, "end": 1582, "text": "Fig. 3c, line 1-3", "ref_id": "FIGREF4"}, {"start": 2956, "end": 2963, "text": "Fig. 2a", "ref_id": "FIGREF1"}, {"start": 3058, "end": 3064, "text": "Fig. 4", "ref_id": "FIGREF6"}], "section": "CASE STUDY: COVID-19 DISCUSSIONS"}, {"text": "From Fig. 4 , we observe two obvious clusters that divide less influential users (top-right corner) from high influence users (bottomleft corner). Noticeably, most users who are classified as bots group at the top-right corner, i.e., the less influential side. On the contrary, users with high influence scores are less likely to be bots.", "cite_spans": [], "ref_spans": [{"start": 5, "end": 11, "text": "Fig. 4", "ref_id": "FIGREF6"}], "section": "CASE STUDY: COVID-19 DISCUSSIONS"}, {"text": "We structure the discussion about the related work into two sections: tools for modeling reshare cascades using Hawkes processes, and tools for detecting Twitter bots and quantifying user influence. Tools for cascade modeling with Hawkes processes. Most prior works provide the proposed models as scripts mainly for reproducing experimental results [4, 29, 36, 44] . Zhao et al. [55] ship their model in an R package as a accessible tool for predicting the final popularity of retweet cascade. Unlike the above which are mostly developed for demonstration purposes, evently is designed a extendible, multi-purpose, unified set of APIs for modeling with different Hawkes process variants.", "cite_spans": [{"start": 349, "end": 352, "text": "[4,", "ref_id": "BIBREF3"}, {"start": 353, "end": 356, "text": "29,", "ref_id": "BIBREF29"}, {"start": 357, "end": 360, "text": "36,", "ref_id": "BIBREF36"}, {"start": 361, "end": 364, "text": "44]", "ref_id": "BIBREF44"}, {"start": 379, "end": 383, "text": "[55]", "ref_id": "BIBREF55"}], "ref_spans": [], "section": "STATE OF THE ART"}, {"text": "There exist other tools that implement multiple models, and which emphasize specific aspects such as language-specific implementations (e.g., THAP [50] in matlab, PoPPy [49] in PyTorch), or network Hawkes models (pyhawkes [31] ). Among these, a Python package, tick [2] , has the most active community and supplies a comprehensive set of models and helper functions for general timedependent modeling including Hawkes processes. evently differs from these toolboxes in two ways: it is a Hawkes process toolbox in the native R language with limited dependencies; it is designed with an emphasis on online information diffusion modeling. Tools for detecting Twitter bots. Bot detection is known to be a hard problem. Human annotated bot datasets are often noisy, as even humans struggle to detect bots. Solutions have been proposed to detect bot activity in real-time [9] , or to identify potential bot campaigns on Twitter [22] . However, these methods are designed to analyze a discussion landscape as a whole, and can not determine if a particular user is a bot. Bot detectors are usually trained on human-labeled datasets, and they usually rely on NLP approaches [12, 27] , deep-learning approaches [30] , feature-engineering [11, 15, 51] and other methods [ 19, 34] . The de-facto bot detection tool in the social science community has become Botometer (formerly BotOrNot) [15] , which uses more than 1000 user-and recent activity-related features to train a classifier. Botometer performance is known to deteriorate over time [40] , and performs poorer non-English Twitter accounts. Furthermore, Botometer is provided as an online API and requires access to the Twitter API, which enforces rate limits and precludes the detection of bots in large Twitter datasets. But most importantly, Botometer cannot output predictions on Twitter dumps collected in the past (like used in many work [3, 18, 48] ).", "cite_spans": [{"start": 147, "end": 151, "text": "[50]", "ref_id": "BIBREF50"}, {"start": 169, "end": 173, "text": "[49]", "ref_id": "BIBREF49"}, {"start": 222, "end": 226, "text": "[31]", "ref_id": "BIBREF31"}, {"start": 266, "end": 269, "text": "[2]", "ref_id": "BIBREF1"}, {"start": 866, "end": 869, "text": "[9]", "ref_id": "BIBREF8"}, {"start": 922, "end": 926, "text": "[22]", "ref_id": "BIBREF21"}, {"start": 1165, "end": 1169, "text": "[12,", "ref_id": "BIBREF11"}, {"start": 1170, "end": 1173, "text": "27]", "ref_id": "BIBREF27"}, {"start": 1201, "end": 1205, "text": "[30]", "ref_id": "BIBREF30"}, {"start": 1228, "end": 1232, "text": "[11,", "ref_id": "BIBREF10"}, {"start": 1233, "end": 1236, "text": "15,", "ref_id": "BIBREF14"}, {"start": 1237, "end": 1240, "text": "51]", "ref_id": "BIBREF51"}, {"start": 1261, "end": 1264, "text": "19,", "ref_id": "BIBREF18"}, {"start": 1265, "end": 1268, "text": "34]", "ref_id": "BIBREF34"}, {"start": 1376, "end": 1380, "text": "[15]", "ref_id": "BIBREF14"}, {"start": 1530, "end": 1534, "text": "[40]", "ref_id": "BIBREF40"}, {"start": 1890, "end": 1893, "text": "[3,", "ref_id": "BIBREF2"}, {"start": 1894, "end": 1897, "text": "18,", "ref_id": "BIBREF17"}, {"start": 1898, "end": 1901, "text": "48]", "ref_id": "BIBREF48"}], "ref_spans": [], "section": "STATE OF THE ART"}, {"text": "Birdspotter addresses the above-stated shortcomings by producing bot predictions on already collected Twitter dumps, and by exposing a simple interface to allows researchers to annotate their own Twitter user collection.", "cite_spans": [], "ref_spans": [], "section": "STATE OF THE ART"}, {"text": "Tools for quantifying online influence. There are many features used to score the influence, reputation or popularity of online users. We delineate these into three areas: those using static user attributes (including lexical features and information on a user's profile) [13] , those that analyze the online social graph (e.g. degree, PageRank, HITs, etc.) [6, 41] , and those modeling information diffusion [54] . However, few of these have translated into accessible tools for the non-experts in the field. For instance, Cossu et al. [13] provide a set of scripts to perform their influence measurement method. Other tools, like ConTinEst [16, 20] , require knowledge of the social graph (which is often prohibitively expensive to obtain) on which it performs random walks (which are very slow on large social graphs). Birdspotter estimates user influence from reshare dynamics, in the absence of knowledge about the social graph, and provides an end-to-end tool to analyze Twitter users.", "cite_spans": [{"start": 272, "end": 276, "text": "[13]", "ref_id": "BIBREF12"}, {"start": 358, "end": 361, "text": "[6,", "ref_id": "BIBREF5"}, {"start": 362, "end": 365, "text": "41]", "ref_id": "BIBREF41"}, {"start": 409, "end": 413, "text": "[54]", "ref_id": "BIBREF54"}, {"start": 537, "end": 541, "text": "[13]", "ref_id": "BIBREF12"}, {"start": 642, "end": 646, "text": "[16,", "ref_id": "BIBREF15"}, {"start": 647, "end": 650, "text": "20]", "ref_id": "BIBREF19"}], "ref_spans": [], "section": "STATE OF THE ART"}, {"text": "In this work, we present a toolkit for analyzing Twitter users with an emphasis on their involvement in online information diffusions. The toolkit consists in two packages, birdspotter and evently, and a visualizer birdspotter.ml. First, we provide the theoretical background information. Then we give an overview of the toolkit. While birdspotter examines users regarding their bot-like behavior and social influence to followers, evently models the reshare cascades initiated by users. Lastly, given a dataset of tweets around COVID-19, we demonstrate the applications of the proposed tools. Future work. The future development plan of evently mainly involves the incorporation of more models and optimization algorithms, such as a non-parametric Hawkes process and a variational inference algorithm proposed in recent literature [53] . Moreover, we plan to integrate evently with additional optimization tools. A project [17] established recently brings the automatic differentiation to R language. As AMPL requires a dedicated model language, this project enables evently to define models in native R language and maintain the optimization efficiency. birdspotter will be extended to incorporate further diffusion-based influence measures and allow extensible features for bot detection. Furthermore, birdspotter.ml will increase the datasets that it hosts, as more social media topics are discovered.", "cite_spans": [{"start": 832, "end": 836, "text": "[53]", "ref_id": "BIBREF53"}, {"start": 924, "end": 928, "text": "[17]", "ref_id": "BIBREF16"}], "ref_spans": [], "section": "CONCLUSION AND FUTURE WORK"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "reticulate: R Interface to Python", "authors": [{"first": "Kevin", "middle": [], "last": "Jj Allaire", "suffix": ""}, {"first": "Yuan", "middle": [], "last": "Ushey", "suffix": ""}, {"first": "Dirk", "middle": [], "last": "Tang", "suffix": ""}, {"first": "", "middle": [], "last": "Eddelbuettel", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Tick: a Python library for statistical learning, with an emphasis on hawkes processes and time-dependent models", "authors": [{"first": "Emmanuel", "middle": [], "last": "Bacry", "suffix": ""}, {"first": "Martin", "middle": [], "last": "Bompaire", "suffix": ""}, {"first": "Philip", "middle": [], "last": "Deegan", "suffix": ""}, {"first": "St\u00e9phane", "middle": [], "last": "Ga\u00efffas", "suffix": ""}, {"first": "S\u00f8ren V", "middle": [], "last": "Poulsen", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "Social bots distort the 2016 US Presidential election online discussion", "authors": [{"first": "Alessandro", "middle": [], "last": "Bessi", "suffix": ""}, {"first": "Emilio", "middle": [], "last": "Ferrara", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "Deephawkes: Bridging the gap between prediction and understanding of information cascades", "authors": [{"first": "Qi", "middle": [], "last": "Cao", "suffix": ""}, {"first": "Huawei", "middle": [], "last": "Shen", "suffix": ""}, {"first": "Keting", "middle": [], "last": "Cen", "suffix": ""}, {"first": "Wentao", "middle": [], "last": "Ouyang", "suffix": ""}, {"first": "Xueqi", "middle": [], "last": "Cheng", "suffix": ""}], "year": 2017, "venue": "CIKM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "Sandy\" Pentland. 2016. Beyond viral", "authors": [{"first": "Manuel", "middle": [], "last": "Cebrian", "suffix": ""}, {"first": "Iyad", "middle": [], "last": "Rahwan", "suffix": ""}, {"first": "Alex", "middle": [], "last": "", "suffix": ""}], "year": 2016, "venue": "Commun. ACM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Measuring user influence in twitter: The million follower fallacy", "authors": [{"first": "Meeyoung", "middle": [], "last": "Cha", "suffix": ""}, {"first": "Hamed", "middle": [], "last": "Haddadi", "suffix": ""}, {"first": "Fabricio", "middle": [], "last": "Benevenuto", "suffix": ""}, {"first": "Krishna", "middle": ["P"], "last": "Gummadi", "suffix": ""}], "year": 2010, "venue": "ICWSM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Tracking Social Media Discourse About the COVID-19 Pandemic: Development of a Public Coronavirus Twitter Data Set", "authors": [{"first": "Emily", "middle": [], "last": "Chen", "suffix": ""}, {"first": "Kristina", "middle": [], "last": "Lerman", "suffix": ""}, {"first": "Emilio", "middle": [], "last": "Ferrara", "suffix": ""}], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Xgboost: A scalable tree boosting system", "authors": [{"first": "Tianqi", "middle": [], "last": "Chen", "suffix": ""}, {"first": "Carlos", "middle": [], "last": "Guestrin", "suffix": ""}], "year": 2016, "venue": "KDD", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "An unsupervised approach to detect spam campaigns that use botnets on Twitter", "authors": [{"first": "Zhouhan", "middle": [], "last": "Chen", "suffix": ""}, {"first": "Devika", "middle": [], "last": "Subramanian", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Do Cascades Recur?", "authors": [{"first": "Justin", "middle": [], "last": "Cheng", "suffix": ""}, {"first": "A", "middle": [], "last": "Lada", "suffix": ""}, {"first": "Jon", "middle": ["M"], "last": "Adamic", "suffix": ""}, {"first": "Jure", "middle": [], "last": "Kleinberg", "suffix": ""}, {"first": "", "middle": [], "last": "Leskovec", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Blog or block: Detecting blog bots through behavioral biometrics", "authors": [{"first": "Zi", "middle": [], "last": "Chu", "suffix": ""}, {"first": "Steven", "middle": [], "last": "Gianvecchio", "suffix": ""}, {"first": "Aaron", "middle": [], "last": "Koehl", "suffix": ""}, {"first": "Haining", "middle": [], "last": "Wang", "suffix": ""}, {"first": "Sushil", "middle": [], "last": "Jajodia", "suffix": ""}], "year": 2013, "venue": "Computer Networks", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "Sifting robotic from organic text: a natural language approach for detecting automation on Twitter", "authors": [{"first": "M", "middle": [], "last": "Eric", "suffix": ""}, {"first": "Jake", "middle": ["Ryland"], "last": "Clark", "suffix": ""}, {"first": "Chris", "middle": ["A"], "last": "Williams", "suffix": ""}, {"first": "Richard", "middle": ["A"], "last": "Jones", "suffix": ""}, {"first": "", "middle": [], "last": "Galbraith", "suffix": ""}, {"first": "M", "middle": [], "last": "Christopher", "suffix": ""}, {"first": "Peter", "middle": ["Sheridan"], "last": "Danforth", "suffix": ""}, {"first": "", "middle": [], "last": "Dodds", "suffix": ""}], "year": 2016, "venue": "Journal of Computational Science", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "A review of features for the discrimination of twitter users: Application to the prediction of offline influence", "authors": [{"first": "Jean-Val\u00e8re", "middle": [], "last": "Cossu", "suffix": ""}, {"first": "Vincent", "middle": [], "last": "Labatut", "suffix": ""}, {"first": "Nicolas", "middle": [], "last": "Dugu\u00e9", "suffix": ""}], "year": 2016, "venue": "SNAM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Conditional Intensities and Likelihoods", "authors": [{"first": "J", "middle": [], "last": "Daryl", "suffix": ""}, {"first": "David Vere-Jones", "middle": [], "last": "Daley", "suffix": ""}], "year": 2008, "venue": "An introduction to the theory of point processes", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "Botornot: A system to evaluate social bots", "authors": [{"first": "Onur", "middle": [], "last": "Clayton Allen Davis", "suffix": ""}, {"first": "Emilio", "middle": [], "last": "Varol", "suffix": ""}, {"first": "Alessandro", "middle": [], "last": "Ferrara", "suffix": ""}, {"first": "Filippo", "middle": [], "last": "Flammini", "suffix": ""}, {"first": "", "middle": [], "last": "Menczer", "suffix": ""}], "year": 2016, "venue": "WWW", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Scalable Influence Estimation in Continuous-Time Diffusion Networks", "authors": [{"first": "Nan", "middle": [], "last": "Du", "suffix": ""}, {"first": "Le", "middle": [], "last": "Song", "suffix": ""}, {"first": "Manuel", "middle": [], "last": "Gomez-Rodriguez", "suffix": ""}, {"first": "Hongyuan", "middle": [], "last": "Zha", "suffix": ""}], "year": 2013, "venue": "NeurIPS", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "Tensors and Neural Networks with 'GPU' Acceleration", "authors": [{"first": "Daniel", "middle": [], "last": "Falbel", "suffix": ""}, {"first": "Javier", "middle": [], "last": "Luraschi", "suffix": ""}], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "2020. # covid-19 on twitter: Bots, conspiracies, and social media activism. arXiv", "authors": [], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "The rise of social bots", "authors": [{"first": "Emilio", "middle": [], "last": "Ferrara", "suffix": ""}, {"first": "Onur", "middle": [], "last": "Varol", "suffix": ""}, {"first": "Clayton", "middle": [], "last": "Davis", "suffix": ""}, {"first": "Filippo", "middle": [], "last": "Menczer", "suffix": ""}, {"first": "Alessandro", "middle": [], "last": "Flammini", "suffix": ""}], "year": 2016, "venue": "Comm. ACM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Influence Estimation and Maximization in Continuous-Time Diffusion Networks", "authors": [{"first": "Manuel", "middle": [], "last": "Gomez-Rodriguez", "suffix": ""}, {"first": "Le", "middle": [], "last": "Song", "suffix": ""}, {"first": "Nan", "middle": [], "last": "Du", "suffix": ""}, {"first": "Hongyuan", "middle": [], "last": "Zha", "suffix": ""}, {"first": "Bernhard", "middle": [], "last": "Sch\u00f6lkopf", "suffix": ""}], "year": 2016, "venue": "ACM Transactions on Information Systems", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Spectra of some self-exciting and mutually exciting point processes", "authors": [{"first": "G", "middle": [], "last": "Alan", "suffix": ""}, {"first": "", "middle": [], "last": "Hawkes", "suffix": ""}], "year": 1971, "venue": "Biometrika", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "Bot-Slayer: real-time detection of bot amplification on Twitter", "authors": [{"first": "Pik-Mai", "middle": [], "last": "Hui", "suffix": ""}, {"first": "Kai-Cheng", "middle": [], "last": "Yang", "suffix": ""}, {"first": "Christopher", "middle": [], "last": "Torres-Lugo", "suffix": ""}, {"first": "Zachary", "middle": [], "last": "Monroe", "suffix": ""}, {"first": "Marc", "middle": [], "last": "Mccarty", "suffix": ""}, {"first": "Benjamin", "middle": [], "last": "Serrette", "suffix": ""}, {"first": "Valentin", "middle": [], "last": "Pentchev", "suffix": ""}, {"first": "Filippo", "middle": [], "last": "Menczer", "suffix": ""}], "year": 2019, "venue": "Journal of Open Source Software", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "The NLopt nonlinear-optimization package", "authors": [], "year": null, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "A statistical interpretation of term specificity and its application in retrieval", "authors": [{"first": "Karen", "middle": [], "last": "Sparck", "suffix": ""}, {"first": "Jones", "middle": [], "last": "", "suffix": ""}], "year": 1972, "venue": "Journal of documentation", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF25": {"ref_id": "b25", "title": "A Contribution to the Mathematical Theory of Epidemics", "authors": [{"first": "W", "middle": ["O"], "last": "Kermack", "suffix": ""}, {"first": "A", "middle": ["G"], "last": "Mckendrick", "suffix": ""}], "year": 1927, "venue": "Proceedings of the Royal Society A: Mathematical, Physical and Engineering Sciences", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF26": {"ref_id": "b26", "title": "Analysing user identity via time-sensitive semantic edit distance (t-SED): a case study of Russian trolls on Twitter", "authors": [{"first": "Dongwoo", "middle": [], "last": "Kim", "suffix": ""}, {"first": "Timothy", "middle": [], "last": "Graham", "suffix": ""}, {"first": "Zimin", "middle": [], "last": "Wan", "suffix": ""}, {"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}], "year": 2019, "venue": "Journal of Computational Social Science", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF27": {"ref_id": "b27", "title": "Language-Agnostic Twitter-Bot Detection", "authors": [{"first": "J\u00fcrgen", "middle": [], "last": "Knauth", "suffix": ""}], "year": 2019, "venue": "RANLP 2019", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF28": {"ref_id": "b28", "title": "Exploiting Uncertainty in Popularity Prediction of Information Diffusion Cascades Using Self-exciting Point Processes", "authors": [{"first": "Quyu", "middle": [], "last": "Kong", "suffix": ""}, {"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}, {"first": "Lexing", "middle": [], "last": "Xie", "suffix": ""}], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF29": {"ref_id": "b29", "title": "Modeling Information Cascades with Self-exciting Processes via Generalized Epidemic Models", "authors": [{"first": "Quyu", "middle": [], "last": "Kong", "suffix": ""}, {"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}, {"first": "Lexing", "middle": [], "last": "Xie", "suffix": ""}], "year": 2020, "venue": "WSDM'20", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF30": {"ref_id": "b30", "title": "Deep neural networks for bot detection", "authors": [{"first": "Sneha", "middle": [], "last": "Kudugunta", "suffix": ""}, {"first": "Emilio", "middle": [], "last": "Ferrara", "suffix": ""}], "year": 2018, "venue": "Information Sciences", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF31": {"ref_id": "b31", "title": "Discovering latent network structure in point process data", "authors": [{"first": "Scott", "middle": [], "last": "Linderman", "suffix": ""}, {"first": "Ryan", "middle": [], "last": "Adams", "suffix": ""}], "year": 2014, "venue": "International Conference on Machine Learning", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF32": {"ref_id": "b32", "title": "Visualizing data using t-SNE", "authors": [{"first": "Laurens", "middle": [], "last": "Van Der Maaten", "suffix": ""}, {"first": "Geoffrey", "middle": [], "last": "Hinton", "suffix": ""}], "year": 2008, "venue": "JMLR", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF33": {"ref_id": "b33", "title": "Exploring limits to prediction in complex social systems", "authors": [{"first": "Travis", "middle": [], "last": "Martin", "suffix": ""}, {"first": "Jake", "middle": ["M"], "last": "Hofman", "suffix": ""}, {"first": "Amit", "middle": [], "last": "Sharma", "suffix": ""}, {"first": "Ashton", "middle": [], "last": "Anderson", "suffix": ""}, {"first": "Duncan J", "middle": [], "last": "Watts", "suffix": ""}], "year": 2016, "venue": "WWW", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF34": {"ref_id": "b34", "title": "RTbust: exploiting temporal patterns for botnet detection on twitter", "authors": [{"first": "Michele", "middle": [], "last": "Mazza", "suffix": ""}, {"first": "Stefano", "middle": [], "last": "Cresci", "suffix": ""}, {"first": "Marco", "middle": [], "last": "Avvenuti", "suffix": ""}, {"first": "Walter", "middle": [], "last": "Quattrociocchi", "suffix": ""}, {"first": "Maurizio", "middle": [], "last": "Tesconi", "suffix": ""}], "year": 2019, "venue": "Proceedings of the 10th ACM Conference on Web Science", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF35": {"ref_id": "b35", "title": "Efficient estimation of word representations in vector space. arXiv", "authors": [{"first": "Tomas", "middle": [], "last": "Mikolov", "suffix": ""}, {"first": "Kai", "middle": [], "last": "Chen", "suffix": ""}, {"first": "Greg", "middle": [], "last": "Corrado", "suffix": ""}, {"first": "Jeffrey", "middle": [], "last": "Dean", "suffix": ""}], "year": 2013, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF36": {"ref_id": "b36", "title": "Feature Driven and Point Process Approaches for Popularity Prediction", "authors": [{"first": "Swapnil", "middle": [], "last": "Mishra", "suffix": ""}, {"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}, {"first": "Lexing", "middle": [], "last": "Xie", "suffix": ""}], "year": 2016, "venue": "CIKM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF37": {"ref_id": "b37", "title": "On Lewis' simulation method for point processes", "authors": [{"first": "Yosihiko", "middle": [], "last": "Ogata", "suffix": ""}], "year": 1981, "venue": "IEEE Transactions on Information Theory", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF38": {"ref_id": "b38", "title": "Glove: Global vectors for word representation", "authors": [{"first": "Jeffrey", "middle": [], "last": "Pennington", "suffix": ""}, {"first": "Richard", "middle": [], "last": "Socher", "suffix": ""}, {"first": "Christopher D", "middle": [], "last": "Manning", "suffix": ""}], "year": 2014, "venue": "EMNLP", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF39": {"ref_id": "b39", "title": "Nonlinear optimization with GAMS/LGO", "authors": [{"first": "D", "middle": [], "last": "J\u00e1nos", "suffix": ""}, {"first": "", "middle": [], "last": "Pint\u00e9r", "suffix": ""}], "year": 2007, "venue": "Journal of Global Optimization", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF40": {"ref_id": "b40", "title": "The False positive problem of automatic bot detection in social science research", "authors": [{"first": "Adrian", "middle": [], "last": "Rauchfleisch", "suffix": ""}, {"first": "Jonas", "middle": [], "last": "Kaiser", "suffix": ""}], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF41": {"ref_id": "b41", "title": "Measuring user influence on Twitter: A survey. Information processing & management", "authors": [{"first": "Fabi\u00e1n", "middle": [], "last": "Riquelme", "suffix": ""}, {"first": "Pablo", "middle": [], "last": "Gonz\u00e1lez-Cantergiani", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF42": {"ref_id": "b42", "title": "# DebateNight: The Role and Influence of Socialbots on Twitter During the 1st 2016 US Presidential Debate", "authors": [{"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}, {"first": "Timothy", "middle": [], "last": "Graham", "suffix": ""}, {"first": "Rui", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "Yifei", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "Robert", "middle": [], "last": "Ackland", "suffix": ""}, {"first": "Lexing", "middle": [], "last": "Xie", "suffix": ""}], "year": 2018, "venue": "ICWSM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF43": {"ref_id": "b43", "title": "A Tutorial on Hawkes Processes for Events in Social Media", "authors": [{"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}, {"first": "Young", "middle": [], "last": "Lee", "suffix": ""}, {"first": "Swapnil", "middle": [], "last": "Mishra", "suffix": ""}, {"first": "Lexing", "middle": [], "last": "Xie", "suffix": ""}], "year": 2017, "venue": "Research Frontiers of Multimedia", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF44": {"ref_id": "b44", "title": "SIR-Hawkes: on the Relationship Between Epidemic Models and Hawkes Point Processes", "authors": [{"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}, {"first": "Swapnil", "middle": [], "last": "Mishra", "suffix": ""}, {"first": "Quyu", "middle": [], "last": "Kong", "suffix": ""}, {"first": "Mark", "middle": [], "last": "Carman", "suffix": ""}, {"first": "Lexing", "middle": [], "last": "Xie", "suffix": ""}], "year": 2018, "venue": "WWW", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF45": {"ref_id": "b45", "title": "Online Popularity Under Promotion: Viral Potential, Forecasting, and the Economics of Time", "authors": [{"first": "Marian-", "middle": [], "last": "", "suffix": ""}, {"first": "Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}, {"first": "Lexing", "middle": [], "last": "Xie", "suffix": ""}], "year": 2017, "venue": "ICWSM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF46": {"ref_id": "b46", "title": "On the Implementation of a Primal-Dual Interior Point Filter Line Search Algorithm for Large-Scale Nonlinear Programming", "authors": [{"first": "A", "middle": [], "last": "W\u00e4chter", "suffix": ""}, {"first": "L T", "middle": [], "last": "Biegler", "suffix": ""}], "year": 2006, "venue": "Mathematical Programming", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF47": {"ref_id": "b47", "title": "Retweet wars: Tweet popularity prediction via dynamic multimodal regression", "authors": [{"first": "Ke", "middle": [], "last": "Wang", "suffix": ""}, {"first": "Mohit", "middle": [], "last": "Bansal", "suffix": ""}, {"first": "Jan-Michael", "middle": [], "last": "Frahm", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF48": {"ref_id": "b48", "title": "Bots in the Twittersphere", "authors": [{"first": "Stefan", "middle": [], "last": "Wojcik", "suffix": ""}, {"first": "Solomon", "middle": [], "last": "Messing", "suffix": ""}, {"first": "Aaron", "middle": [], "last": "Smith", "suffix": ""}, {"first": "Lee", "middle": [], "last": "Rainie", "suffix": ""}, {"first": "Paul", "middle": [], "last": "Hitlin", "suffix": ""}], "year": 2018, "venue": "Pew Research Center. Retrieved May", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF49": {"ref_id": "b49", "title": "PoPPy: A Point Process Toolbox Based on PyTorch. arXiv", "authors": [{"first": "Hongteng", "middle": [], "last": "Xu", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF50": {"ref_id": "b50", "title": "THAP: A matlab toolkit for learning with Hawkes processes", "authors": [{"first": "Hongteng", "middle": [], "last": "Xu", "suffix": ""}, {"first": "Hongyuan", "middle": [], "last": "Zha", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF51": {"ref_id": "b51", "title": "Uncovering social network sybils in the wild", "authors": [{"first": "Zhi", "middle": [], "last": "Yang", "suffix": ""}, {"first": "Christo", "middle": [], "last": "Wilson", "suffix": ""}, {"first": "Xiao", "middle": [], "last": "Wang", "suffix": ""}, {"first": "Tingting", "middle": [], "last": "Gao", "suffix": ""}, {"first": "Y", "middle": [], "last": "Ben", "suffix": ""}, {"first": "Yafei", "middle": [], "last": "Zhao", "suffix": ""}, {"first": "", "middle": [], "last": "Dai", "suffix": ""}], "year": 2014, "venue": "TKDD", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF52": {"ref_id": "b52", "title": "RedQueen: An Online Algorithm for Smart Broadcasting in Social Networks", "authors": [{"first": "Ali", "middle": [], "last": "Zarezade", "suffix": ""}, {"first": "Utkarsh", "middle": [], "last": "Upadhyay", "suffix": ""}, {"first": "Hamid", "middle": [], "last": "Rabiee", "suffix": ""}, {"first": "Manuel Gomez", "middle": [], "last": "Rodriguez", "suffix": ""}], "year": 2017, "venue": "WSDM", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF53": {"ref_id": "b53", "title": "Variational Inference for Sparse Gaussian Process Modulated Hawkes Process", "authors": [{"first": "Rui", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "Christian", "middle": [], "last": "Walder", "suffix": ""}, {"first": "Marian-Andrei", "middle": [], "last": "Rizoiu", "suffix": ""}], "year": 2020, "venue": "AAAI", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF54": {"ref_id": "b54", "title": "Learning Influence Probabilities and Modelling Influence Diffusion in Twitter", "authors": [{"first": "Zizhu", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "Weiliang", "middle": [], "last": "Zhao", "suffix": ""}, {"first": "Jian", "middle": [], "last": "Yang", "suffix": ""}, {"first": "Cecile", "middle": [], "last": "Paris", "suffix": ""}, {"first": "Surya", "middle": [], "last": "Nepal", "suffix": ""}], "year": 2019, "venue": "WWW", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF55": {"ref_id": "b55", "title": "SEISMIC: A Self-Exciting Point Process Model for Predicting Tweet Popularity", "authors": [{"first": "Qingyuan", "middle": [], "last": "Zhao", "suffix": ""}, {"first": "A", "middle": [], "last": "Murat", "suffix": ""}, {"first": "", "middle": [], "last": "Erdogdu", "suffix": ""}, {"first": "Y", "middle": [], "last": "Hera", "suffix": ""}, {"first": "Anand", "middle": [], "last": "He", "suffix": ""}, {"first": "Jure", "middle": [], "last": "Rajaraman", "suffix": ""}, {"first": "", "middle": [], "last": "Leskovec", "suffix": ""}], "year": 2015, "venue": "KDD", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF1": {"text": "Once annotated the botness detector can be trained with10 bs$trainClassifierModel('users_to_label.csv', update=True, iterations=300) Quantifying user botness and influence analysis on COVID-19 dataset. (a) Code required to perform the core birdspotter functionalities: load a Twitter dump, generate cascade and user information, annotate and fine-tune the bot classifier. (b) A density plot of user botness scores, and complementary cumulative density plots (CCDF) of user influence and user activity. The dashed red lines show the mean values.", "latex": null, "type": "figure"}, "FIGREF2": {"text": "plot component, a user information component, and a cascade view component. The Scatter Plot. The left panel contains the scatter-plot showing the influence percentile (on the x-axis) and botness (on the y-axis) of a random sample of the users from the dataset, and the underlying 2-D density over the entire data set. Users are colored based on the hashtag they use most and, when selected, the user and cascade views are populated. The plot is pan-able and zoom-able. The User View. The top-right panel provides information about a selected user, including their Twitter image, screen name, their location, the hashtags they used, and some basic statistics. The user information also holds a hyper-link to the user's profile. The Cascade View. The bottom-right panel shows the cascades the selected user participates in, which are select-able via a carousel.The component shows the text of the original tweet, the timing of the retweets and the most-likely branching structure inferred using birdspotter. The points on this component are select-able and hover-able in the same way as the scatter plot. The component also is pan-able and zoom-able.", "latex": null, "type": "figure"}, "FIGREF4": {"text": "Hawkes processes fitting and simulation on cascades initiated by two users from the COVID-19 dataset. The plot inFig. (a)depicts the kernel functions of the learned Hawkes processes and the plot inFig. (b)draws the simulated reshare event history along with the intensity function values in a red solid line.", "latex": null, "type": "figure"}, "FIGREF6": {"text": "Presenting users in a latent space where the positions are obtained by applying t-SNE [32] on temporal diffusion features returned by evently. The circle color indicates the user botness (darker blue suggests higher botness values) and the circle size shows the user influence (larger sizes mean higher influence values).", "latex": null, "type": "figure"}, "TABREF0": {"text": "Functions to compute major diffusion measures.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Diffusion measures </td><td>evently function get_branching_factor\n</td><td>Cascade User\n</td></tr><tr><td>Branching factor n\u2217 </td><td>\u00a0</td><td>\u221a </td><td>\u221a\n</td></tr><tr><td>Final popularity </td><td>predict_final_popularity\n</td><td>\u221a </td><td>\u00d7 \u221a\n</td></tr><tr><td>Viral score v </td><td>get_viral_score </td><td>\u00d7 </td><td>\u00a0</td></tr><tr><td>Cascade size summary </td><td>generate_features </td><td>\u00d7 </td><td>\u221a\n</td></tr><tr><td>Reshare time interval summary </td><td>generate_features </td><td>\u00d7 </td><td>\u221a\n</td></tr><tr><td>Event magnitude summary </td><td>generate_features </td><td>\u00d7 </td><td>\u221a\n</td></tr></table></body></html>"}, "TABREF1": {"text": "# simulate a cascade with a \"selected_cascade\" from @BobOngHugotssim_cascade <-generate_series(user_cascades_fitted[[1]], M = user_magnitude, init_history = selected_cascade) sprintf('%s new events simulated after cascade',nrow(sim_cascade[[1]]) -nrow(selected_cascade))#> 25 new events simulated after cascade# predict with SEISMIC model, assume we have fitted the SEISMIC model", "latex": null, "type": "table"}}, "back_matter": []}