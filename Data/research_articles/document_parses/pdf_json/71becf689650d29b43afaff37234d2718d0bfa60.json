{"paper_id": "71becf689650d29b43afaff37234d2718d0bfa60", "metadata": {"title": "Unsupervised Ensemble of Ranking Models for News Comments Using Pseudo Answers", "authors": [{"first": "Soichiro", "middle": [], "last": "Fujita", "suffix": "", "affiliation": {"laboratory": "", "institution": "Tokyo Institute of Technology", "location": {"settlement": "Kanagawa", "country": "Japan"}}, "email": "fujiso@lr.pi.titech.ac.jp"}, {"first": "Hayato", "middle": [], "last": "Kobayashi", "suffix": "", "affiliation": {"laboratory": "", "institution": "Yahoo Japan Corporation/RIKEN AIP", "location": {"settlement": "Tokyo", "country": "Japan"}}, "email": ""}, {"first": "Manabu", "middle": [], "last": "Okumura", "suffix": "", "affiliation": {"laboratory": "", "institution": "Tokyo Institute of Technology", "location": {"settlement": "Kanagawa", "country": "Japan"}}, "email": ""}]}, "abstract": [{"text": "Ranking comments on an online news service is a practically important task, and thus there have been many studies on this task. Although ensemble techniques are widely known to improve the performance of models, there is little types of research on ensemble neuralranking models. In this paper, we investigate how to improve the performance on the comment-ranking task by using unsupervised ensemble methods. We propose a new hybrid method composed of an output selection method and a typical averaging method. Our method uses a pseudo answer represented by the average of multiple model outputs. The pseudo answer is used to evaluate multiple model outputs via ranking evaluation metrics, and the results are used to select and weight the models. Experimental results on the comment-ranking task show that our proposed method outperforms several ensemble baselines, including supervised one.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "User comments on online news services can be regarded as a useful content since users can read other users' opinions related to each news article. Many online news service sites rank comments in the order of the number of positive user-feedback for a comment, such as \"Like\"-button clicks, and preferentially display popular comments to readers. However, this type of user-feedback is not suitable to assess the comment quality, because this type of measurement is biased by where a comment appears [7] ; Earlier comments tend to receive more feedback since they will be displayed at the top of the page. In attempt of solving this problem, several studies introduce some aspects of the comment quality to focus on, e.g., constructiveness [7, 13] or persuasiveness [22] . In particular, Fujita et al. [7] proposed a new dataset to rank comments directly according to comment quality. This is a difficult task because we have various situations of judging whether a comment is good. For example, comments can indicate rare user experiences, provide new ideas, or cause discussions. Ranking models often fail to capture such information.", "cite_spans": [{"start": 499, "end": 502, "text": "[7]", "ref_id": "BIBREF8"}, {"start": 739, "end": 742, "text": "[7,", "ref_id": "BIBREF8"}, {"start": 743, "end": 746, "text": "13]", "ref_id": "BIBREF14"}, {"start": 765, "end": 769, "text": "[22]", "ref_id": "BIBREF23"}, {"start": 801, "end": 804, "text": "[7]", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "Introduction"}, {"text": "According to recent studies [2, 12, 15] , ensemble techniques are widely known to improve the accuracy of machine learning models. These ensemble techniques can be roughly divided into two types: averaging and selecting. Averaging methods such as Naftaly et al. [17] simply average multiple model outputs. Selecting methods such as majority vote [15] select the most frequent label from the predicted labels of multiple classifiers in post-processing. These methods assist models to make up for other models' mistakes and to improve the results. Recently, Kobayashi [12] proposed an unsupervised ensemble method, post-ensemble, based on kernel density estimation, which was an extension of the majority vote to text generation models. He showed that this method outperformed averaging methods in a text summarization task.", "cite_spans": [{"start": 28, "end": 31, "text": "[2,", "ref_id": "BIBREF2"}, {"start": 32, "end": 35, "text": "12,", "ref_id": "BIBREF13"}, {"start": 36, "end": 39, "text": "15]", "ref_id": "BIBREF16"}, {"start": 262, "end": 266, "text": "[17]", "ref_id": "BIBREF18"}, {"start": 346, "end": 350, "text": "[15]", "ref_id": "BIBREF16"}, {"start": 566, "end": 570, "text": "[12]", "ref_id": "BIBREF13"}], "ref_spans": [], "section": "Introduction"}, {"text": "In this paper, we propose a new unsupervised ensemble method, HPA, which is a hybrid of an output selection and a typical averaging method. In typical averaging methods, a lower accuracy model could merely be noise. A simple denoising method is to statically remove such lower accuracy models [19] . However, there is basically no model that fails for every inputs, particularly in neural models with the same architecture. In general, each model has its own strengths and weaknesses. Therefore, our method adopts dynamic denoising of outputs via a provisional averaging result. We use the provisional averaging result as a pseudo answer. Each predicted ranking is compared to the pseudo answer via a similarity function, and the similarity scores are used for selecting and weighting models. We adopt evaluation metrics as a kind of similarity to specialize in the ranking task. In experiments on a task of ranking constructive news comments, our proposed method HPA outperformed both previous unsupervised ensemble methods and a simple supervised ensemble method. Furthermore, we found that one of the evaluation metrics is useful as a similarity measure for the ensemble process.", "cite_spans": [{"start": 293, "end": 297, "text": "[19]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "Introduction"}, {"text": "Comment Ranking Task: Let an article be associated with comments C = (c 1 , ..., c n ). Each comment has a manually annotated score S = (s 1 , ..., s n ), such as the degree of comment quality. A ranking model m learns a scoring functio\u00f1 s i = m(c i ). We consider a predicted score sequence as a ranking of the comments r = (s 1 , ...,s n ), because we can generate a ranked comment sequence using this score sequence.", "cite_spans": [], "ref_spans": [], "section": "Problem Statement"}, {"text": "Ensemble Problem: We prepare N rankings R = (r 1 , ..., r N ) from ranking models M = (m 1 , ..., m N ). The goal of the ensemble is to combine the ranking models to produce a better ranking than any of the individual ranking functions. A simple averaging method calculates the average of the comment scores, like r * = r\u2208R r |R| .", "cite_spans": [], "ref_spans": [], "section": "Problem Statement"}, {"text": "We introduce PostNDCG which applies the post-ensemble method [12] to the ranking task. Post-ensemble is an unsupervised ensemble method based on kernel density estimation for sequence generation. This method compares the similarity between model outputs and selects the majority-like output which is similar to the other outputs. This selection is equivalent to selecting the output whose estimated density is the highest in the outputs. PostNDCG calculates this scoring function: f (r) = 1 |R| r \u2208R sim(r, r ), where sim(r, r ) represents the similarity between r and r . The final ranking of PostNDCG is defined as r * = argmax r\u2208R f (r). We used the normalized discounted cumulative gain (NDCG@k) [1] as the similarity function sim(\u00b7) to compare each ranker. We propose a Hybrid method using the Pseudo Answer (HPA). Figure 1 illustrates an example of HPA. Here, HPA selects the top three rankings {r 2 , r 3 , r 5 } that are nearest to the pseudo answer. After that, it weights each selected ranking via a scoring function based on the pseudo answer. The concept of HPA is to denoise outputs via a pseudo answerr, which is represented by the average of each model output after the L2 normalization:", "cite_spans": [{"start": 61, "end": 65, "text": "[12]", "ref_id": "BIBREF13"}, {"start": 700, "end": 703, "text": "[1]", "ref_id": "BIBREF0"}], "ref_spans": [{"start": 820, "end": 828, "text": "Figure 1", "ref_id": "FIGREF0"}], "section": "Post-ensemble"}, {"text": "The scoring function g is calculated as the similarity between the pseudo answer and the predicted ranking: g(r) = sim(r, r). Then, HPA selects the top k models with the highest scores. The final ranking r * is represented as, r * = r\u2208R g(r) \u00b7 r, whereR is the set of selected models (rankings).", "cite_spans": [], "ref_spans": [], "section": "HPA Ensemble"}, {"text": "Dataset: We used a dataset for ranking constructive comments on Japanese articles in Yahoo! News 1 , which was prepared in Fujita et al. [7] . The dataset consists of triplets of an article title, comment, and constructiveness score. The constructiveness score (C-score) is defined as the number of crowdsourced workers, out of 40, who have judged a comment to be constructive. Therefore, the C-score is an integer ranging from 0 to 40. In this research, 130,000 comments from 1,300 articles were used as training data, 11,300 comments from 113 articles were used as validation data, and 42,436 comments from 200 articles were used as test data. In the training and validation data, 100 comments were randomly extracted in each article, whereas in the test data, all the comments were extracted assuming an actual service environment.", "cite_spans": [{"start": 137, "end": 140, "text": "[7]", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "Experimental Settings"}, {"text": "Preprocessing: We used a morphological analyzer MeCab 2 [14] with a neologism dictionary, NEologd 3 [20] , for splitting Japanese texts into words. We replaced numbers with a special token and standardized the letter types by halfwidth to fullwidth 4 . We did not remove stop-words because function words will affect the performance in our task. We cutoff low-frequency words that appeared only three times or less in each dataset.", "cite_spans": [{"start": 56, "end": 60, "text": "[14]", "ref_id": "BIBREF15"}, {"start": 100, "end": 104, "text": "[20]", "ref_id": "BIBREF21"}], "ref_spans": [], "section": "Experimental Settings"}, {"text": "We used RankNet [1] , a well-known pairwise ranking algorithm based on neural networks. Given a pair of two comments c 1 and c 2 on an article q, RankNet solves a binary classification problem of whether or not c 1 has a higher score than c 2 . The score indicates the comment has high quality or not. We adopted the encoder-scorer structure for RankNet. The encoder consisted of two long short-term memory (LSTM) instances with 300 units to separately encode a comment and its title. The scorer predicted the ranking score of the comment via a fully-connected layer after concatenating the two encoded (comment and title) vectors. We used pre-trained word representations as the encoder input. They were obtained from a skip-gram model [16] trained with 1.5 million unlabeled news comments. We used the Adam optimizer (\u03b1 = 0.0001, \u03b2 1 = 0.9, \u03b2 2 = 0.999, = 1 \u00d7 10 \u22128 ) to train these models. Both the dimensions of the hidden states of the encoders of article titles and comments were 300. In the experiments, we trained 100 different models by random initialization for the ensemble methods.", "cite_spans": [{"start": 16, "end": 19, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 737, "end": 741, "text": "[16]", "ref_id": "BIBREF17"}], "ref_spans": [], "section": "Model and Training:"}, {"text": "We used normalized discounted cumulative gain (NDCG@k) [1] . The NDCG@k is typically calculated in the top-k comments ranked by the ranking model and denoted by NDCG@k = Z k k i=1 scorei log 2 (i+1) , where score i represents the true ranking score of the i-th comment ranked by the model, and Z k is the normalization constant to scale the value between 0 and 1. In addition to NDCG@k, we use Precision@k as the second evaluation metrics. Precision@k is defined as the ratio of the correctly included comments in the inferred topk comments to the true top-k comments. In the experiment, we evaluated the case of k \u2208 {1, 5, 10}. Note that a well-known paper [10] in the information retrieval field determined NDCG to be more appropriate than Precision@k for graded-scores settings like ours.", "cite_spans": [{"start": 55, "end": 58, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 658, "end": 662, "text": "[10]", "ref_id": "BIBREF11"}], "ref_spans": [], "section": "Evaluation:"}, {"text": "Ensemble Baselines: We prepared the following methods as baselines. RankSVM and RankNet are baselines of a single model. ScoreAvg, RankAvg, TopkAvg, and NormAvg are commonly used ensemble methods that combine multiple models in post-processing without training. SupWeight is the popular supervised ensemble method based on weighting.", "cite_spans": [], "ref_spans": [], "section": "Compared Methods"}, {"text": "-RankSVM: The best single RankSVM model proposed in Fujita et al. [7] .", "cite_spans": [{"start": 66, "end": 69, "text": "[7]", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "Compared Methods"}, {"text": "-RankNet: The best single RankNet model in 100 models for ensemble.", "cite_spans": [], "ref_spans": [], "section": "Compared Methods"}, {"text": "-ScoreAvg: Average output scores of the models for each comment.", "cite_spans": [], "ref_spans": [], "section": "Compared Methods"}, {"text": "-RankAvg: Average rank orders of each comment.", "cite_spans": [], "ref_spans": [], "section": "Compared Methods"}, {"text": "-TopkAvg: Select comments with higher scores than a threshold from each ranking and average their scores [5] . -NormAvg: Average normalized output scores of the model outputs, as typified by [2] . We used L2 normalization to each ranking as r = r/||r||. -SupWeight: Average weighted scores of the model outputs [19] . Our experimental results are shown in Table 1 . As a result of the ensemble, we confirmed that all ensemble methods perform better than when using a single model. In particular, the proposed method HPA has achieved the highest NDCG@k. PostNDCG achieved higher accuracy than RankNet. This implies that the method of calculating the similarity between models using evaluation metrics for each article is effective. However, it was less accurate than the common averaging ensemble method such as NormAvg. Since models were originally trained by a relative comparison of rankings, preserving the diversity of models is more effective for improving performance than selecting models with high confidence by using PostNDCG. The unsupervised method HPA outperformed the supervised method SupWeight. Therefore, we confirmed that it is better to determine the important model from the similarity between the predicted rankings rather than learning it in advance using the labeled data. Furthermore, we verified the effectiveness of NDCG@k as a similarity function to calculate HPA, compared to other similarity functions. We selected Precision, cosine similarity, Kendall rank correlation coefficient [11] , and Spearman rank correlation coefficient [21] as compared methods. Table 2 shows the results of HPA when the similarity function is changed. The NDCG@k functions outperformed other similarity functions. Furthermore, Precision@k performed better than cos. Note that Precision@k equals top-k cosine similarity. It indicates top-k focused measurement, evaluation metrics, is useful for the ensemble.", "cite_spans": [{"start": 105, "end": 108, "text": "[5]", "ref_id": "BIBREF5"}, {"start": 191, "end": 194, "text": "[2]", "ref_id": "BIBREF2"}, {"start": 311, "end": 315, "text": "[19]", "ref_id": "BIBREF20"}, {"start": 1510, "end": 1514, "text": "[11]", "ref_id": "BIBREF12"}, {"start": 1559, "end": 1563, "text": "[21]", "ref_id": "BIBREF22"}], "ref_spans": [{"start": 356, "end": 363, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 1585, "end": 1592, "text": "Table 2", "ref_id": "TABREF1"}], "section": "Compared Methods"}, {"text": "Analyzing comments on online forums, including news comments, has been widely studied in recent years. This line of research has included many studies on ranking comments according to user feedback [6, 9, 22] . On the other hand, there has also been much research on analyzing news comments in terms of \"constructiveness\" [7, 13, 18] . The most related research is Fujita et al. [7] . They ranked comments by using the C-score to evaluate the quality, instead of relying on user feedback. They created a news comment ranking dataset and improved the model performance from the viewpoint of the dataset structure. In our research, we further improve the the performance from the viewpoint of the model structure.", "cite_spans": [{"start": 198, "end": 201, "text": "[6,", "ref_id": "BIBREF7"}, {"start": 202, "end": 204, "text": "9,", "ref_id": "BIBREF10"}, {"start": 205, "end": 208, "text": "22]", "ref_id": "BIBREF23"}, {"start": 322, "end": 325, "text": "[7,", "ref_id": "BIBREF8"}, {"start": 326, "end": 329, "text": "13,", "ref_id": "BIBREF14"}, {"start": 330, "end": 333, "text": "18]", "ref_id": "BIBREF19"}, {"start": 379, "end": 382, "text": "[7]", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "Related Work"}, {"text": "In the ensemble methods for ranking task, there are methods to average model outputs [2, 5] , as mentioned in Sect. 3.2. Our method expands those methods by denoising through the relationships between predicted rankings. There is also research on learning the query-dependent weights with semi-supervised ensemble learning in an information retrieval task [8] . This method focused on selecting documents that are highly relevant to a query (article). It is effective for information retrieval tasks but not for ranking news comments task, because almost all such comments would be associated with a news article.", "cite_spans": [{"start": 85, "end": 88, "text": "[2,", "ref_id": "BIBREF2"}, {"start": 89, "end": 91, "text": "5]", "ref_id": "BIBREF5"}, {"start": 356, "end": 359, "text": "[8]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Related Work"}, {"text": "There are also approaches that improve the ranking model according to evaluation metrics: NDCG@k, LambdaRank [3] , and LambdaMART [4] . These methods handled model training by calculating NDCG@k between a gold ranking and a predicted one. It means NDCG@k was not used in inference. That fundamentally differs from our method which calculates NDCG@k between predicted rankings during inference.", "cite_spans": [{"start": 109, "end": 112, "text": "[3]", "ref_id": "BIBREF3"}, {"start": 130, "end": 133, "text": "[4]", "ref_id": "BIBREF4"}], "ref_spans": [], "section": "Related Work"}, {"text": "We proposed a hybrid unsupervised method of an output selection method and a typical averaging method. Our experiments showed that comparing predicted rankings using the evaluation metrics is effective for selecting and weighting models. For future work, we would like to compare the proposed method with the supervised ensemble method in terms of performance and speed. We also plan to combine various types of networks instead of using the same network structure.", "cite_spans": [], "ref_spans": [], "section": "Conclusion and Future Work"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Learning to rank using gradient descent", "authors": [{"first": "C", "middle": [], "last": "Burges", "suffix": ""}], "year": null, "venue": "Proceedings of the 22nd International Conference on Machine Learning (ICML 2005)", "volume": "", "issn": "", "pages": "89--96", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "Learning to rank using an ensemble of lambda-gradient models", "authors": [{"first": "C", "middle": [], "last": "Burges", "suffix": ""}, {"first": "K", "middle": [], "last": "Svore", "suffix": ""}, {"first": "P", "middle": [], "last": "Bennett", "suffix": ""}, {"first": "A", "middle": [], "last": "Pastusiak", "suffix": ""}, {"first": "Q", "middle": [], "last": "Wu", "suffix": ""}], "year": 2011, "venue": "Proceedings of the Learning to Rank Challenge", "volume": "", "issn": "", "pages": "25--35", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "Learning to rank with nonsmooth cost functions", "authors": [{"first": "C", "middle": ["J"], "last": "Burges", "suffix": ""}, {"first": "R", "middle": [], "last": "Ragno", "suffix": ""}, {"first": "Q", "middle": ["V"], "last": "Le", "suffix": ""}], "year": 2007, "venue": "Advances in Neural Information Processing Systems 19 (NIPS 2007)", "volume": "", "issn": "", "pages": "193--200", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "From RankNet to LambdaRank to LambdaMART: an overview", "authors": [{"first": "C", "middle": ["J"], "last": "Burges", "suffix": ""}], "year": 2010, "venue": "Learning", "volume": "11", "issn": "", "pages": "", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Reciprocal rank fusion outperforms condorcet and individual rank learning methods", "authors": [{"first": "G", "middle": ["V"], "last": "Cormack", "suffix": ""}, {"first": "C", "middle": ["L"], "last": "Clarke", "suffix": ""}, {"first": "S", "middle": [], "last": "Buettcher", "suffix": ""}], "year": 2009, "venue": "Proceedings of the 32nd International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR 2009)", "volume": "", "issn": "", "pages": "758--759", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Ranking mechanisms in Twitter-like forums", "authors": [{"first": "Das", "middle": [], "last": "Sarma", "suffix": ""}, {"first": "A", "middle": [], "last": "Das Sarma", "suffix": ""}, {"first": "A", "middle": [], "last": "Gollapudi", "suffix": ""}, {"first": "S", "middle": [], "last": "Panigrahy", "suffix": ""}, {"first": "R", "middle": [], "last": "", "suffix": ""}], "year": 2010, "venue": "Proceedings of the Third ACM International Conference on Web Search and Data Mining (WSDM 2010)", "volume": "", "issn": "", "pages": "21--30", "other_ids": {"DOI": ["10.1145/1718487.1718491"]}}, "BIBREF8": {"ref_id": "b8", "title": "Dataset creation for ranking constructive news comments", "authors": [{"first": "S", "middle": [], "last": "Fujita", "suffix": ""}, {"first": "H", "middle": [], "last": "Kobayashi", "suffix": ""}, {"first": "M", "middle": [], "last": "Okumura", "suffix": ""}], "year": 2019, "venue": "Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics (ACL 2019)", "volume": "", "issn": "", "pages": "2619--2626", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Semi-supervised ensemble ranking", "authors": [{"first": "S", "middle": ["C"], "last": "Hoi", "suffix": ""}, {"first": "R", "middle": [], "last": "Jin", "suffix": ""}], "year": 2008, "venue": "Proceedings of the 23rd National Conference on Artificial Intelligence", "volume": "2", "issn": "", "pages": "634--639", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Ranking comments on the social web", "authors": [{"first": "C", "middle": ["F"], "last": "Hsu", "suffix": ""}, {"first": "E", "middle": [], "last": "Khabiri", "suffix": ""}, {"first": "J", "middle": [], "last": "Caverlee", "suffix": ""}], "year": 2009, "venue": "Proceedings of the 2009 International Conference on Computational Science and Engineering (CSE 2009)", "volume": "4", "issn": "", "pages": "90--97", "other_ids": {"DOI": ["10.1109/CSE.2009.109"]}}, "BIBREF11": {"ref_id": "b11", "title": "Cumulated gain-based evaluation of IR techniques", "authors": [{"first": "K", "middle": [], "last": "J\u00e4rvelin", "suffix": ""}, {"first": "J", "middle": [], "last": "Kek\u00e4l\u00e4inen", "suffix": ""}], "year": 2002, "venue": "ACM Trans. Inform. Syst. (TOIS)", "volume": "20", "issn": "4", "pages": "422--446", "other_ids": {"DOI": ["10.1145/582415.582418"]}}, "BIBREF12": {"ref_id": "b12", "title": "A new measure of rank correlation", "authors": [{"first": "M", "middle": ["G"], "last": "Kendall", "suffix": ""}], "year": 1938, "venue": "Biometrika", "volume": "30", "issn": "1/2", "pages": "81--93", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Frustratingly easy model ensemble for abstractive summarization", "authors": [{"first": "H", "middle": [], "last": "Kobayashi", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing", "volume": "", "issn": "", "pages": "4165--4176", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "Constructive language in news comments", "authors": [{"first": "V", "middle": [], "last": "Kolhatkar", "suffix": ""}, {"first": "M", "middle": [], "last": "Taboada", "suffix": ""}], "year": 2017, "venue": "Proceedings of the First Workshop on Abusive Language Online", "volume": "", "issn": "", "pages": "11--17", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Applying conditional random fields to japanese morphological analysis", "authors": [{"first": "T", "middle": [], "last": "Kudo", "suffix": ""}, {"first": "K", "middle": [], "last": "Yamamoto", "suffix": ""}, {"first": "Y", "middle": [], "last": "Matsumoto", "suffix": ""}], "year": 2004, "venue": "Proceedings of the 2004 Conference on Empirical Methods in Natural Language Processing", "volume": "", "issn": "", "pages": "230--237", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "The weighted majority algorithm", "authors": [{"first": "N", "middle": [], "last": "Littlestone", "suffix": ""}, {"first": "M", "middle": ["K"], "last": "Warmuth", "suffix": ""}], "year": 1994, "venue": "Inform. Comput", "volume": "108", "issn": "2", "pages": "212--261", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Distributed representations of words and phrases and their compositionality", "authors": [{"first": "T", "middle": [], "last": "Mikolov", "suffix": ""}, {"first": "I", "middle": [], "last": "Sutskever", "suffix": ""}, {"first": "K", "middle": [], "last": "Chen", "suffix": ""}, {"first": "G", "middle": ["S"], "last": "Corrado", "suffix": ""}, {"first": "J", "middle": [], "last": "Dean", "suffix": ""}], "year": 2013, "venue": "Advances in Neural Information Processing Systems 26 (NIPS 2013)", "volume": "", "issn": "", "pages": "3111--3119", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Optimal ensemble averaging of neural networks", "authors": [{"first": "U", "middle": [], "last": "Naftaly", "suffix": ""}, {"first": "N", "middle": [], "last": "Intrator", "suffix": ""}, {"first": "D", "middle": [], "last": "Horn", "suffix": ""}], "year": 1997, "venue": "Netw.: Comput. Neural Syst", "volume": "8", "issn": "3", "pages": "283--296", "other_ids": {"DOI": ["https:/www.tandfonline.com/doi/abs/10.1088/0954-898X83004"]}}, "BIBREF19": {"ref_id": "b19", "title": "Automatically identifying good conversations online (yes, they do exist!)", "authors": [{"first": "C", "middle": [], "last": "Napoles", "suffix": ""}, {"first": "A", "middle": [], "last": "Pappu", "suffix": ""}, {"first": "J", "middle": ["R"], "last": "Tetreault", "suffix": ""}], "year": 2017, "venue": "Proceedings of the Eleventh International AAAI Conference on Web and Social Media (ICWSM 2017)", "volume": "", "issn": "", "pages": "628--631", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Actively searching for an effective neural network ensemble", "authors": [{"first": "D", "middle": ["W"], "last": "Opitz", "suffix": ""}, {"first": "J", "middle": ["W"], "last": "Shavlik", "suffix": ""}], "year": 1996, "venue": "Conn. Sci", "volume": "8", "issn": "3-4", "pages": "337--354", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "Implementation of a word segmentation dictionary called mecab-ipadic-NEologd and study on how to use it effectively for information retrieval", "authors": [{"first": "T", "middle": [], "last": "Sato", "suffix": ""}, {"first": "T", "middle": [], "last": "Hashimoto", "suffix": ""}, {"first": "M", "middle": [], "last": "Okumura", "suffix": ""}], "year": 2017, "venue": "Proceedings of the Twenty-three Annual Meeting of the Association for Natural Language Processing", "volume": "", "issn": "", "pages": "2017--2023", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "The proof and measurement of association between two things", "authors": [{"first": "C", "middle": [], "last": "Spearman", "suffix": ""}], "year": 1904, "venue": "Am. J. Psychol", "volume": "15", "issn": "1", "pages": "72--101", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "Is this post persuasive? Ranking argumentative comments in online forum", "authors": [{"first": "Z", "middle": [], "last": "Wei", "suffix": ""}, {"first": "Y", "middle": [], "last": "Liu", "suffix": ""}, {"first": "Y", "middle": [], "last": "Li", "suffix": ""}], "year": 2016, "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (ACL 2016)", "volume": "2", "issn": "", "pages": "195--200", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "Example of HPA.", "latex": null, "type": "figure"}, "FIGREF1": {"text": "Scores are weighted on the basis of NDCG@k on the validation dataset. Note that their weights are constant values per model. -PostNDCG: Select the best single model per article introduced in Sect. 2.2. Our Methods: We show proposed methods as following: -HPA: Hybrid the output selection method and a typical averaging method proposed in Sect. 2.3. We set k = 50, which obtained the highest accuracy in k = {5 \u00d7 n, n = 1, ..., 20} on the validation dataset. -SPA: Select models using the pseudo answer and average them (equal to HPA without the weighting). We set k = 50 which is the same setting of HPA. -WPA: Average weighted model outputs using the pseudo answer (equal to HPA without the selecting).", "latex": null, "type": "figure"}, "TABREF0": {"text": "NDCG@k", "latex": null, "type": "table"}, "TABREF1": {"text": "Comparison of similarity functions for HPA.", "latex": null, "type": "table"}}, "back_matter": []}